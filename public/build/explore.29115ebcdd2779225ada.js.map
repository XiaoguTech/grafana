{"version":3,"sources":["webpack:///./public/app/containers/Explore/Legend.tsx","webpack:///./public/app/containers/Explore/Graph.tsx","webpack:///./public/app/containers/Explore/utils/dom.ts","webpack:///./public/app/containers/Explore/slate-plugins/prism/index.tsx","webpack:///./public/app/containers/Explore/slate-plugins/prism/promql.ts","webpack:///./public/app/containers/Explore/slate-plugins/braces.ts","webpack:///./public/app/containers/Explore/utils/prometheus.ts","webpack:///./public/app/containers/Explore/Typeahead.tsx","webpack:///./public/app/containers/Explore/QueryField.tsx","webpack:///./public/app/containers/Explore/slate-plugins/clear.ts","webpack:///./public/app/containers/Explore/slate-plugins/newline.ts","webpack:///./public/app/containers/Explore/PromQueryField.tsx","webpack:///./public/app/containers/Explore/slate-plugins/runner.ts","webpack:///./public/app/containers/Explore/QueryRows.tsx","webpack:///./public/app/containers/Explore/utils/query.ts","webpack:///./public/app/containers/Explore/TimePicker.tsx","webpack:///./public/app/containers/Explore/Table.tsx","webpack:///./public/app/containers/Explore/Logs.tsx","webpack:///./public/app/containers/Explore/ElapsedTime.tsx","webpack:///./public/app/containers/Explore/Explore.tsx","webpack:///./public/app/containers/Explore/Wrapper.tsx"],"names":["LegendItem","_a","series","react_default","a","createElement","className","style","color","alias","_super","Legend","tslib_es6","prototype","render","this","props","_b","items","data","map","key","id","react","FLOT_OPTIONS","legend","show","lines","linewidth","zero","shadowSize","grid","minBorderMargin","markings","backgroundColor","borderWidth","clickable","margin","left","right","labelMarginX","Graph_Graph","Graph","componentDidMount","draw","componentDidUpdate","prevProps","options","split","height","userOptions","$el","jquery_js_exposed_default","ts","label","getFlotPairs","ticks","width","range","from","to","moment_default","isMoment","datemath","min","valueOf","max","dynamicOptions","xaxis","mode","timeformat","secPerTick","time_format","plot","empty","loading","length","Explore_Legend","__webpack_exports__","getNextCharacter","global","window","selection","getSelection","anchorNode","getRangeAt","text","textContent","offset","startOffset","substr","Element","closest","s","i","matches","document","ownerDocument","querySelectorAll","el","item","parentElement","TOKEN_MARK","FUNCTIONS","insertText","documentation","concat","detail","promql","comment","pattern","lookbehind","context-aggregation","inside","label-key","context-labels","label-value","greedy","function","RegExp","f","join","context-range","range-duration","number","operator","punctuation","BRACES","[","{","(","NON_SELECTOR_SPACE_REGEXP","RATE_RANGES","prometheus_cleanText","replace","trim","selectorRegexp","labelRegexp","parseSelector","query","cursorOffset","match","selector","labelKeys","Error","prefix","slice","prefixOpen","lastIndexOf","prefixClose","suffix","suffixClose","indexOf","suffixOpenIndex","suffixOpen","labels","delimiterIndex","value","metricMatch","Object","keys","sort","Typeahead_TypeaheadItem","TypeaheadItem","_this","apply","arguments","getRef","onClick","onClickItem","isSelected","offsetParent","container","offsetTop","scrollTop","offsetHeight","scrollIntoView","ref","PureComponent","Typeahead_TypeaheadGroup","TypeaheadGroup","selected","Explore_Typeahead","Typeahead","groupedItems","menuRef","selectedItem","g","TYPEAHEAD_DEBOUNCE","flattenSuggestions","reduce","acc","makeFragment","line","slate_es","create","type","nodes","getInitialValue","QueryField_QueryField","QueryField","context","call","onChange","changed","state","setState","handleChangeValue","requestAnimationFrame","handleTypeahead","onValueChanged","slate_plain_serializer_es","serialize","lodash_default","debounce","cleanText","onTypeahead","wrapperNode","editorNode","isBlurred","prefix_1","suggestions","refresher_1","refresher","filteredSuggestions","group","skipFilter","filter","c","filterText","prefixMatch","skipSort","sortBy","sortText","typeaheadPrefix","typeaheadContext","typeaheadText","then","catch","e","console","error","onKeyDown","event","change","typeaheadIndex","menuEl","preventDefault","stopPropagation","resetTypeahead","ctrlKey","flattenedSuggestions","suggestion","Math","abs","applyTypeahead","handleBlur","onBlur","resetTimer","setTimeout","handleFocus","onFocus","onClickMenu","updateMenu","menu","node","rect_1","getBoundingClientRect","scrollX_1","scrollX","scrollY_1","scrollY","opacity","top","removeAttribute","renderMenu","portalPrefix","selectedIndex","QueryField_Portal","plugins","isCollapsed","anchorText","anchorOffset","forward","deleteForward","shiftKey","indent","trimLeft","getIndent","startBlock","splitBlock","focus","additionalPlugins","initialValue","componentWillUnmount","clearTimeout","componentWillReceiveProps","nextProps","onWillApplySuggestion","suggestionText","move","backward","deleteBackwards","suffixLength","fragment","deleteBackward","insertFragment","slate_react_es","autoCorrect","placeholder","spellCheck","Component","Portal","index","classList","add","body","appendChild","removeChild","react_dom_default","createPortal","children","Explore_QueryField","DEFAULT_KEYS","HISTOGRAM_GROUP","HISTORY_COUNT_CUTOFF","METRIC_MARK","PRISM_LANGUAGE","RECORDING_RULES_GROUP","wrapLabel","setFunctionMove","willApplySuggestion","nextChar","startsWith","Explore_PromQueryField","PromQueryField","onChangeMetrics","values","selectedOptions","metric","onChangeQuery","override","onQueryChange","onClickHintFix","hint","fix","action","onReceiveMetrics","metrics","language","field","prism_default","languages","setPrismTokens","typeahead","wrapperClasses","Array","labelKeyNode","sibling","previousSibling","querySelector","getPreviousCousin","labelKey","result","getTypeahead","log","request","url","fetch","search","handler","RunnerPlugin","onPressEnter","definition","renderMark","mark","get","decorateNode","texts","getTexts","toArray","tstring","t","grammar","tokens","tokenize","decorations","startText","shift","endText","endOffset","start","processToken","token","types","content","newlines","end","available","remaining","anchorKey","focusKey","focusOffset","marks","push","_i","tokens_1","PrismPlugin","histogramMetrics","labelValues","metricsByPrefix","fetchMetricNames","fetchHistogramMetrics","includes","getRangeTypeahead","getLabelTypeahead","getAggregationTypeahead","getEmptyTypeahead","history","historyItems","chain","uniqBy","take","h","cutoffTs","Date","now","historyForItem","count","recent","fromNow","addHistoryMetadata","anchorBlock","getText","leftSide","openParensAggregationIndex","openParensSelectorIndex","closeParensSelectorIndex","selectorString","fetchSeriesLabels","parsedSelector","containsMetric","existingKeys","possibleKeys","difference","Promise","all","fetchLabelValues","histogramSeries","res","_c","sent","json","exisingValues","e_1","name","withName","callback","_d","forEach","l","__name__","rest","processLabels","e_2","delimiter","ruleRegex","ruleNames","test","rulesOption","metricsOptions","groupBy","metricsForPrefix","m","groupMetricsByPrefix","error_1","histogramOptions","hm","es","initialQuery","QueryRows_QueryRow","QueryRow","onClickAddButton","onAddQueryRow","onClickClearButton","onClickRemoveButton","onRemoveQueryRow","onExecuteQuery","edited","queryError","queryHint","QueryRows_QueryRows","QueryRows","queries","queryErrors","queryHints","handlers","q","generateQueryKey","random","ensureQueries","hasQuery","some","DATE_FORMAT","DEFAULT_RANGE","parseTime","isUtc","asString","isNaN","epoch","parseInt","moment__WEBPACK_IMPORTED_MODULE_2___default","utc","format","TimePicker","handleChangeFrom","fromRaw","target","handleChangeTo","toRaw","handleClickApply","onChangeTime","app_core_utils_datemath__WEBPACK_IMPORTED_MODULE_3__","rangeString","app_core_utils_rangeutil__WEBPACK_IMPORTED_MODULE_4__","isOpen","handleClickLeft","handleClickPicker","handleClickRight","handleClickRefresh","handleClickRelativeOption","dropdownRef","dropdownEl","refreshInterval","tslib__WEBPACK_IMPORTED_MODULE_0__","direction","timespan","getTimeOptions","renderDropdown","timeOptions","react__WEBPACK_IMPORTED_MODULE_1___default","section","option","active","display","react__WEBPACK_IMPORTED_MODULE_1__","EMPTY_TABLE","Cell","columnIndex","rowIndex","table","onClickCell","column","columns","filterable","Table","tableModel","rows","col","row","j","String","Entry","entry","searchMatches","lastMatchEnd_1","spans","Fragment","title","Logs","hasData","logLevel","timestamp","timeFromNow","timeLocal","ElapsedTime","elapsed","tick","timer","setInterval","time","clearInterval","toFixed","Explore","nextQueries","_utils_query__WEBPACK_IMPORTED_MODULE_16__","onChangeDatasource","datasource","datasourceError","datasourceLoading","graphResult","latency","logsResult","tableResult","datasourceSrv","setDatasource","prevQuery","nextQuery","onSubmit","undefined","nextRange","onClickClear","onClickCloseSplit","onChangeSplit","onClickGraphButton","showingGraph","onClickLogsButton","showingLogs","onClickSplit","onClickTableButton","showingTable","onClickTableCell","columnKey","rowValue","onModifyQueries","modifyQuery","supportsGraph","supportsLogs","supportsTable","runTableQuery","runGraphQuery","runLogsQuery","metadataRequest","initialState","initial","parsed","JSON","parse","app_core_utils_location_util__WEBPACK_IMPORTED_MODULE_8__","_TimePicker__WEBPACK_IMPORTED_MODULE_15__","parseUrlState","routeParams","datasourceMissing","initialDatasource","requestOptions","datasources","getExploreSources","meta","explore","componentDidCatch","logs","datasourceId","testDatasource","testResult","status","message","statusText","historyKey","app_core_store__WEBPACK_IMPORTED_MODULE_6__","getObject","init","onQuerySuccess","setObject","buildQueryOptions","targetOptions","resolution","offsetWidth","absoluteRange","app_core_utils_datemath__WEBPACK_IMPORTED_MODULE_9__","interval","app_core_utils_kbn__WEBPACK_IMPORTED_MODULE_4__","calculateInterval","targets","expr","instant","hinting","dataList","seriesData","datapoints","colorIndex","app_core_utils_colors__WEBPACK_IMPORTED_MODULE_5__","app_core_time_series2__WEBPACK_IMPORTED_MODULE_7__","unit","makeTimeSeriesList","hints","hintsByIndex","makeHints","response_1","response_2","logsData","response_3","position","showingBoth","graphHeight","graphButtonActive","logsButtonActive","tableButtonActive","exploreClass","ds","selectedDatasource","react_select__WEBPACK_IMPORTED_MODULE_3__","clearable","_ElapsedTime__WEBPACK_IMPORTED_MODULE_10__","_QueryRows__WEBPACK_IMPORTED_MODULE_11__","_Graph__WEBPACK_IMPORTED_MODULE_12__","_Table__WEBPACK_IMPORTED_MODULE_14__","_Logs__WEBPACK_IMPORTED_MODULE_13__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","Wrapper","handleChangeSplit","_Explore__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"explore.29115ebcdd2779225ada.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nconst LegendItem = ({ series }) => (\n  <div className=\"graph-legend-series\">\n    <div className=\"graph-legend-icon\">\n      <i className=\"fa fa-minus pointer\" style={{ color: series.color }} />\n    </div>\n    <a className=\"graph-legend-alias pointer\">{series.alias}</a>\n  </div>\n);\n\nexport default class Legend extends PureComponent<any, any> {\n  render() {\n    const { className = '', data } = this.props;\n    const items = data || [];\n    return (\n      <div className={`${className} graph-legend ps`}>\n        {items.map(series => <LegendItem key={series.id} series={series} />)}\n      </div>\n    );\n  }\n}\n","import $ from 'jquery';\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.time';\nimport * as dateMath from 'app/core/utils/datemath';\nimport TimeSeries from 'app/core/time_series2';\n\nimport Legend from './Legend';\n\n// Copied from graph.ts\nfunction time_format(ticks, min, max) {\n  if (min && max && ticks) {\n    const range = max - min;\n    const secPerTick = range / ticks / 1000;\n    const oneDay = 86400000;\n    const oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  return '%H:%M';\n}\n\nconst FLOT_OPTIONS = {\n  legend: {\n    show: false,\n  },\n  series: {\n    lines: {\n      linewidth: 1,\n      zero: false,\n    },\n    shadowSize: 0,\n  },\n  grid: {\n    minBorderMargin: 0,\n    markings: [],\n    backgroundColor: null,\n    borderWidth: 0,\n    // hoverable: true,\n    clickable: true,\n    color: '#a1a1a1',\n    margin: { left: 0, right: 0 },\n    labelMarginX: 0,\n  },\n  // selection: {\n  //   mode: 'x',\n  //   color: '#666',\n  // },\n  // crosshair: {\n  //   mode: 'x',\n  // },\n};\n\nclass Graph extends Component<any, any> {\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data !== this.props.data ||\n      prevProps.options !== this.props.options ||\n      prevProps.split !== this.props.split ||\n      prevProps.height !== this.props.height\n    ) {\n      this.draw();\n    }\n  }\n\n  draw() {\n    const { data, options: userOptions } = this.props;\n    const $el = $(`#${this.props.id}`);\n    if (!data) {\n      $el.empty();\n      return;\n    }\n    const series = data.map((ts: TimeSeries) => ({\n      color: ts.color,\n      label: ts.label,\n      data: ts.getFlotPairs('null'),\n    }));\n\n    const ticks = $el.width() / 100;\n    let { from, to } = userOptions.range;\n    if (!moment.isMoment(from)) {\n      from = dateMath.parse(from, false);\n    }\n    if (!moment.isMoment(to)) {\n      to = dateMath.parse(to, true);\n    }\n    const min = from.valueOf();\n    const max = to.valueOf();\n    const dynamicOptions = {\n      xaxis: {\n        mode: 'time',\n        min: min,\n        max: max,\n        label: 'Datetime',\n        ticks: ticks,\n        timeformat: time_format(ticks, min, max),\n      },\n    };\n    const options = {\n      ...FLOT_OPTIONS,\n      ...dynamicOptions,\n      ...userOptions,\n    };\n    $.plot($el, series, options);\n  }\n\n  render() {\n    const { data, height, loading } = this.props;\n    if (!loading && data && data.length === 0) {\n      return (\n        <div className=\"panel-container\">\n          <div className=\"muted m-a-1\">The queries returned no time series to graph.</div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"panel-container\">\n        <div id={this.props.id} className=\"explore-graph\" style={{ height }} />\n        <Legend data={data} />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","// Node.closest() polyfill\nif ('Element' in window && !Element.prototype.closest) {\n  Element.prototype.closest = function(this: any, s) {\n    const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n    let el = this;\n    let i;\n    // eslint-disable-next-line\n    do {\n      i = matches.length;\n      // eslint-disable-next-line\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while (i < 0 && (el = el.parentElement));\n    return el;\n  };\n}\n\nexport function getPreviousCousin(node, selector) {\n  let sibling = node.parentElement.previousSibling;\n  let el;\n  while (sibling) {\n    el = sibling.querySelector(selector);\n    if (el) {\n      return el;\n    }\n    sibling = sibling.previousSibling;\n  }\n  return undefined;\n}\n\nexport function getNextCharacter(global = window) {\n  const selection = global.getSelection();\n  if (!selection.anchorNode) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  const text = selection.anchorNode.textContent;\n  const offset = range.startOffset;\n  return text.substr(offset, 1);\n}\n","import React from 'react';\nimport Prism from 'prismjs';\n\nconst TOKEN_MARK = 'prism-token';\n\nexport function setPrismTokens(language, field, values, alias = 'variable') {\n  Prism.languages[language][field] = {\n    alias,\n    pattern: new RegExp(`(?:^|\\\\s)(${values.join('|')})(?:$|\\\\s)`),\n  };\n}\n\n/**\n * Code-highlighting plugin based on Prism and\n * https://github.com/ianstormtaylor/slate/blob/master/examples/code-highlighting/index.js\n *\n * (Adapted to handle nested grammar definitions.)\n */\n\nexport default function PrismPlugin({ definition, language }) {\n  if (definition) {\n    // Don't override exising modified definitions\n    Prism.languages[language] = Prism.languages[language] || definition;\n  }\n\n  return {\n    /**\n     * Render a Slate mark with appropiate CSS class names\n     *\n     * @param {Object} props\n     * @return {Element}\n     */\n\n    renderMark(props) {\n      const { children, mark } = props;\n      // Only apply spans to marks identified by this plugin\n      if (mark.type !== TOKEN_MARK) {\n        return undefined;\n      }\n      const className = `token ${mark.data.get('types')}`;\n      return <span className={className}>{children}</span>;\n    },\n\n    /**\n     * Decorate code blocks with Prism.js highlighting.\n     *\n     * @param {Node} node\n     * @return {Array}\n     */\n\n    decorateNode(node) {\n      if (node.type !== 'paragraph') {\n        return [];\n      }\n\n      const texts = node.getTexts().toArray();\n      const tstring = texts.map(t => t.text).join('\\n');\n      const grammar = Prism.languages[language];\n      const tokens = Prism.tokenize(tstring, grammar);\n      const decorations = [];\n      let startText = texts.shift();\n      let endText = startText;\n      let startOffset = 0;\n      let endOffset = 0;\n      let start = 0;\n\n      function processToken(token, acc?) {\n        // Accumulate token types down the tree\n        const types = `${acc || ''} ${token.type || ''} ${token.alias || ''}`;\n\n        // Add mark for token node\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          startText = endText;\n          startOffset = endOffset;\n\n          const content = typeof token === 'string' ? token : token.content;\n          const newlines = content.split('\\n').length - 1;\n          const length = content.length - newlines;\n          const end = start + length;\n\n          let available = startText.text.length - startOffset;\n          let remaining = length;\n\n          endOffset = startOffset + remaining;\n\n          while (available < remaining) {\n            endText = texts.shift();\n            remaining = length - available;\n            available = endText.text.length;\n            endOffset = remaining;\n          }\n\n          // Inject marks from up the tree (acc) as well\n          if (typeof token !== 'string' || acc) {\n            const range = {\n              anchorKey: startText.key,\n              anchorOffset: startOffset,\n              focusKey: endText.key,\n              focusOffset: endOffset,\n              marks: [{ type: TOKEN_MARK, data: { types } }],\n            };\n\n            decorations.push(range);\n          }\n\n          start = end;\n        } else if (token.content && token.content.length) {\n          // Tokens can be nested\n          for (const subToken of token.content) {\n            processToken(subToken, types);\n          }\n        }\n      }\n\n      // Process top-level tokens\n      for (const token of tokens) {\n        processToken(token);\n      }\n\n      return decorations;\n    },\n  };\n}\n","/* tslint:disable max-line-length */\n\nexport const OPERATORS = ['by', 'group_left', 'group_right', 'ignoring', 'on', 'offset', 'without'];\n\nconst AGGREGATION_OPERATORS = [\n  {\n    label: 'sum',\n    insertText: 'sum()',\n    documentation: 'Calculate sum over dimensions',\n  },\n  {\n    label: 'min',\n    insertText: 'min()',\n    documentation: 'Select minimum over dimensions',\n  },\n  {\n    label: 'max',\n    insertText: 'max()',\n    documentation: 'Select maximum over dimensions',\n  },\n  {\n    label: 'avg',\n    insertText: 'avg()',\n    documentation: 'Calculate the average over dimensions',\n  },\n  {\n    label: 'stddev',\n    insertText: 'stddev()',\n    documentation: 'Calculate population standard deviation over dimensions',\n  },\n  {\n    label: 'stdvar',\n    insertText: 'stdvar()',\n    documentation: 'Calculate population standard variance over dimensions',\n  },\n  {\n    label: 'count',\n    insertText: 'count()',\n    documentation: 'Count number of elements in the vector',\n  },\n  {\n    label: 'count_values',\n    insertText: 'count_values()',\n    documentation: 'Count number of elements with the same value',\n  },\n  {\n    label: 'bottomk',\n    insertText: 'bottomk()',\n    documentation: 'Smallest k elements by sample value',\n  },\n  {\n    label: 'topk',\n    insertText: 'topk()',\n    documentation: 'Largest k elements by sample value',\n  },\n  {\n    label: 'quantile',\n    insertText: 'quantile()',\n    documentation: 'Calculate φ-quantile (0 ≤ φ ≤ 1) over dimensions',\n  },\n];\n\nexport const FUNCTIONS = [\n  ...AGGREGATION_OPERATORS,\n  {\n    insertText: 'abs()',\n    label: 'abs',\n    detail: 'abs(v instant-vector)',\n    documentation: 'Returns the input vector with all sample values converted to their absolute value.',\n  },\n  {\n    insertText: 'absent()',\n    label: 'absent',\n    detail: 'absent(v instant-vector)',\n    documentation:\n      'Returns an empty vector if the vector passed to it has any elements and a 1-element vector with the value 1 if the vector passed to it has no elements. This is useful for alerting on when no time series exist for a given metric name and label combination.',\n  },\n  {\n    insertText: 'ceil()',\n    label: 'ceil',\n    detail: 'ceil(v instant-vector)',\n    documentation: 'Rounds the sample values of all elements in `v` up to the nearest integer.',\n  },\n  {\n    insertText: 'changes()',\n    label: 'changes',\n    detail: 'changes(v range-vector)',\n    documentation:\n      'For each input time series, `changes(v range-vector)` returns the number of times its value has changed within the provided time range as an instant vector.',\n  },\n  {\n    insertText: 'clamp_max()',\n    label: 'clamp_max',\n    detail: 'clamp_max(v instant-vector, max scalar)',\n    documentation: 'Clamps the sample values of all elements in `v` to have an upper limit of `max`.',\n  },\n  {\n    insertText: 'clamp_min()',\n    label: 'clamp_min',\n    detail: 'clamp_min(v instant-vector, min scalar)',\n    documentation: 'Clamps the sample values of all elements in `v` to have a lower limit of `min`.',\n  },\n  {\n    insertText: 'count_scalar()',\n    label: 'count_scalar',\n    detail: 'count_scalar(v instant-vector)',\n    documentation:\n      'Returns the number of elements in a time series vector as a scalar. This is in contrast to the `count()` aggregation operator, which always returns a vector (an empty one if the input vector is empty) and allows grouping by labels via a `by` clause.',\n  },\n  {\n    insertText: 'day_of_month()',\n    label: 'day_of_month',\n    detail: 'day_of_month(v=vector(time()) instant-vector)',\n    documentation: 'Returns the day of the month for each of the given times in UTC. Returned values are from 1 to 31.',\n  },\n  {\n    insertText: 'day_of_week()',\n    label: 'day_of_week',\n    detail: 'day_of_week(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the day of the week for each of the given times in UTC. Returned values are from 0 to 6, where 0 means Sunday etc.',\n  },\n  {\n    insertText: 'days_in_month()',\n    label: 'days_in_month',\n    detail: 'days_in_month(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns number of days in the month for each of the given times in UTC. Returned values are from 28 to 31.',\n  },\n  {\n    insertText: 'delta()',\n    label: 'delta',\n    detail: 'delta(v range-vector)',\n    documentation:\n      'Calculates the difference between the first and last value of each time series element in a range vector `v`, returning an instant vector with the given deltas and equivalent labels. The delta is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if the sample values are all integers.',\n  },\n  {\n    insertText: 'deriv()',\n    label: 'deriv',\n    detail: 'deriv(v range-vector)',\n    documentation:\n      'Calculates the per-second derivative of the time series in a range vector `v`, using simple linear regression.',\n  },\n  {\n    insertText: 'drop_common_labels()',\n    label: 'drop_common_labels',\n    detail: 'drop_common_labels(instant-vector)',\n    documentation: 'Drops all labels that have the same name and value across all series in the input vector.',\n  },\n  {\n    insertText: 'exp()',\n    label: 'exp',\n    detail: 'exp(v instant-vector)',\n    documentation:\n      'Calculates the exponential function for all elements in `v`.\\nSpecial cases are:\\n* `Exp(+Inf) = +Inf` \\n* `Exp(NaN) = NaN`',\n  },\n  {\n    insertText: 'floor()',\n    label: 'floor',\n    detail: 'floor(v instant-vector)',\n    documentation: 'Rounds the sample values of all elements in `v` down to the nearest integer.',\n  },\n  {\n    insertText: 'histogram_quantile()',\n    label: 'histogram_quantile',\n    detail: 'histogram_quantile(φ float, b instant-vector)',\n    documentation:\n      'Calculates the φ-quantile (0 ≤ φ ≤ 1) from the buckets `b` of a histogram. The samples in `b` are the counts of observations in each bucket. Each sample must have a label `le` where the label value denotes the inclusive upper bound of the bucket. (Samples without such a label are silently ignored.) The histogram metric type automatically provides time series with the `_bucket` suffix and the appropriate labels.',\n  },\n  {\n    insertText: 'holt_winters()',\n    label: 'holt_winters',\n    detail: 'holt_winters(v range-vector, sf scalar, tf scalar)',\n    documentation:\n      'Produces a smoothed value for time series based on the range in `v`. The lower the smoothing factor `sf`, the more importance is given to old data. The higher the trend factor `tf`, the more trends in the data is considered. Both `sf` and `tf` must be between 0 and 1.',\n  },\n  {\n    insertText: 'hour()',\n    label: 'hour',\n    detail: 'hour(v=vector(time()) instant-vector)',\n    documentation: 'Returns the hour of the day for each of the given times in UTC. Returned values are from 0 to 23.',\n  },\n  {\n    insertText: 'idelta()',\n    label: 'idelta',\n    detail: 'idelta(v range-vector)',\n    documentation:\n      'Calculates the difference between the last two samples in the range vector `v`, returning an instant vector with the given deltas and equivalent labels.',\n  },\n  {\n    insertText: 'increase()',\n    label: 'increase',\n    detail: 'increase(v range-vector)',\n    documentation:\n      'Calculates the increase in the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. The increase is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if a counter increases only by integer increments.',\n  },\n  {\n    insertText: 'irate()',\n    label: 'irate',\n    detail: 'irate(v range-vector)',\n    documentation:\n      'Calculates the per-second instant rate of increase of the time series in the range vector. This is based on the last two data points. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for.',\n  },\n  {\n    insertText: 'label_replace()',\n    label: 'label_replace',\n    detail: 'label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)',\n    documentation:\n      \"For each timeseries in `v`, `label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)`  matches the regular expression `regex` against the label `src_label`.  If it matches, then the timeseries is returned with the label `dst_label` replaced by the expansion of `replacement`. `$1` is replaced with the first matching subgroup, `$2` with the second etc. If the regular expression doesn't match then the timeseries is returned unchanged.\",\n  },\n  {\n    insertText: 'ln()',\n    label: 'ln',\n    detail: 'ln(v instant-vector)',\n    documentation:\n      'calculates the natural logarithm for all elements in `v`.\\nSpecial cases are:\\n * `ln(+Inf) = +Inf`\\n * `ln(0) = -Inf`\\n * `ln(x < 0) = NaN`\\n * `ln(NaN) = NaN`',\n  },\n  {\n    insertText: 'log2()',\n    label: 'log2',\n    detail: 'log2(v instant-vector)',\n    documentation:\n      'Calculates the binary logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.',\n  },\n  {\n    insertText: 'log10()',\n    label: 'log10',\n    detail: 'log10(v instant-vector)',\n    documentation:\n      'Calculates the decimal logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.',\n  },\n  {\n    insertText: 'minute()',\n    label: 'minute',\n    detail: 'minute(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the minute of the hour for each of the given times in UTC. Returned values are from 0 to 59.',\n  },\n  {\n    insertText: 'month()',\n    label: 'month',\n    detail: 'month(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the month of the year for each of the given times in UTC. Returned values are from 1 to 12, where 1 means January etc.',\n  },\n  {\n    insertText: 'predict_linear()',\n    label: 'predict_linear',\n    detail: 'predict_linear(v range-vector, t scalar)',\n    documentation:\n      'Predicts the value of time series `t` seconds from now, based on the range vector `v`, using simple linear regression.',\n  },\n  {\n    insertText: 'rate()',\n    label: 'rate',\n    detail: 'rate(v range-vector)',\n    documentation:\n      \"Calculates the per-second average rate of increase of the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. Also, the calculation extrapolates to the ends of the time range, allowing for missed scrapes or imperfect alignment of scrape cycles with the range's time period.\",\n  },\n  {\n    insertText: 'resets()',\n    label: 'resets',\n    detail: 'resets(v range-vector)',\n    documentation:\n      'For each input time series, `resets(v range-vector)` returns the number of counter resets within the provided time range as an instant vector. Any decrease in the value between two consecutive samples is interpreted as a counter reset.',\n  },\n  {\n    insertText: 'round()',\n    label: 'round',\n    detail: 'round(v instant-vector, to_nearest=1 scalar)',\n    documentation:\n      'Rounds the sample values of all elements in `v` to the nearest integer. Ties are resolved by rounding up. The optional `to_nearest` argument allows specifying the nearest multiple to which the sample values should be rounded. This multiple may also be a fraction.',\n  },\n  {\n    insertText: 'scalar()',\n    label: 'scalar',\n    detail: 'scalar(v instant-vector)',\n    documentation:\n      'Given a single-element input vector, `scalar(v instant-vector)` returns the sample value of that single element as a scalar. If the input vector does not have exactly one element, `scalar` will return `NaN`.',\n  },\n  {\n    insertText: 'sort()',\n    label: 'sort',\n    detail: 'sort(v instant-vector)',\n    documentation: 'Returns vector elements sorted by their sample values, in ascending order.',\n  },\n  {\n    insertText: 'sort_desc()',\n    label: 'sort_desc',\n    detail: 'sort_desc(v instant-vector)',\n    documentation: 'Returns vector elements sorted by their sample values, in descending order.',\n  },\n  {\n    insertText: 'sqrt()',\n    label: 'sqrt',\n    detail: 'sqrt(v instant-vector)',\n    documentation: 'Calculates the square root of all elements in `v`.',\n  },\n  {\n    insertText: 'time()',\n    label: 'time',\n    detail: 'time()',\n    documentation:\n      'Returns the number of seconds since January 1, 1970 UTC. Note that this does not actually return the current time, but the time at which the expression is to be evaluated.',\n  },\n  {\n    insertText: 'vector()',\n    label: 'vector',\n    detail: 'vector(s scalar)',\n    documentation: 'Returns the scalar `s` as a vector with no labels.',\n  },\n  {\n    insertText: 'year()',\n    label: 'year',\n    detail: 'year(v=vector(time()) instant-vector)',\n    documentation: 'Returns the year for each of the given times in UTC.',\n  },\n  {\n    insertText: 'avg_over_time()',\n    label: 'avg_over_time',\n    detail: 'avg_over_time(range-vector)',\n    documentation: 'The average value of all points in the specified interval.',\n  },\n  {\n    insertText: 'min_over_time()',\n    label: 'min_over_time',\n    detail: 'min_over_time(range-vector)',\n    documentation: 'The minimum value of all points in the specified interval.',\n  },\n  {\n    insertText: 'max_over_time()',\n    label: 'max_over_time',\n    detail: 'max_over_time(range-vector)',\n    documentation: 'The maximum value of all points in the specified interval.',\n  },\n  {\n    insertText: 'sum_over_time()',\n    label: 'sum_over_time',\n    detail: 'sum_over_time(range-vector)',\n    documentation: 'The sum of all values in the specified interval.',\n  },\n  {\n    insertText: 'count_over_time()',\n    label: 'count_over_time',\n    detail: 'count_over_time(range-vector)',\n    documentation: 'The count of all values in the specified interval.',\n  },\n  {\n    insertText: 'quantile_over_time()',\n    label: 'quantile_over_time',\n    detail: 'quantile_over_time(scalar, range-vector)',\n    documentation: 'The φ-quantile (0 ≤ φ ≤ 1) of the values in the specified interval.',\n  },\n  {\n    insertText: 'stddev_over_time()',\n    label: 'stddev_over_time',\n    detail: 'stddev_over_time(range-vector)',\n    documentation: 'The population standard deviation of the values in the specified interval.',\n  },\n  {\n    insertText: 'stdvar_over_time()',\n    label: 'stdvar_over_time',\n    detail: 'stdvar_over_time(range-vector)',\n    documentation: 'The population standard variance of the values in the specified interval.',\n  },\n];\n\nconst tokenizer = {\n  comment: {\n    pattern: /(^|[^\\n])#.*/,\n    lookbehind: true,\n  },\n  'context-aggregation': {\n    pattern: /((by|without)\\s*)\\([^)]*\\)/, // by ()\n    lookbehind: true,\n    inside: {\n      'label-key': {\n        pattern: /[^,\\s][^,]*[^,\\s]*/,\n        alias: 'attr-name',\n      },\n    },\n  },\n  'context-labels': {\n    pattern: /\\{[^}]*(?=})/,\n    inside: {\n      'label-key': {\n        pattern: /[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n        alias: 'attr-name',\n      },\n      'label-value': {\n        pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'attr-value',\n      },\n    },\n  },\n  function: new RegExp(`\\\\b(?:${FUNCTIONS.map(f => f.label).join('|')})(?=\\\\s*\\\\()`, 'i'),\n  'context-range': [\n    {\n      pattern: /\\[[^\\]]*(?=])/, // [1m]\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n    {\n      pattern: /(offset\\s+)\\w+/, // offset 1m\n      lookbehind: true,\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n  ],\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  operator: new RegExp(`/[-+*/=%^~]|&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\\\b(?:${OPERATORS.join('|')})\\\\b`, 'i'),\n  punctuation: /[{};()`,.]/,\n};\n\nexport default tokenizer;\n","const BRACES = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nconst NON_SELECTOR_SPACE_REGEXP = / (?![^}]+})/;\n\nexport default function BracesPlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      switch (event.key) {\n        case '{':\n        case '[': {\n          event.preventDefault();\n          // Insert matching braces\n          change\n            .insertText(`${event.key}${BRACES[event.key]}`)\n            .move(-1)\n            .focus();\n          return true;\n        }\n\n        case '(': {\n          event.preventDefault();\n          const text = value.anchorText.text;\n          const offset = value.anchorOffset;\n          const delimiterIndex = text.slice(offset).search(NON_SELECTOR_SPACE_REGEXP);\n          const length = delimiterIndex > -1 ? delimiterIndex + offset : text.length;\n          const forward = length - offset;\n          // Insert matching braces\n          change\n            .insertText(event.key)\n            .move(forward)\n            .insertText(BRACES[event.key])\n            .move(-1 - forward)\n            .focus();\n          return true;\n        }\n\n        default: {\n          break;\n        }\n      }\n      return undefined;\n    },\n  };\n}\n","export const RATE_RANGES = ['1m', '5m', '10m', '30m', '1h'];\n\nexport function processLabels(labels, withName = false) {\n  const values = {};\n  labels.forEach(l => {\n    const { __name__, ...rest } = l;\n    if (withName) {\n      values['__name__'] = values['__name__'] || [];\n      if (values['__name__'].indexOf(__name__) === -1) {\n        values['__name__'].push(__name__);\n      }\n    }\n\n    Object.keys(rest).forEach(key => {\n      if (!values[key]) {\n        values[key] = [];\n      }\n      if (values[key].indexOf(rest[key]) === -1) {\n        values[key].push(rest[key]);\n      }\n    });\n  });\n  return { values, keys: Object.keys(values) };\n}\n\n// Strip syntax chars\nexport const cleanText = s => s.replace(/[{}[\\]=\"(),!~+\\-*/^%]/g, '').trim();\n\n// const cleanSelectorRegexp = /\\{(\\w+=\"[^\"\\n]*?\")(,\\w+=\"[^\"\\n]*?\")*\\}/;\nconst selectorRegexp = /\\{[^}]*?\\}/;\nconst labelRegexp = /\\b\\w+=\"[^\"\\n]*?\"/g;\nexport function parseSelector(query: string, cursorOffset = 1): { labelKeys: any[]; selector: string } {\n  if (!query.match(selectorRegexp)) {\n    // Special matcher for metrics\n    if (query.match(/^\\w+$/)) {\n      return {\n        selector: `{__name__=\"${query}\"}`,\n        labelKeys: ['__name__'],\n      };\n    }\n    throw new Error('Query must contain a selector: ' + query);\n  }\n\n  // Check if inside a selector\n  const prefix = query.slice(0, cursorOffset);\n  const prefixOpen = prefix.lastIndexOf('{');\n  const prefixClose = prefix.lastIndexOf('}');\n  if (prefixOpen === -1) {\n    throw new Error('Not inside selector, missing open brace: ' + prefix);\n  }\n  if (prefixClose > -1 && prefixClose > prefixOpen) {\n    throw new Error('Not inside selector, previous selector already closed: ' + prefix);\n  }\n  const suffix = query.slice(cursorOffset);\n  const suffixCloseIndex = suffix.indexOf('}');\n  const suffixClose = suffixCloseIndex + cursorOffset;\n  const suffixOpenIndex = suffix.indexOf('{');\n  const suffixOpen = suffixOpenIndex + cursorOffset;\n  if (suffixClose === -1) {\n    throw new Error('Not inside selector, missing closing brace in suffix: ' + suffix);\n  }\n  if (suffixOpenIndex > -1 && suffixOpen < suffixClose) {\n    throw new Error('Not inside selector, next selector opens before this one closed: ' + suffix);\n  }\n\n  // Extract clean labels to form clean selector, incomplete labels are dropped\n  const selector = query.slice(prefixOpen, suffixClose);\n  const labels = {};\n  selector.replace(labelRegexp, match => {\n    const delimiterIndex = match.indexOf('=');\n    const key = match.slice(0, delimiterIndex);\n    const value = match.slice(delimiterIndex + 1, match.length);\n    labels[key] = value;\n    return '';\n  });\n\n  // Add metric if there is one before the selector\n  const metricPrefix = query.slice(0, prefixOpen);\n  const metricMatch = metricPrefix.match(/\\w+$/);\n  if (metricMatch) {\n    labels['__name__'] = `\"${metricMatch[0]}\"`;\n  }\n\n  // Build sorted selector\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map(key => `${key}=${labels[key]}`).join(',');\n\n  const selectorString = ['{', cleanSelector, '}'].join('');\n\n  return { labelKeys, selector: selectorString };\n}\n","import React from 'react';\n\nimport { Suggestion, SuggestionGroup } from './QueryField';\n\nfunction scrollIntoView(el: HTMLElement) {\n  if (!el || !el.offsetParent) {\n    return;\n  }\n  const container = el.offsetParent as HTMLElement;\n  if (el.offsetTop > container.scrollTop + container.offsetHeight || el.offsetTop < container.scrollTop) {\n    container.scrollTop = el.offsetTop - container.offsetTop;\n  }\n}\n\ninterface TypeaheadItemProps {\n  isSelected: boolean;\n  item: Suggestion;\n  onClickItem: (Suggestion) => void;\n}\n\nclass TypeaheadItem extends React.PureComponent<TypeaheadItemProps, {}> {\n  el: HTMLElement;\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isSelected && !prevProps.isSelected) {\n      scrollIntoView(this.el);\n    }\n  }\n\n  getRef = el => {\n    this.el = el;\n  };\n\n  onClick = () => {\n    this.props.onClickItem(this.props.item);\n  };\n\n  render() {\n    const { isSelected, item } = this.props;\n    const className = isSelected ? 'typeahead-item typeahead-item__selected' : 'typeahead-item';\n    return (\n      <li ref={this.getRef} className={className} onClick={this.onClick}>\n        {item.detail || item.label}\n        {item.documentation && isSelected ? <div className=\"typeahead-item-hint\">{item.documentation}</div> : null}\n      </li>\n    );\n  }\n}\n\ninterface TypeaheadGroupProps {\n  items: Suggestion[];\n  label: string;\n  onClickItem: (Suggestion) => void;\n  selected: Suggestion;\n}\n\nclass TypeaheadGroup extends React.PureComponent<TypeaheadGroupProps, {}> {\n  render() {\n    const { items, label, selected, onClickItem } = this.props;\n    return (\n      <li className=\"typeahead-group\">\n        <div className=\"typeahead-group__title\">{label}</div>\n        <ul className=\"typeahead-group__list\">\n          {items.map(item => {\n            return (\n              <TypeaheadItem key={item.label} onClickItem={onClickItem} isSelected={selected === item} item={item} />\n            );\n          })}\n        </ul>\n      </li>\n    );\n  }\n}\n\ninterface TypeaheadProps {\n  groupedItems: SuggestionGroup[];\n  menuRef: any;\n  selectedItem: Suggestion | null;\n  onClickItem: (Suggestion) => void;\n}\nclass Typeahead extends React.PureComponent<TypeaheadProps, {}> {\n  render() {\n    const { groupedItems, menuRef, selectedItem, onClickItem } = this.props;\n    return (\n      <ul className=\"typeahead\" ref={menuRef}>\n        {groupedItems.map(g => (\n          <TypeaheadGroup key={g.label} onClickItem={onClickItem} selected={selectedItem} {...g} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Typeahead;\n","import _ from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Block, Change, Document, Text, Value } from 'slate';\nimport { Editor } from 'slate-react';\nimport Plain from 'slate-plain-serializer';\n\nimport ClearPlugin from './slate-plugins/clear';\nimport NewlinePlugin from './slate-plugins/newline';\n\nimport Typeahead from './Typeahead';\n\nexport const TYPEAHEAD_DEBOUNCE = 300;\n\nfunction flattenSuggestions(s: any[]): any[] {\n  return s ? s.reduce((acc, g) => acc.concat(g.items), []) : [];\n}\n\nexport const makeFragment = (text: string): Document => {\n  const lines = text.split('\\n').map(line =>\n    Block.create({\n      type: 'paragraph',\n      nodes: [Text.create(line)],\n    })\n  );\n\n  const fragment = Document.create({\n    nodes: lines,\n  });\n  return fragment;\n};\n\nexport const getInitialValue = (value: string): Value => Value.create({ document: makeFragment(value) });\n\nexport interface Suggestion {\n  /**\n   * The label of this completion item. By default\n   * this is also the text that is inserted when selecting\n   * this completion.\n   */\n  label: string;\n  /**\n   * The kind of this completion item. Based on the kind\n   * an icon is chosen by the editor.\n   */\n  kind?: string;\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  detail?: string;\n  /**\n   * A human-readable string, can be Markdown, that represents a doc-comment.\n   */\n  documentation?: string;\n  /**\n   * A string that should be used when comparing this item\n   * with other items. When `falsy` the `label` is used.\n   */\n  sortText?: string;\n  /**\n   * A string that should be used when filtering a set of\n   * completion items. When `falsy` the `label` is used.\n   */\n  filterText?: string;\n  /**\n   * A string or snippet that should be inserted in a document when selecting\n   * this completion. When `falsy` the `label` is used.\n   */\n  insertText?: string;\n  /**\n   * Delete number of characters before the caret position,\n   * by default the letters from the beginning of the word.\n   */\n  deleteBackwards?: number;\n  /**\n   * Number of steps to move after the insertion, can be negative.\n   */\n  move?: number;\n}\n\nexport interface SuggestionGroup {\n  /**\n   * Label that will be displayed for all entries of this group.\n   */\n  label: string;\n  /**\n   * List of suggestions of this group.\n   */\n  items: Suggestion[];\n  /**\n   * If true, match only by prefix (and not mid-word).\n   */\n  prefixMatch?: boolean;\n  /**\n   * If true, do not filter items in this group based on the search.\n   */\n  skipFilter?: boolean;\n  /**\n   * If true, do not sort items.\n   */\n  skipSort?: boolean;\n}\n\ninterface TypeaheadFieldProps {\n  additionalPlugins?: any[];\n  cleanText?: (text: string) => string;\n  initialValue: string | null;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onTypeahead?: (typeahead: TypeaheadInput) => TypeaheadOutput;\n  onValueChanged?: (value: Value) => void;\n  onWillApplySuggestion?: (suggestion: string, state: TypeaheadFieldState) => string;\n  placeholder?: string;\n  portalPrefix?: string;\n}\n\nexport interface TypeaheadFieldState {\n  suggestions: SuggestionGroup[];\n  typeaheadContext: string | null;\n  typeaheadIndex: number;\n  typeaheadPrefix: string;\n  typeaheadText: string;\n  value: Value;\n}\n\nexport interface TypeaheadInput {\n  editorNode: Element;\n  prefix: string;\n  selection?: Selection;\n  text: string;\n  value: Value;\n  wrapperNode: Element;\n}\n\nexport interface TypeaheadOutput {\n  context?: string;\n  refresher?: Promise<{}>;\n  suggestions: SuggestionGroup[];\n}\n\nclass QueryField extends React.Component<TypeaheadFieldProps, TypeaheadFieldState> {\n  menuEl: HTMLElement | null;\n  plugins: any[];\n  resetTimer: any;\n\n  constructor(props, context) {\n    super(props, context);\n\n    // Base plugins\n    this.plugins = [ClearPlugin(), NewlinePlugin(), ...props.additionalPlugins];\n\n    this.state = {\n      suggestions: [],\n      typeaheadContext: null,\n      typeaheadIndex: 0,\n      typeaheadPrefix: '',\n      typeaheadText: '',\n      value: getInitialValue(props.initialValue || ''),\n    };\n  }\n\n  componentDidMount() {\n    this.updateMenu();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.resetTimer);\n  }\n\n  componentDidUpdate() {\n    this.updateMenu();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // initialValue is null in case the user typed\n    if (nextProps.initialValue !== null && nextProps.initialValue !== this.props.initialValue) {\n      this.setState({ value: getInitialValue(nextProps.initialValue) });\n    }\n  }\n\n  onChange = ({ value }) => {\n    const changed = value.document !== this.state.value.document;\n    this.setState({ value }, () => {\n      if (changed) {\n        this.handleChangeValue();\n      }\n    });\n\n    if (changed) {\n      window.requestAnimationFrame(this.handleTypeahead);\n    }\n  };\n\n  handleChangeValue = () => {\n    // Send text change to parent\n    const { onValueChanged } = this.props;\n    if (onValueChanged) {\n      onValueChanged(Plain.serialize(this.state.value));\n    }\n  };\n\n  handleTypeahead = _.debounce(async () => {\n    const selection = window.getSelection();\n    const { cleanText, onTypeahead } = this.props;\n    const { value } = this.state;\n\n    if (onTypeahead && selection.anchorNode) {\n      const wrapperNode = selection.anchorNode.parentElement;\n      const editorNode = wrapperNode.closest('.slate-query-field');\n      if (!editorNode || this.state.value.isBlurred) {\n        // Not inside this editor\n        return;\n      }\n\n      const range = selection.getRangeAt(0);\n      const offset = range.startOffset;\n      const text = selection.anchorNode.textContent;\n      let prefix = text.substr(0, offset);\n      if (cleanText) {\n        prefix = cleanText(prefix);\n      }\n\n      const { suggestions, context, refresher } = onTypeahead({\n        editorNode,\n        prefix,\n        selection,\n        text,\n        value,\n        wrapperNode,\n      });\n\n      const filteredSuggestions = suggestions\n        .map(group => {\n          if (group.items) {\n            if (prefix) {\n              // Filter groups based on prefix\n              if (!group.skipFilter) {\n                group.items = group.items.filter(c => (c.filterText || c.label).length >= prefix.length);\n                if (group.prefixMatch) {\n                  group.items = group.items.filter(c => (c.filterText || c.label).indexOf(prefix) === 0);\n                } else {\n                  group.items = group.items.filter(c => (c.filterText || c.label).indexOf(prefix) > -1);\n                }\n              }\n              // Filter out the already typed value (prefix) unless it inserts custom text\n              group.items = group.items.filter(c => c.insertText || (c.filterText || c.label) !== prefix);\n            }\n\n            if (!group.skipSort) {\n              group.items = _.sortBy(group.items, item => item.sortText || item.label);\n            }\n          }\n          return group;\n        })\n        .filter(group => group.items && group.items.length > 0); // Filter out empty groups\n\n      this.setState(\n        {\n          suggestions: filteredSuggestions,\n          typeaheadPrefix: prefix,\n          typeaheadContext: context,\n          typeaheadText: text,\n        },\n        () => {\n          if (refresher) {\n            refresher.then(this.handleTypeahead).catch(e => console.error(e));\n          }\n        }\n      );\n    }\n  }, TYPEAHEAD_DEBOUNCE);\n\n  applyTypeahead(change: Change, suggestion: Suggestion): Change {\n    const { cleanText, onWillApplySuggestion } = this.props;\n    const { typeaheadPrefix, typeaheadText } = this.state;\n    let suggestionText = suggestion.insertText || suggestion.label;\n    const move = suggestion.move || 0;\n\n    if (onWillApplySuggestion) {\n      suggestionText = onWillApplySuggestion(suggestionText, { ...this.state });\n    }\n\n    this.resetTypeahead();\n\n    // Remove the current, incomplete text and replace it with the selected suggestion\n    const backward = suggestion.deleteBackwards || typeaheadPrefix.length;\n    const text = cleanText ? cleanText(typeaheadText) : typeaheadText;\n    const suffixLength = text.length - typeaheadPrefix.length;\n    const offset = typeaheadText.indexOf(typeaheadPrefix);\n    const midWord = typeaheadPrefix && ((suffixLength > 0 && offset > -1) || suggestionText === typeaheadText);\n    const forward = midWord ? suffixLength + offset : 0;\n\n    // If new-lines, apply suggestion as block\n    if (suggestionText.match(/\\n/)) {\n      const fragment = makeFragment(suggestionText);\n      return change\n        .deleteBackward(backward)\n        .deleteForward(forward)\n        .insertFragment(fragment)\n        .focus();\n    }\n\n    return change\n      .deleteBackward(backward)\n      .deleteForward(forward)\n      .insertText(suggestionText)\n      .move(move)\n      .focus();\n  }\n\n  onKeyDown = (event, change) => {\n    const { typeaheadIndex, suggestions } = this.state;\n\n    switch (event.key) {\n      case 'Escape': {\n        if (this.menuEl) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.resetTypeahead();\n          return true;\n        }\n        break;\n      }\n\n      case ' ': {\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.handleTypeahead();\n          return true;\n        }\n        break;\n      }\n      case 'Enter':\n      case 'Tab': {\n        if (this.menuEl) {\n          // Dont blur input\n          event.preventDefault();\n          if (!suggestions || suggestions.length === 0) {\n            return undefined;\n          }\n\n          // Get the currently selected suggestion\n          const flattenedSuggestions = flattenSuggestions(suggestions);\n          const selected = Math.abs(typeaheadIndex);\n          const selectedIndex = selected % flattenedSuggestions.length || 0;\n          const suggestion = flattenedSuggestions[selectedIndex];\n\n          this.applyTypeahead(change, suggestion);\n          return true;\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        if (this.menuEl) {\n          // Select next suggestion\n          event.preventDefault();\n          this.setState({ typeaheadIndex: typeaheadIndex + 1 });\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        if (this.menuEl) {\n          // Select previous suggestion\n          event.preventDefault();\n          this.setState({ typeaheadIndex: Math.max(0, typeaheadIndex - 1) });\n        }\n        break;\n      }\n\n      default: {\n        // console.log('default key', event.key, event.which, event.charCode, event.locale, data.key);\n        break;\n      }\n    }\n    return undefined;\n  };\n\n  resetTypeahead = () => {\n    this.setState({\n      suggestions: [],\n      typeaheadIndex: 0,\n      typeaheadPrefix: '',\n      typeaheadContext: null,\n    });\n  };\n\n  handleBlur = () => {\n    const { onBlur } = this.props;\n    // If we dont wait here, menu clicks wont work because the menu\n    // will be gone.\n    this.resetTimer = setTimeout(this.resetTypeahead, 100);\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  handleFocus = () => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus();\n    }\n  };\n\n  onClickMenu = (item: Suggestion) => {\n    // Manually triggering change\n    const change = this.applyTypeahead(this.state.value.change(), item);\n    this.onChange(change);\n  };\n\n  updateMenu = () => {\n    const { suggestions } = this.state;\n    const menu = this.menuEl;\n    const selection = window.getSelection();\n    const node = selection.anchorNode;\n\n    // No menu, nothing to do\n    if (!menu) {\n      return;\n    }\n\n    // No suggestions or blur, remove menu\n    const hasSuggesstions = suggestions && suggestions.length > 0;\n    if (!hasSuggesstions) {\n      menu.removeAttribute('style');\n      return;\n    }\n\n    // Align menu overlay to editor node\n    if (node) {\n      // Read from DOM\n      const rect = node.parentElement.getBoundingClientRect();\n      const scrollX = window.scrollX;\n      const scrollY = window.scrollY;\n\n      // Write DOM\n      requestAnimationFrame(() => {\n        menu.style.opacity = '1';\n        menu.style.top = `${rect.top + scrollY + rect.height + 4}px`;\n        menu.style.left = `${rect.left + scrollX - 2}px`;\n      });\n    }\n  };\n\n  menuRef = el => {\n    this.menuEl = el;\n  };\n\n  renderMenu = () => {\n    const { portalPrefix } = this.props;\n    const { suggestions } = this.state;\n    const hasSuggesstions = suggestions && suggestions.length > 0;\n    if (!hasSuggesstions) {\n      return null;\n    }\n\n    // Guard selectedIndex to be within the length of the suggestions\n    let selectedIndex = Math.max(this.state.typeaheadIndex, 0);\n    const flattenedSuggestions = flattenSuggestions(suggestions);\n    selectedIndex = selectedIndex % flattenedSuggestions.length || 0;\n    const selectedItem: Suggestion | null =\n      flattenedSuggestions.length > 0 ? flattenedSuggestions[selectedIndex] : null;\n\n    // Create typeahead in DOM root so we can later position it absolutely\n    return (\n      <Portal prefix={portalPrefix}>\n        <Typeahead\n          menuRef={this.menuRef}\n          selectedItem={selectedItem}\n          onClickItem={this.onClickMenu}\n          groupedItems={suggestions}\n        />\n      </Portal>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"slate-query-field\">\n        {this.renderMenu()}\n        <Editor\n          autoCorrect={false}\n          onBlur={this.handleBlur}\n          onKeyDown={this.onKeyDown}\n          onChange={this.onChange}\n          onFocus={this.handleFocus}\n          placeholder={this.props.placeholder}\n          plugins={this.plugins}\n          spellCheck={false}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\nclass Portal extends React.Component<{ index?: number; prefix: string }, {}> {\n  node: HTMLElement;\n\n  constructor(props) {\n    super(props);\n    const { index = 0, prefix = 'query' } = props;\n    this.node = document.createElement('div');\n    this.node.classList.add(`slate-typeahead`, `slate-typeahead-${prefix}-${index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.node);\n  }\n}\n\nexport default QueryField;\n","// Clears the rest of the line after the caret\nexport default function ClearPlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      if (event.key === 'k' && event.ctrlKey) {\n        event.preventDefault();\n        const text = value.anchorText.text;\n        const offset = value.anchorOffset;\n        const length = text.length;\n        const forward = length - offset;\n        change.deleteForward(forward);\n        return true;\n      }\n      return undefined;\n    },\n  };\n}\n","function getIndent(text) {\n  let offset = text.length - text.trimLeft().length;\n  if (offset) {\n    let indent = text[0];\n    while (--offset) {\n      indent += text[0];\n    }\n    return indent;\n  }\n  return '';\n}\n\nexport default function NewlinePlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      if (event.key === 'Enter' && event.shiftKey) {\n        event.preventDefault();\n\n        const { startBlock } = value;\n        const currentLineText = startBlock.text;\n        const indent = getIndent(currentLineText);\n\n        return change\n          .splitBlock()\n          .insertText(indent)\n          .focus();\n      }\n    },\n  };\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport React from 'react';\nimport { Value } from 'slate';\nimport Cascader from 'rc-cascader';\n\n// dom also includes Element polyfills\nimport { getNextCharacter, getPreviousCousin } from './utils/dom';\nimport PluginPrism, { setPrismTokens } from './slate-plugins/prism/index';\nimport PrismPromql, { FUNCTIONS } from './slate-plugins/prism/promql';\nimport BracesPlugin from './slate-plugins/braces';\nimport RunnerPlugin from './slate-plugins/runner';\nimport { processLabels, RATE_RANGES, cleanText, parseSelector } from './utils/prometheus';\n\nimport TypeaheadField, {\n  Suggestion,\n  SuggestionGroup,\n  TypeaheadInput,\n  TypeaheadFieldState,\n  TypeaheadOutput,\n} from './QueryField';\n\nconst DEFAULT_KEYS = ['job', 'instance'];\nconst EMPTY_SELECTOR = '{}';\nconst HISTOGRAM_GROUP = '__histograms__';\nconst HISTOGRAM_SELECTOR = '{le!=\"\"}'; // Returns all timeseries for histograms\nconst HISTORY_ITEM_COUNT = 5;\nconst HISTORY_COUNT_CUTOFF = 1000 * 60 * 60 * 24; // 24h\nconst METRIC_MARK = 'metric';\nconst PRISM_LANGUAGE = 'promql';\nexport const RECORDING_RULES_GROUP = '__recording_rules__';\n\nexport const wrapLabel = (label: string) => ({ label });\nexport const setFunctionMove = (suggestion: Suggestion): Suggestion => {\n  suggestion.move = -1;\n  return suggestion;\n};\n\nexport function addHistoryMetadata(item: Suggestion, history: any[]): Suggestion {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter(h => h.ts > cutoffTs && h.query === item.label);\n  const count = historyForItem.length;\n  const recent = historyForItem[0];\n  let hint = `Queried ${count} times in the last 24h.`;\n  if (recent) {\n    const lastQueried = moment(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n  return {\n    ...item,\n    documentation: hint,\n  };\n}\n\nexport function groupMetricsByPrefix(metrics: string[], delimiter = '_'): CascaderOption[] {\n  // Filter out recording rules and insert as first option\n  const ruleRegex = /:\\w+:/;\n  const ruleNames = metrics.filter(metric => ruleRegex.test(metric));\n  const rulesOption = {\n    label: 'Recording rules',\n    value: RECORDING_RULES_GROUP,\n    children: ruleNames\n      .slice()\n      .sort()\n      .map(name => ({ label: name, value: name })),\n  };\n\n  const options = ruleNames.length > 0 ? [rulesOption] : [];\n\n  const metricsOptions = _.chain(metrics)\n    .filter(metric => !ruleRegex.test(metric))\n    .groupBy(metric => metric.split(delimiter)[0])\n    .map((metricsForPrefix: string[], prefix: string): CascaderOption => {\n      const prefixIsMetric = metricsForPrefix.length === 1 && metricsForPrefix[0] === prefix;\n      const children = prefixIsMetric ? [] : metricsForPrefix.sort().map(m => ({ label: m, value: m }));\n      return {\n        children,\n        label: prefix,\n        value: prefix,\n      };\n    })\n    .sortBy('label')\n    .value();\n\n  return [...options, ...metricsOptions];\n}\n\nexport function willApplySuggestion(\n  suggestion: string,\n  { typeaheadContext, typeaheadText }: TypeaheadFieldState\n): string {\n  // Modify suggestion based on context\n  switch (typeaheadContext) {\n    case 'context-labels': {\n      const nextChar = getNextCharacter();\n      if (!nextChar || nextChar === '}' || nextChar === ',') {\n        suggestion += '=';\n      }\n      break;\n    }\n\n    case 'context-label-values': {\n      // Always add quotes and remove existing ones instead\n      if (!(typeaheadText.startsWith('=\"') || typeaheadText.startsWith('\"'))) {\n        suggestion = `\"${suggestion}`;\n      }\n      if (getNextCharacter() !== '\"') {\n        suggestion = `${suggestion}\"`;\n      }\n      break;\n    }\n\n    default:\n  }\n  return suggestion;\n}\n\ninterface CascaderOption {\n  label: string;\n  value: string;\n  children?: CascaderOption[];\n  disabled?: boolean;\n}\n\ninterface PromQueryFieldProps {\n  error?: string;\n  hint?: any;\n  histogramMetrics?: string[];\n  history?: any[];\n  initialQuery?: string | null;\n  labelKeys?: { [index: string]: string[] }; // metric -> [labelKey,...]\n  labelValues?: { [index: string]: { [index: string]: string[] } }; // metric -> labelKey -> [labelValue,...]\n  metrics?: string[];\n  metricsByPrefix?: CascaderOption[];\n  onClickHintFix?: (action: any) => void;\n  onPressEnter?: () => void;\n  onQueryChange?: (value: string, override?: boolean) => void;\n  portalPrefix?: string;\n  request?: (url: string) => any;\n}\n\ninterface PromQueryFieldState {\n  histogramMetrics: string[];\n  labelKeys: { [index: string]: string[] }; // metric -> [labelKey,...]\n  labelValues: { [index: string]: { [index: string]: string[] } }; // metric -> labelKey -> [labelValue,...]\n  metrics: string[];\n  metricsByPrefix: CascaderOption[];\n}\n\ninterface PromTypeaheadInput {\n  text: string;\n  prefix: string;\n  wrapperClasses: string[];\n  labelKey?: string;\n  value?: Value;\n}\n\nclass PromQueryField extends React.Component<PromQueryFieldProps, PromQueryFieldState> {\n  plugins: any[];\n\n  constructor(props: PromQueryFieldProps, context) {\n    super(props, context);\n\n    this.plugins = [\n      BracesPlugin(),\n      RunnerPlugin({ handler: props.onPressEnter }),\n      PluginPrism({ definition: PrismPromql, language: PRISM_LANGUAGE }),\n    ];\n\n    this.state = {\n      histogramMetrics: props.histogramMetrics || [],\n      labelKeys: props.labelKeys || {},\n      labelValues: props.labelValues || {},\n      metrics: props.metrics || [],\n      metricsByPrefix: props.metricsByPrefix || [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMetricNames();\n    this.fetchHistogramMetrics();\n  }\n\n  onChangeMetrics = (values: string[], selectedOptions: CascaderOption[]) => {\n    let query;\n    if (selectedOptions.length === 1) {\n      if (selectedOptions[0].children.length === 0) {\n        query = selectedOptions[0].value;\n      } else {\n        // Ignore click on group\n        return;\n      }\n    } else {\n      const prefix = selectedOptions[0].value;\n      const metric = selectedOptions[1].value;\n      if (prefix === HISTOGRAM_GROUP) {\n        query = `histogram_quantile(0.95, sum(rate(${metric}[5m])) by (le))`;\n      } else {\n        query = metric;\n      }\n    }\n    this.onChangeQuery(query, true);\n  };\n\n  onChangeQuery = (value: string, override?: boolean) => {\n    // Send text change to parent\n    const { onQueryChange } = this.props;\n    if (onQueryChange) {\n      onQueryChange(value, override);\n    }\n  };\n\n  onClickHintFix = () => {\n    const { hint, onClickHintFix } = this.props;\n    if (onClickHintFix && hint && hint.fix) {\n      onClickHintFix(hint.fix.action);\n    }\n  };\n\n  onReceiveMetrics = () => {\n    if (!this.state.metrics) {\n      return;\n    }\n    setPrismTokens(PRISM_LANGUAGE, METRIC_MARK, this.state.metrics);\n  };\n\n  onTypeahead = (typeahead: TypeaheadInput): TypeaheadOutput => {\n    const { prefix, text, value, wrapperNode } = typeahead;\n\n    // Get DOM-dependent context\n    const wrapperClasses = Array.from(wrapperNode.classList);\n    const labelKeyNode = getPreviousCousin(wrapperNode, '.attr-name');\n    const labelKey = labelKeyNode && labelKeyNode.textContent;\n    const nextChar = getNextCharacter();\n\n    const result = this.getTypeahead({ text, value, prefix, wrapperClasses, labelKey });\n\n    console.log('handleTypeahead', wrapperClasses, text, prefix, nextChar, labelKey, result.context);\n\n    return result;\n  };\n\n  // Keep this DOM-free for testing\n  getTypeahead({ prefix, wrapperClasses, text }: PromTypeaheadInput): TypeaheadOutput {\n    // Determine candidates by CSS context\n    if (_.includes(wrapperClasses, 'context-range')) {\n      // Suggestions for metric[|]\n      return this.getRangeTypeahead();\n    } else if (_.includes(wrapperClasses, 'context-labels')) {\n      // Suggestions for metric{|} and metric{foo=|}, as well as metric-independent label queries like {|}\n      return this.getLabelTypeahead.apply(this, arguments);\n    } else if (_.includes(wrapperClasses, 'context-aggregation')) {\n      return this.getAggregationTypeahead.apply(this, arguments);\n    } else if (\n      // Non-empty but not inside known token\n      (prefix && !_.includes(wrapperClasses, 'token')) ||\n      (prefix === '' && !text.match(/^[)\\s]+$/)) || // Empty context or after ')'\n      text.match(/[+\\-*/^%]/) // After binary operator\n    ) {\n      return this.getEmptyTypeahead();\n    }\n\n    return {\n      suggestions: [],\n    };\n  }\n\n  getEmptyTypeahead(): TypeaheadOutput {\n    const { history } = this.props;\n    const { metrics } = this.state;\n    const suggestions: SuggestionGroup[] = [];\n\n    if (history && history.length > 0) {\n      const historyItems = _.chain(history)\n        .uniqBy('query')\n        .take(HISTORY_ITEM_COUNT)\n        .map(h => h.query)\n        .map(wrapLabel)\n        .map(item => addHistoryMetadata(item, history))\n        .value();\n\n      suggestions.push({\n        prefixMatch: true,\n        skipSort: true,\n        label: 'History',\n        items: historyItems,\n      });\n    }\n\n    suggestions.push({\n      prefixMatch: true,\n      label: 'Functions',\n      items: FUNCTIONS.map(setFunctionMove),\n    });\n\n    if (metrics) {\n      suggestions.push({\n        label: 'Metrics',\n        items: metrics.map(wrapLabel),\n      });\n    }\n    return { suggestions };\n  }\n\n  getRangeTypeahead(): TypeaheadOutput {\n    return {\n      context: 'context-range',\n      suggestions: [\n        {\n          label: 'Range vector',\n          items: [...RATE_RANGES].map(wrapLabel),\n        },\n      ],\n    };\n  }\n\n  getAggregationTypeahead({ value }: PromTypeaheadInput): TypeaheadOutput {\n    let refresher: Promise<any> = null;\n    const suggestions: SuggestionGroup[] = [];\n\n    // sum(foo{bar=\"1\"}) by (|)\n    const line = value.anchorBlock.getText();\n    const cursorOffset: number = value.anchorOffset;\n    // sum(foo{bar=\"1\"}) by (\n    const leftSide = line.slice(0, cursorOffset);\n    const openParensAggregationIndex = leftSide.lastIndexOf('(');\n    const openParensSelectorIndex = leftSide.slice(0, openParensAggregationIndex).lastIndexOf('(');\n    const closeParensSelectorIndex = leftSide.slice(openParensSelectorIndex).indexOf(')') + openParensSelectorIndex;\n    // foo{bar=\"1\"}\n    const selectorString = leftSide.slice(openParensSelectorIndex + 1, closeParensSelectorIndex);\n    const selector = parseSelector(selectorString, selectorString.length - 2).selector;\n\n    const labelKeys = this.state.labelKeys[selector];\n    if (labelKeys) {\n      suggestions.push({ label: 'Labels', items: labelKeys.map(wrapLabel) });\n    } else {\n      refresher = this.fetchSeriesLabels(selector);\n    }\n\n    return {\n      refresher,\n      suggestions,\n      context: 'context-aggregation',\n    };\n  }\n\n  getLabelTypeahead({ text, wrapperClasses, labelKey, value }: PromTypeaheadInput): TypeaheadOutput {\n    let context: string;\n    let refresher: Promise<any> = null;\n    const suggestions: SuggestionGroup[] = [];\n    const line = value.anchorBlock.getText();\n    const cursorOffset: number = value.anchorOffset;\n\n    // Get normalized selector\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = parseSelector(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n    const containsMetric = selector.indexOf('__name__=') > -1;\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n\n    if ((text && text.startsWith('=')) || _.includes(wrapperClasses, 'attr-value')) {\n      // Label values\n      if (labelKey && this.state.labelValues[selector] && this.state.labelValues[selector][labelKey]) {\n        const labelValues = this.state.labelValues[selector][labelKey];\n        context = 'context-label-values';\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"`,\n          items: labelValues.map(wrapLabel),\n        });\n      }\n    } else {\n      // Label keys\n      const labelKeys = this.state.labelKeys[selector] || (containsMetric ? null : DEFAULT_KEYS);\n      if (labelKeys) {\n        const possibleKeys = _.difference(labelKeys, existingKeys);\n        if (possibleKeys.length > 0) {\n          context = 'context-labels';\n          suggestions.push({ label: `Labels`, items: possibleKeys.map(wrapLabel) });\n        }\n      }\n    }\n\n    // Query labels for selector\n    if (selector && !this.state.labelValues[selector]) {\n      if (selector === EMPTY_SELECTOR) {\n        // Query label values for default labels\n        refresher = Promise.all(DEFAULT_KEYS.map(key => this.fetchLabelValues(key)));\n      } else {\n        refresher = this.fetchSeriesLabels(selector, !containsMetric);\n      }\n    }\n\n    return { context, refresher, suggestions };\n  }\n\n  request = url => {\n    if (this.props.request) {\n      return this.props.request(url);\n    }\n    return fetch(url);\n  };\n\n  fetchHistogramMetrics() {\n    this.fetchSeriesLabels(HISTOGRAM_SELECTOR, true, () => {\n      const histogramSeries = this.state.labelValues[HISTOGRAM_SELECTOR];\n      if (histogramSeries && histogramSeries['__name__']) {\n        const histogramMetrics = histogramSeries['__name__'].slice().sort();\n        this.setState({ histogramMetrics });\n      }\n    });\n  }\n\n  async fetchLabelValues(key: string) {\n    const url = `/api/v1/label/${key}/values`;\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      const exisingValues = this.state.labelValues[EMPTY_SELECTOR];\n      const values = {\n        ...exisingValues,\n        [key]: body.data,\n      };\n      const labelValues = {\n        ...this.state.labelValues,\n        [EMPTY_SELECTOR]: values,\n      };\n      this.setState({ labelValues });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async fetchSeriesLabels(name: string, withName?: boolean, callback?: () => void) {\n    const url = `/api/v1/series?match[]=${name}`;\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      const { keys, values } = processLabels(body.data, withName);\n      const labelKeys = {\n        ...this.state.labelKeys,\n        [name]: keys,\n      };\n      const labelValues = {\n        ...this.state.labelValues,\n        [name]: values,\n      };\n      this.setState({ labelKeys, labelValues }, callback);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async fetchMetricNames() {\n    const url = '/api/v1/label/__name__/values';\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      const metrics = body.data;\n      const metricsByPrefix = groupMetricsByPrefix(metrics);\n      this.setState({ metrics, metricsByPrefix }, this.onReceiveMetrics);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const { error, hint } = this.props;\n    const { histogramMetrics, metricsByPrefix } = this.state;\n    const histogramOptions = histogramMetrics.map(hm => ({ label: hm, value: hm }));\n    const metricsOptions = [\n      { label: 'Histograms', value: HISTOGRAM_GROUP, children: histogramOptions },\n      ...metricsByPrefix,\n    ];\n\n    return (\n      <div className=\"prom-query-field\">\n        <div className=\"prom-query-field-tools\">\n          <Cascader options={metricsOptions} onChange={this.onChangeMetrics}>\n            <button className=\"btn navbar-button navbar-button--tight\">Metrics</button>\n          </Cascader>\n        </div>\n        <div className=\"prom-query-field-wrapper\">\n          <div className=\"slate-query-field-wrapper\">\n            <TypeaheadField\n              additionalPlugins={this.plugins}\n              cleanText={cleanText}\n              initialValue={this.props.initialQuery}\n              onTypeahead={this.onTypeahead}\n              onWillApplySuggestion={willApplySuggestion}\n              onValueChanged={this.onChangeQuery}\n              placeholder=\"输入一条 PromQL 查询\"\n            />\n          </div>\n          {error ? <div className=\"prom-query-field-info text-error\">{error}</div> : null}\n          {hint ? (\n            <div className=\"prom-query-field-info text-warning\">\n              {hint.label}{' '}\n              {hint.fix ? (\n                <a className=\"text-link muted\" onClick={this.onClickHintFix}>\n                  {hint.fix.label}\n                </a>\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PromQueryField;\n","export default function RunnerPlugin({ handler }) {\n  return {\n    onKeyDown(event) {\n      // Handle enter\n      if (handler && event.key === 'Enter' && !event.shiftKey) {\n        // Submit on Enter\n        event.preventDefault();\n        handler(event);\n        return true;\n      }\n      return undefined;\n    },\n  };\n}\n","import React, { PureComponent } from 'react';\n\n// TODO make this datasource-plugin-dependent\nimport QueryField from './PromQueryField';\n\nclass QueryRow extends PureComponent<any, {}> {\n  onChangeQuery = (value, override?: boolean) => {\n    const { index, onChangeQuery } = this.props;\n    if (onChangeQuery) {\n      onChangeQuery(value, index, override);\n    }\n  };\n\n  onClickAddButton = () => {\n    const { index, onAddQueryRow } = this.props;\n    if (onAddQueryRow) {\n      onAddQueryRow(index);\n    }\n  };\n\n  onClickClearButton = () => {\n    this.onChangeQuery('', true);\n  };\n\n  onClickHintFix = action => {\n    const { index, onClickHintFix } = this.props;\n    if (onClickHintFix) {\n      onClickHintFix(action, index);\n    }\n  };\n\n  onClickRemoveButton = () => {\n    const { index, onRemoveQueryRow } = this.props;\n    if (onRemoveQueryRow) {\n      onRemoveQueryRow(index);\n    }\n  };\n\n  onPressEnter = () => {\n    const { onExecuteQuery } = this.props;\n    if (onExecuteQuery) {\n      onExecuteQuery();\n    }\n  };\n\n  render() {\n    const { edited, history, query, queryError, queryHint, request } = this.props;\n    return (\n      <div className=\"query-row\">\n        <div className=\"query-row-field\">\n          <QueryField\n            error={queryError}\n            hint={queryHint}\n            initialQuery={edited ? null : query}\n            history={history}\n            portalPrefix=\"explore\"\n            onClickHintFix={this.onClickHintFix}\n            onPressEnter={this.onPressEnter}\n            onQueryChange={this.onChangeQuery}\n            request={request}\n          />\n        </div>\n        <div className=\"query-row-tools\">\n          <button className=\"btn navbar-button navbar-button--tight\" onClick={this.onClickClearButton}>\n            <i className=\"fa fa-times\" />\n          </button>\n          <button className=\"btn navbar-button navbar-button--tight\" onClick={this.onClickAddButton}>\n            <i className=\"fa fa-plus\" />\n          </button>\n          <button className=\"btn navbar-button navbar-button--tight\" onClick={this.onClickRemoveButton}>\n            <i className=\"fa fa-minus\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class QueryRows extends PureComponent<any, {}> {\n  render() {\n    const { className = '', queries, queryErrors = [], queryHints = [], ...handlers } = this.props;\n    return (\n      <div className={className}>\n        {queries.map((q, index) => (\n          <QueryRow\n            key={q.key}\n            index={index}\n            query={q.query}\n            queryError={queryErrors[index]}\n            queryHint={queryHints[index]}\n            edited={q.edited}\n            {...handlers}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","export function generateQueryKey(index = 0) {\n  return `Q-${Date.now()}-${Math.random()}-${index}`;\n}\n\nexport function ensureQueries(queries?) {\n  if (queries && typeof queries === 'object' && queries.length > 0 && typeof queries[0] === 'string') {\n    return queries.map((query, i) => ({ key: generateQueryKey(i), query }));\n  }\n  return [{ key: generateQueryKey(), query: '' }];\n}\n\nexport function hasQuery(queries) {\n  return queries.some(q => q.query);\n}\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\n\nimport * as dateMath from 'app/core/utils/datemath';\nimport * as rangeUtil from 'app/core/utils/rangeutil';\n\nconst DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport const DEFAULT_RANGE = {\n  from: 'now-6h',\n  to: 'now',\n};\n\nexport function parseTime(value, isUtc = false, asString = false) {\n  if (value.indexOf('now') !== -1) {\n    return value;\n  }\n  if (!isNaN(value)) {\n    const epoch = parseInt(value);\n    const m = isUtc ? moment.utc(epoch) : moment(epoch);\n    return asString ? m.format(DATE_FORMAT) : m;\n  }\n  return undefined;\n}\n\nexport default class TimePicker extends PureComponent<any, any> {\n  dropdownEl: any;\n  constructor(props) {\n    super(props);\n\n    const fromRaw = props.range ? props.range.from : DEFAULT_RANGE.from;\n    const toRaw = props.range ? props.range.to : DEFAULT_RANGE.to;\n    const range = {\n      from: parseTime(fromRaw),\n      to: parseTime(toRaw),\n    };\n    this.state = {\n      fromRaw: parseTime(fromRaw, props.isUtc, true),\n      isOpen: props.isOpen,\n      isUtc: props.isUtc,\n      rangeString: rangeUtil.describeTimeRange(range),\n      refreshInterval: '',\n      toRaw: parseTime(toRaw, props.isUtc, true),\n    };\n  }\n\n  move(direction) {\n    const { onChangeTime } = this.props;\n    const { fromRaw, toRaw } = this.state;\n    const range = {\n      from: dateMath.parse(fromRaw, false),\n      to: dateMath.parse(toRaw, true),\n    };\n\n    const timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\n    let to, from;\n    if (direction === -1) {\n      to = range.to.valueOf() - timespan;\n      from = range.from.valueOf() - timespan;\n    } else if (direction === 1) {\n      to = range.to.valueOf() + timespan;\n      from = range.from.valueOf() + timespan;\n      if (to > Date.now() && range.to < Date.now()) {\n        to = Date.now();\n        from = range.from.valueOf();\n      }\n    } else {\n      to = range.to.valueOf();\n      from = range.from.valueOf();\n    }\n\n    const rangeString = rangeUtil.describeTimeRange(range);\n    // No need to convert to UTC again\n    to = moment(to);\n    from = moment(from);\n\n    this.setState(\n      {\n        rangeString,\n        fromRaw: from.format(DATE_FORMAT),\n        toRaw: to.format(DATE_FORMAT),\n      },\n      () => {\n        onChangeTime({ to, from });\n      }\n    );\n  }\n\n  handleChangeFrom = e => {\n    this.setState({\n      fromRaw: e.target.value,\n    });\n  };\n\n  handleChangeTo = e => {\n    this.setState({\n      toRaw: e.target.value,\n    });\n  };\n\n  handleClickApply = () => {\n    const { onChangeTime } = this.props;\n    const { toRaw, fromRaw } = this.state;\n    const range = {\n      from: dateMath.parse(fromRaw, false),\n      to: dateMath.parse(toRaw, true),\n    };\n    const rangeString = rangeUtil.describeTimeRange(range);\n    this.setState(\n      {\n        isOpen: false,\n        rangeString,\n      },\n      () => {\n        if (onChangeTime) {\n          onChangeTime(range);\n        }\n      }\n    );\n  };\n\n  handleClickLeft = () => this.move(-1);\n  handleClickPicker = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n  handleClickRight = () => this.move(1);\n  handleClickRefresh = () => {};\n  handleClickRelativeOption = range => {\n    const { onChangeTime } = this.props;\n    const rangeString = rangeUtil.describeTimeRange(range);\n    this.setState(\n      {\n        toRaw: range.to,\n        fromRaw: range.from,\n        isOpen: false,\n        rangeString,\n      },\n      () => {\n        if (onChangeTime) {\n          onChangeTime(range);\n        }\n      }\n    );\n  };\n\n  getTimeOptions() {\n    return rangeUtil.getRelativeTimesList({}, this.state.rangeString);\n  }\n\n  dropdownRef = el => {\n    this.dropdownEl = el;\n  };\n\n  renderDropdown() {\n    const { fromRaw, isOpen, toRaw } = this.state;\n    if (!isOpen) {\n      return null;\n    }\n    const timeOptions = this.getTimeOptions();\n    return (\n      <div ref={this.dropdownRef} className=\"gf-timepicker-dropdown\">\n        <div className=\"gf-timepicker-absolute-section\">\n          <h3 className=\"section-heading\">Custom range</h3>\n\n          <label className=\"small\">自:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <input\n                type=\"text\"\n                className=\"gf-form-input input-large timepicker-from\"\n                value={fromRaw}\n                onChange={this.handleChangeFrom}\n              />\n            </div>\n          </div>\n\n          <label className=\"small\">至:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <input\n                type=\"text\"\n                className=\"gf-form-input input-large timepicker-to\"\n                value={toRaw}\n                onChange={this.handleChangeTo}\n              />\n            </div>\n          </div>\n\n          {/* <label className=\"small\">Refreshing every:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <select className=\"gf-form-input input-medium\" ng-options=\"f.value as f.text for f in ctrl.refresh.options\"></select>\n            </div>\n          </div> */}\n          <div className=\"gf-form\">\n            <button className=\"btn gf-form-btn btn-secondary\" onClick={this.handleClickApply}>\n              Apply\n            </button>\n          </div>\n        </div>\n\n        <div className=\"gf-timepicker-relative-section\">\n          <h3 className=\"section-heading\">Quick ranges</h3>\n          {Object.keys(timeOptions).map(section => {\n            const group = timeOptions[section];\n            return (\n              <ul key={section}>\n                {group.map(option => (\n                  <li className={option.active ? 'active' : ''} key={option.display}>\n                    <a onClick={() => this.handleClickRelativeOption(option)}>{option.display}</a>\n                  </li>\n                ))}\n              </ul>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { isUtc, rangeString, refreshInterval } = this.state;\n    return (\n      <div className=\"timepicker\">\n        <div className=\"navbar-buttons\">\n          <button className=\"btn navbar-button navbar-button--tight timepicker-left\" onClick={this.handleClickLeft}>\n            <i className=\"fa fa-chevron-left\" />\n          </button>\n          <button className=\"btn navbar-button gf-timepicker-nav-btn\" onClick={this.handleClickPicker}>\n            <i className=\"fa fa-clock-o\" />\n            <span className=\"timepicker-rangestring\">{rangeString}</span>\n            {isUtc ? <span className=\"gf-timepicker-utc\">UTC</span> : null}\n            {refreshInterval ? <span className=\"text-warning\">&nbsp; 刷新间隔 {refreshInterval}</span> : null}\n          </button>\n          <button className=\"btn navbar-button navbar-button--tight timepicker-right\" onClick={this.handleClickRight}>\n            <i className=\"fa fa-chevron-right\" />\n          </button>\n        </div>\n        {this.renderDropdown()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport TableModel from 'app/core/table_model';\n\nconst EMPTY_TABLE = new TableModel();\n\ninterface TableProps {\n  className?: string;\n  data: TableModel;\n  loading: boolean;\n  onClickCell?: (columnKey: string, rowValue: string) => void;\n}\n\ninterface SFCCellProps {\n  columnIndex: number;\n  onClickCell?: (columnKey: string, rowValue: string, columnIndex: number, rowIndex: number, table: TableModel) => void;\n  rowIndex: number;\n  table: TableModel;\n  value: string;\n}\n\nfunction Cell(props: SFCCellProps) {\n  const { columnIndex, rowIndex, table, value, onClickCell } = props;\n  const column = table.columns[columnIndex];\n  if (column && column.filterable && onClickCell) {\n    const onClick = event => {\n      event.preventDefault();\n      onClickCell(column.text, value, columnIndex, rowIndex, table);\n    };\n    return (\n      <td>\n        <a className=\"link\" onClick={onClick}>\n          {value}\n        </a>\n      </td>\n    );\n  }\n  return <td>{value}</td>;\n}\n\nexport default class Table extends PureComponent<TableProps, {}> {\n  render() {\n    const { className = '', data, loading, onClickCell } = this.props;\n    const tableModel = data || EMPTY_TABLE;\n    if (!loading && data && data.rows.length === 0) {\n      return (\n        <table className={`${className} filter-table`}>\n          <thead>\n            <tr>\n              <th>Table</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"muted\">The queries returned no data for a table.</td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n    return (\n      <table className={`${className} filter-table`}>\n        <thead>\n          <tr>{tableModel.columns.map(col => <th key={col.text}>{col.text}</th>)}</tr>\n        </thead>\n        <tbody>\n          {tableModel.rows.map((row, i) => (\n            <tr key={i}>\n              {row.map((value, j) => (\n                <Cell\n                  key={j}\n                  columnIndex={j}\n                  rowIndex={i}\n                  value={String(value)}\n                  table={data}\n                  onClickCell={onClickCell}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { Fragment, PureComponent } from 'react';\n\nimport { LogsModel, LogRow } from 'app/core/logs_model';\n\ninterface LogsProps {\n  className?: string;\n  data: LogsModel;\n  loading: boolean;\n}\n\nconst EXAMPLE_QUERY = '{job=\"default/prometheus\"}';\n\nconst Entry: React.SFC<LogRow> = props => {\n  const { entry, searchMatches } = props;\n  if (searchMatches && searchMatches.length > 0) {\n    let lastMatchEnd = 0;\n    const spans = searchMatches.reduce((acc, match, i) => {\n      // Insert non-match\n      if (match.start !== lastMatchEnd) {\n        acc.push(<>{entry.slice(lastMatchEnd, match.start)}</>);\n      }\n      // Match\n      acc.push(\n        <span className=\"logs-row-match-highlight\" title={`Matching expression: ${match.text}`}>\n          {entry.substr(match.start, match.length)}\n        </span>\n      );\n      lastMatchEnd = match.start + match.length;\n      // Non-matching end\n      if (i === searchMatches.length - 1) {\n        acc.push(<>{entry.slice(lastMatchEnd)}</>);\n      }\n      return acc;\n    }, []);\n    return <>{spans}</>;\n  }\n  return <>{props.entry}</>;\n};\n\nexport default class Logs extends PureComponent<LogsProps, any> {\n  render() {\n    const { className = '', data } = this.props;\n    const hasData = data && data.rows && data.rows.length > 0;\n    return (\n      <div className={`${className} logs`}>\n        {hasData ? (\n          <div className=\"logs-entries panel-container\">\n            {data.rows.map(row => (\n              <Fragment key={row.key}>\n                <div className={row.logLevel ? `logs-row-level logs-row-level-${row.logLevel}` : ''} />\n                <div title={`${row.timestamp} (${row.timeFromNow})`}>{row.timeLocal}</div>\n                <div>\n                  <Entry {...row} />\n                </div>\n              </Fragment>\n            ))}\n          </div>\n        ) : null}\n        {!hasData ? (\n          <div className=\"panel-container\">\n            Enter a query like <code>{EXAMPLE_QUERY}</code>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nconst INTERVAL = 150;\n\nexport default class ElapsedTime extends PureComponent<any, any> {\n  offset: number;\n  timer: number;\n\n  state = {\n    elapsed: 0,\n  };\n\n  start() {\n    this.offset = Date.now();\n    this.timer = window.setInterval(this.tick, INTERVAL);\n  }\n\n  tick = () => {\n    const jetzt = Date.now();\n    const elapsed = jetzt - this.offset;\n    this.setState({ elapsed });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.time) {\n      clearInterval(this.timer);\n    } else if (this.props.time) {\n      this.start();\n    }\n  }\n\n  componentDidMount() {\n    this.start();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { elapsed } = this.state;\n    const { className, time } = this.props;\n    const value = (time || elapsed) / 1000;\n    return <span className={`elapsed-time ${className}`}>{value.toFixed(1)}s</span>;\n  }\n}\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Select from 'react-select';\n\nimport kbn from 'app/core/utils/kbn';\nimport colors from 'app/core/utils/colors';\nimport store from 'app/core/store';\nimport TimeSeries from 'app/core/time_series2';\nimport { decodePathComponent } from 'app/core/utils/location_util';\nimport { parse as parseDate } from 'app/core/utils/datemath';\n\nimport ElapsedTime from './ElapsedTime';\nimport QueryRows from './QueryRows';\nimport Graph from './Graph';\nimport Logs from './Logs';\nimport Table from './Table';\nimport TimePicker, { DEFAULT_RANGE } from './TimePicker';\nimport { ensureQueries, generateQueryKey, hasQuery } from './utils/query';\n\nconst MAX_HISTORY_ITEMS = 100;\n\nfunction makeHints(hints) {\n  const hintsByIndex = [];\n  hints.forEach(hint => {\n    if (hint) {\n      hintsByIndex[hint.index] = hint;\n    }\n  });\n  return hintsByIndex;\n}\n\nfunction makeTimeSeriesList(dataList, options) {\n  return dataList.map((seriesData, index) => {\n    const datapoints = seriesData.datapoints || [];\n    const alias = seriesData.target;\n    const colorIndex = index % colors.length;\n    const color = colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints,\n      alias,\n      color,\n      unit: seriesData.unit,\n    });\n\n    return series;\n  });\n}\n\nfunction parseUrlState(initial: string | undefined) {\n  if (initial) {\n    try {\n      const parsed = JSON.parse(decodePathComponent(initial));\n      return {\n        datasource: parsed.datasource,\n        queries: parsed.queries.map(q => q.query),\n        range: parsed.range,\n      };\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return { datasource: null, queries: [], range: DEFAULT_RANGE };\n}\n\ninterface ExploreState {\n  datasource: any;\n  datasourceError: any;\n  datasourceLoading: boolean | null;\n  datasourceMissing: boolean;\n  graphResult: any;\n  history: any[];\n  initialDatasource?: string;\n  latency: number;\n  loading: any;\n  logsResult: any;\n  queries: any[];\n  queryErrors: any[];\n  queryHints: any[];\n  range: any;\n  requestOptions: any;\n  showingGraph: boolean;\n  showingLogs: boolean;\n  showingTable: boolean;\n  supportsGraph: boolean | null;\n  supportsLogs: boolean | null;\n  supportsTable: boolean | null;\n  tableResult: any;\n}\n\nexport class Explore extends React.Component<any, ExploreState> {\n  el: any;\n\n  constructor(props) {\n    super(props);\n    const initialState: ExploreState = props.initialState;\n    const { datasource, queries, range } = parseUrlState(props.routeParams.state);\n    this.state = {\n      datasource: null,\n      datasourceError: null,\n      datasourceLoading: null,\n      datasourceMissing: false,\n      graphResult: null,\n      initialDatasource: datasource,\n      history: [],\n      latency: 0,\n      loading: false,\n      logsResult: null,\n      queries: ensureQueries(queries),\n      queryErrors: [],\n      queryHints: [],\n      range: range || { ...DEFAULT_RANGE },\n      requestOptions: null,\n      showingGraph: true,\n      showingLogs: true,\n      showingTable: true,\n      supportsGraph: null,\n      supportsLogs: null,\n      supportsTable: null,\n      tableResult: null,\n      ...initialState,\n    };\n  }\n\n  async componentDidMount() {\n    const { datasourceSrv } = this.props;\n    const { initialDatasource } = this.state;\n    if (!datasourceSrv) {\n      throw new Error('No datasource service passed as props.');\n    }\n    const datasources = datasourceSrv.getExploreSources();\n    if (datasources.length > 0) {\n      this.setState({ datasourceLoading: true });\n      // Priority: datasource in url, default datasource, first explore datasource\n      let datasource;\n      if (initialDatasource) {\n        datasource = await datasourceSrv.get(initialDatasource);\n      } else {\n        datasource = await datasourceSrv.get();\n      }\n      if (!datasource.meta.explore) {\n        datasource = await datasourceSrv.get(datasources[0].name);\n      }\n      this.setDatasource(datasource);\n    } else {\n      this.setState({ datasourceMissing: true });\n    }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ datasourceError: error });\n    console.error(error);\n  }\n\n  async setDatasource(datasource) {\n    const supportsGraph = datasource.meta.metrics;\n    const supportsLogs = datasource.meta.logs;\n    const supportsTable = datasource.meta.metrics;\n    const datasourceId = datasource.meta.id;\n    let datasourceError = null;\n\n    try {\n      const testResult = await datasource.testDatasource();\n      datasourceError = testResult.status === 'success' ? null : testResult.message;\n    } catch (error) {\n      datasourceError = (error && error.statusText) || error;\n    }\n\n    const historyKey = `grafana.explore.history.${datasourceId}`;\n    const history = store.getObject(historyKey, []);\n\n    if (datasource.init) {\n      datasource.init();\n    }\n\n    // Keep queries but reset edit state\n    const nextQueries = this.state.queries.map(q => ({\n      ...q,\n      edited: false,\n    }));\n\n    this.setState(\n      {\n        datasource,\n        datasourceError,\n        history,\n        supportsGraph,\n        supportsLogs,\n        supportsTable,\n        datasourceLoading: false,\n        queries: nextQueries,\n      },\n      () => datasourceError === null && this.onSubmit()\n    );\n  }\n\n  getRef = el => {\n    this.el = el;\n  };\n\n  onAddQueryRow = index => {\n    const { queries } = this.state;\n    const nextQueries = [\n      ...queries.slice(0, index + 1),\n      { query: '', key: generateQueryKey() },\n      ...queries.slice(index + 1),\n    ];\n    this.setState({ queries: nextQueries });\n  };\n\n  onChangeDatasource = async option => {\n    this.setState({\n      datasource: null,\n      datasourceError: null,\n      datasourceLoading: true,\n      graphResult: null,\n      latency: 0,\n      logsResult: null,\n      queryErrors: [],\n      queryHints: [],\n      tableResult: null,\n    });\n    const datasource = await this.props.datasourceSrv.get(option.value);\n    this.setDatasource(datasource);\n  };\n\n  onChangeQuery = (value: string, index: number, override?: boolean) => {\n    const { queries } = this.state;\n    let { queryErrors, queryHints } = this.state;\n    const prevQuery = queries[index];\n    const edited = override ? false : prevQuery.query !== value;\n    const nextQuery = {\n      ...queries[index],\n      edited,\n      query: value,\n    };\n    const nextQueries = [...queries];\n    nextQueries[index] = nextQuery;\n    if (override) {\n      queryErrors = [];\n      queryHints = [];\n    }\n    this.setState(\n      {\n        queryErrors,\n        queryHints,\n        queries: nextQueries,\n      },\n      override ? () => this.onSubmit() : undefined\n    );\n  };\n\n  onChangeTime = nextRange => {\n    const range = {\n      from: nextRange.from,\n      to: nextRange.to,\n    };\n    this.setState({ range }, () => this.onSubmit());\n  };\n\n  onClickClear = () => {\n    this.setState({\n      graphResult: null,\n      logsResult: null,\n      latency: 0,\n      queries: ensureQueries(),\n      queryErrors: [],\n      queryHints: [],\n      tableResult: null,\n    });\n  };\n\n  onClickCloseSplit = () => {\n    const { onChangeSplit } = this.props;\n    if (onChangeSplit) {\n      onChangeSplit(false);\n    }\n  };\n\n  onClickGraphButton = () => {\n    this.setState(state => ({ showingGraph: !state.showingGraph }));\n  };\n\n  onClickLogsButton = () => {\n    this.setState(state => ({ showingLogs: !state.showingLogs }));\n  };\n\n  onClickSplit = () => {\n    const { onChangeSplit } = this.props;\n    const state = { ...this.state };\n    state.queries = state.queries.map(({ edited, ...rest }) => rest);\n    if (onChangeSplit) {\n      onChangeSplit(true, state);\n    }\n  };\n\n  onClickTableButton = () => {\n    this.setState(state => ({ showingTable: !state.showingTable }));\n  };\n\n  onClickTableCell = (columnKey: string, rowValue: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key: columnKey, value: rowValue });\n  };\n\n  onModifyQueries = (action: object, index?: number) => {\n    const { datasource, queries } = this.state;\n    if (datasource && datasource.modifyQuery) {\n      let nextQueries;\n      if (index === undefined) {\n        // Modify all queries\n        nextQueries = queries.map(q => ({\n          ...q,\n          edited: false,\n          query: datasource.modifyQuery(q.query, action),\n        }));\n      } else {\n        // Modify query only at index\n        nextQueries = [\n          ...queries.slice(0, index),\n          {\n            ...queries[index],\n            edited: false,\n            query: datasource.modifyQuery(queries[index].query, action),\n          },\n          ...queries.slice(index + 1),\n        ];\n      }\n      this.setState({ queries: nextQueries }, () => this.onSubmit());\n    }\n  };\n\n  onRemoveQueryRow = index => {\n    const { queries } = this.state;\n    if (queries.length <= 1) {\n      return;\n    }\n    const nextQueries = [...queries.slice(0, index), ...queries.slice(index + 1)];\n    this.setState({ queries: nextQueries }, () => this.onSubmit());\n  };\n\n  onSubmit = () => {\n    const { showingLogs, showingGraph, showingTable, supportsGraph, supportsLogs, supportsTable } = this.state;\n    if (showingTable && supportsTable) {\n      this.runTableQuery();\n    }\n    if (showingGraph && supportsGraph) {\n      this.runGraphQuery();\n    }\n    if (showingLogs && supportsLogs) {\n      this.runLogsQuery();\n    }\n  };\n\n  onQuerySuccess(datasourceId: string, queries: any[]): void {\n    // save queries to history\n    let { history } = this.state;\n    const { datasource } = this.state;\n\n    if (datasource.meta.id !== datasourceId) {\n      // Navigated away, queries did not matter\n      return;\n    }\n\n    const ts = Date.now();\n    queries.forEach(q => {\n      const { query } = q;\n      history = [{ query, ts }, ...history];\n    });\n\n    if (history.length > MAX_HISTORY_ITEMS) {\n      history = history.slice(0, MAX_HISTORY_ITEMS);\n    }\n\n    // Combine all queries of a datasource type into one history\n    const historyKey = `grafana.explore.history.${datasourceId}`;\n    store.setObject(historyKey, history);\n    this.setState({ history });\n  }\n\n  buildQueryOptions(targetOptions: { format: string; hinting?: boolean; instant?: boolean }) {\n    const { datasource, queries, range } = this.state;\n    const resolution = this.el.offsetWidth;\n    const absoluteRange = {\n      from: parseDate(range.from, false),\n      to: parseDate(range.to, true),\n    };\n    const { interval } = kbn.calculateInterval(absoluteRange, resolution, datasource.interval);\n    const targets = queries.map(q => ({\n      ...targetOptions,\n      expr: q.query,\n    }));\n    return {\n      interval,\n      range,\n      targets,\n    };\n  }\n\n  async runGraphQuery() {\n    const { datasource, queries } = this.state;\n    if (!hasQuery(queries)) {\n      return;\n    }\n    this.setState({ latency: 0, loading: true, graphResult: null, queryErrors: [], queryHints: [] });\n    const now = Date.now();\n    const options = this.buildQueryOptions({ format: 'time_series', instant: false, hinting: true });\n    try {\n      const res = await datasource.query(options);\n      const result = makeTimeSeriesList(res.data, options);\n      const queryHints = res.hints ? makeHints(res.hints) : [];\n      const latency = Date.now() - now;\n      this.setState({ latency, loading: false, graphResult: result, queryHints, requestOptions: options });\n      this.onQuerySuccess(datasource.meta.id, queries);\n    } catch (response) {\n      console.error(response);\n      const queryError = response.data ? response.data.error : response;\n      this.setState({ loading: false, queryErrors: [queryError] });\n    }\n  }\n\n  async runTableQuery() {\n    const { datasource, queries } = this.state;\n    if (!hasQuery(queries)) {\n      return;\n    }\n    this.setState({ latency: 0, loading: true, queryErrors: [], queryHints: [], tableResult: null });\n    const now = Date.now();\n    const options = this.buildQueryOptions({\n      format: 'table',\n      instant: true,\n    });\n    try {\n      const res = await datasource.query(options);\n      const tableModel = res.data[0];\n      const latency = Date.now() - now;\n      this.setState({ latency, loading: false, tableResult: tableModel, requestOptions: options });\n      this.onQuerySuccess(datasource.meta.id, queries);\n    } catch (response) {\n      console.error(response);\n      const queryError = response.data ? response.data.error : response;\n      this.setState({ loading: false, queryErrors: [queryError] });\n    }\n  }\n\n  async runLogsQuery() {\n    const { datasource, queries } = this.state;\n    if (!hasQuery(queries)) {\n      return;\n    }\n    this.setState({ latency: 0, loading: true, queryErrors: [], queryHints: [], logsResult: null });\n    const now = Date.now();\n    const options = this.buildQueryOptions({\n      format: 'logs',\n    });\n\n    try {\n      const res = await datasource.query(options);\n      const logsData = res.data;\n      const latency = Date.now() - now;\n      this.setState({ latency, loading: false, logsResult: logsData, requestOptions: options });\n      this.onQuerySuccess(datasource.meta.id, queries);\n    } catch (response) {\n      console.error(response);\n      const queryError = response.data ? response.data.error : response;\n      this.setState({ loading: false, queryErrors: [queryError] });\n    }\n  }\n\n  request = url => {\n    const { datasource } = this.state;\n    return datasource.metadataRequest(url);\n  };\n\n  render() {\n    const { datasourceSrv, position, split } = this.props;\n    const {\n      datasource,\n      datasourceError,\n      datasourceLoading,\n      datasourceMissing,\n      graphResult,\n      history,\n      latency,\n      loading,\n      logsResult,\n      queries,\n      queryErrors,\n      queryHints,\n      range,\n      requestOptions,\n      showingGraph,\n      showingLogs,\n      showingTable,\n      supportsGraph,\n      supportsLogs,\n      supportsTable,\n      tableResult,\n    } = this.state;\n    const showingBoth = showingGraph && showingTable;\n    const graphHeight = showingBoth ? '200px' : '400px';\n    const graphButtonActive = showingBoth || showingGraph ? 'active' : '';\n    const logsButtonActive = showingLogs ? 'active' : '';\n    const tableButtonActive = showingBoth || showingTable ? 'active' : '';\n    const exploreClass = split ? 'explore explore-split' : 'explore';\n    const datasources = datasourceSrv.getExploreSources().map(ds => ({\n      value: ds.name,\n      label: ds.name,\n    }));\n    const selectedDatasource = datasource ? datasource.name : undefined;\n\n    return (\n      <div className={exploreClass} ref={this.getRef}>\n        <div className=\"navbar\">\n          {position === 'left' ? (\n            <div>\n              <a className=\"navbar-page-btn\">\n                <i className=\"fa fa-rocket\" />\n                探索\n              </a>\n            </div>\n          ) : (\n            <div className=\"navbar-buttons explore-first-button\">\n              <button className=\"btn navbar-button\" onClick={this.onClickCloseSplit}>\n                关闭分隔\n              </button>\n            </div>\n          )}\n          {!datasourceMissing ? (\n            <div className=\"navbar-buttons\">\n              <Select\n                className=\"datasource-picker\"\n                clearable={false}\n                onChange={this.onChangeDatasource}\n                options={datasources}\n                placeholder=\"加载数据源...\"\n                value={selectedDatasource}\n              />\n            </div>\n          ) : null}\n          <div className=\"navbar__spacer\" />\n          {position === 'left' && !split ? (\n            <div className=\"navbar-buttons\">\n              <button className=\"btn navbar-button\" onClick={this.onClickSplit}>\n                分隔\n              </button>\n            </div>\n          ) : null}\n          <TimePicker range={range} onChangeTime={this.onChangeTime} />\n          <div className=\"navbar-buttons\">\n            <button className=\"btn navbar-button navbar-button--no-icon\" onClick={this.onClickClear}>\n              清除所有\n            </button>\n          </div>\n          <div className=\"navbar-buttons relative\">\n            <button className=\"btn navbar-button--primary\" onClick={this.onSubmit}>\n              执行查询 <i className=\"fa fa-level-down run-icon\" />\n            </button>\n            {loading || latency ? <ElapsedTime time={latency} className=\"text-info\" /> : null}\n          </div>\n        </div>\n\n        {datasourceLoading ? <div className=\"explore-container\">加载数据源...</div> : null}\n\n        {datasourceMissing ? (\n          <div className=\"explore-container\">请添加一个数据源以供更多操作 (例如, Prometheus数据源).</div>\n        ) : null}\n\n        {datasourceError ? (\n          <div className=\"explore-container\">连接数据源出错. [{datasourceError}]</div>\n        ) : null}\n\n        {datasource && !datasourceError ? (\n          <div className=\"explore-container\">\n            <QueryRows\n              history={history}\n              queries={queries}\n              queryErrors={queryErrors}\n              queryHints={queryHints}\n              request={this.request}\n              onAddQueryRow={this.onAddQueryRow}\n              onChangeQuery={this.onChangeQuery}\n              onClickHintFix={this.onModifyQueries}\n              onExecuteQuery={this.onSubmit}\n              onRemoveQueryRow={this.onRemoveQueryRow}\n            />\n            <div className=\"result-options\">\n              {supportsGraph ? (\n                <button className={`btn navbar-button ${graphButtonActive}`} onClick={this.onClickGraphButton}>\n                  图形\n                </button>\n              ) : null}\n              {supportsTable ? (\n                <button className={`btn navbar-button ${tableButtonActive}`} onClick={this.onClickTableButton}>\n                  表格\n                </button>\n              ) : null}\n              {supportsLogs ? (\n                <button className={`btn navbar-button ${logsButtonActive}`} onClick={this.onClickLogsButton}>\n                  日志\n                </button>\n              ) : null}\n            </div>\n\n            <main className=\"m-t-2\">\n              {supportsGraph && showingGraph ? (\n                <Graph\n                  data={graphResult}\n                  height={graphHeight}\n                  loading={loading}\n                  id={`explore-graph-${position}`}\n                  options={requestOptions}\n                  split={split}\n                />\n              ) : null}\n              {supportsTable && showingTable ? (\n                <Table className=\"m-t-3\" data={tableResult} loading={loading} onClickCell={this.onClickTableCell} />\n              ) : null}\n              {supportsLogs && showingLogs ? <Logs data={logsResult} loading={loading} /> : null}\n            </main>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Explore);\n","import React, { PureComponent } from 'react';\n\nimport Explore from './Explore';\n\nexport default class Wrapper extends PureComponent<any, any> {\n  state = {\n    initialState: null,\n    split: false,\n  };\n\n  handleChangeSplit = (split, initialState) => {\n    this.setState({ split, initialState });\n  };\n\n  render() {\n    // State overrides for props from first Explore\n    const { initialState, split } = this.state;\n    return (\n      <div className=\"explore-wrapper\">\n        <Explore {...this.props} position=\"left\" onChangeSplit={this.handleChangeSplit} split={split} />\n        {split ? (\n          <Explore\n            {...this.props}\n            initialState={initialState}\n            onChangeSplit={this.handleChangeSplit}\n            position=\"right\"\n            split={split}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}