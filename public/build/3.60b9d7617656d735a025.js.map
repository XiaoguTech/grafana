{"version":3,"sources":["webpack:///./public/vendor/flot/jquery.flot.gauge.js","webpack:///./public/vendor/flot/jquery.flot.dashes.js","webpack:///./public/vendor/flot/jquery.flot.crosshair.js","webpack:///./public/vendor/flot/jquery.flot.fillbelow.js","webpack:///./public/vendor/flot/jquery.flot.stackpercent.js","webpack:///./public/vendor/flot/jquery.flot.stack.js","webpack:///./public/vendor/flot/jquery.flot.selection.js","webpack:///./public/vendor/flot/jquery.flot.pie.js","webpack:///./public/app/plugins/datasource/prometheus/snippets/prometheus.js","webpack:///./public/app/plugins/datasource/prometheus/mode-prometheus.js","webpack:///./public/app/features/panellinks/link_srv.ts","webpack:///./public/app/features/panellinks/module.ts","webpack:///./public/app/features/dashlinks/editor.ts","webpack:///./public/app/features/dashlinks/module.ts","webpack:///./public/app/features/annotations/editor_ctrl.ts","webpack:///./public/app/features/annotations/events_processing.ts","webpack:///./public/app/features/annotations/annotations_srv.ts","webpack:///./public/app/features/annotations/event_editor.ts","webpack:///./public/app/features/annotations/event.ts","webpack:///./public/app/features/annotations/event_manager.ts","webpack:///./public/app/features/annotations/annotation_tooltip.ts","webpack:///./public/app/features/annotations/all.ts","webpack:///./public/app/features/templating/variable.ts","webpack:///./public/app/features/templating/editor_ctrl.ts","webpack:///./public/app/features/templating/template_srv.ts","webpack:///./public/app/features/templating/variable_srv.ts","webpack:///./public/app/features/templating/interval_variable.ts","webpack:///./public/app/features/templating/query_variable.ts","webpack:///./public/app/features/templating/datasource_variable.ts","webpack:///./public/app/features/templating/custom_variable.ts","webpack:///./public/app/features/templating/constant_variable.ts","webpack:///./public/app/features/templating/adhoc_variable.ts","webpack:///./public/app/features/plugins/plugin_edit_ctrl.ts","webpack:///./public/app/features/templating/all.ts","webpack:///./public/app/features/plugins/plugin_page_ctrl.ts","webpack:///./public/app/features/plugins/plugin_list_ctrl.ts","webpack:///./public/app/features/plugins/import_list/import_list.ts","webpack:///./public/app/features/plugins/ds_edit_ctrl.ts","webpack:///./public/app/features/plugins/ds_dashboards_ctrl.ts","webpack:///./public/app/features/plugins/ds_list_ctrl.ts","webpack:///./public/app/features/panel/panel_ctrl.ts","webpack:///./public/app/features/panel/metrics_tab.ts","webpack:///./public/app/features/panel/metrics_panel_ctrl.ts","webpack:///./public/app/features/panel/query_ctrl.ts","webpack:///./public/app/features/alerting/threshold_mapper.ts","webpack:///./public/app/features/alerting/alert_tab_ctrl.ts","webpack:///./public/app/plugins/sdk.ts","webpack:///./public/app/core/utils/file_export.ts","webpack:///./public/app/core/utils/flatten.ts","webpack:///./public/app/core/utils/version.ts","webpack:///./public/app/plugins/datasource/graphite/gfunc.ts","webpack:///./public/app/plugins/datasource/graphite/datasource.ts","webpack:///./public/app/plugins/datasource/graphite/add_graphite_func.ts","webpack:///./public/app/plugins/datasource/graphite/func_editor.ts","webpack:///./public/app/plugins/datasource/graphite/lexer.ts","webpack:///./public/app/plugins/datasource/graphite/parser.ts","webpack:///./public/app/plugins/datasource/graphite/graphite_query.ts","webpack:///./public/app/plugins/datasource/graphite/query_ctrl.ts","webpack:///./public/app/plugins/datasource/graphite/module.ts","webpack:///./public/app/plugins/datasource/graphite/config_ctrl.ts","webpack:///./public/app/plugins/datasource/cloudwatch/query_parameter_ctrl.ts","webpack:///./public/app/plugins/datasource/cloudwatch/datasource.ts","webpack:///./public/app/plugins/datasource/cloudwatch/config_ctrl.ts","webpack:///./public/app/plugins/datasource/cloudwatch/query_ctrl.ts","webpack:///./public/app/plugins/datasource/cloudwatch/module.ts","webpack:///./public/app/plugins/datasource/elasticsearch/query_def.ts","webpack:///./public/app/plugins/datasource/elasticsearch/query_builder.ts","webpack:///./public/app/plugins/datasource/elasticsearch/elastic_response.ts","webpack:///./public/app/plugins/datasource/elasticsearch/index_pattern.ts","webpack:///./public/app/plugins/datasource/elasticsearch/datasource.ts","webpack:///./public/app/plugins/datasource/elasticsearch/bucket_agg.ts","webpack:///./public/app/plugins/datasource/elasticsearch/metric_agg.ts","webpack:///./public/app/plugins/datasource/elasticsearch/query_ctrl.ts","webpack:///./public/app/plugins/datasource/elasticsearch/config_ctrl.ts","webpack:///./public/app/plugins/datasource/opentsdb/datasource.ts","webpack:///./public/app/plugins/datasource/elasticsearch/module.ts","webpack:///./public/app/plugins/datasource/opentsdb/query_ctrl.ts","webpack:///./public/app/plugins/datasource/opentsdb/config_ctrl.ts","webpack:///./public/app/plugins/datasource/opentsdb/module.ts","webpack:///./public/app/plugins/datasource/grafana/datasource.ts","webpack:///./public/app/plugins/datasource/grafana/module.ts","webpack:///./public/app/plugins/datasource/influxdb/influx_series.ts","webpack:///./public/app/plugins/datasource/influxdb/query_part.ts","webpack:///./public/app/plugins/datasource/influxdb/influx_query.ts","webpack:///./public/app/plugins/datasource/influxdb/query_builder.ts","webpack:///./public/app/plugins/datasource/influxdb/response_parser.ts","webpack:///./public/app/plugins/datasource/influxdb/datasource.ts","webpack:///./public/app/plugins/datasource/influxdb/query_ctrl.ts","webpack:///./public/app/plugins/datasource/influxdb/module.ts","webpack:///./public/app/core/logs_model.ts","webpack:///./public/app/plugins/datasource/logging/result_transformer.ts","webpack:///./public/app/plugins/datasource/logging/datasource.ts","webpack:///./public/app/plugins/datasource/mysql/response_parser.ts","webpack:///./public/app/plugins/datasource/logging/module.ts","webpack:///./public/app/plugins/datasource/mixed/datasource.ts","webpack:///./public/app/plugins/datasource/mixed/module.ts","webpack:///./public/app/plugins/datasource/mysql/datasource.ts","webpack:///./public/app/plugins/datasource/mysql/query_ctrl.ts","webpack:///./public/app/plugins/datasource/mysql/module.ts","webpack:///./public/app/plugins/datasource/postgres/response_parser.ts","webpack:///./public/app/plugins/datasource/postgres/datasource.ts","webpack:///./public/app/plugins/datasource/postgres/query_ctrl.ts","webpack:///./public/app/plugins/datasource/postgres/module.ts","webpack:///./public/app/plugins/datasource/prometheus/metric_find_query.ts","webpack:///./public/app/plugins/datasource/prometheus/result_transformer.ts","webpack:///./public/app/plugins/datasource/prometheus/datasource.ts","webpack:///./public/app/plugins/datasource/prometheus/completer.ts","webpack:///./public/app/plugins/datasource/prometheus/query_ctrl.ts","webpack:///./public/app/plugins/datasource/prometheus/config_ctrl.ts","webpack:///./public/app/plugins/datasource/prometheus/module.ts","webpack:///./public/app/plugins/datasource/mssql/response_parser.ts","webpack:///./public/app/plugins/datasource/mssql/datasource.ts","webpack:///./public/app/plugins/datasource/testdata/datasource.ts","webpack:///./public/app/plugins/datasource/mssql/query_ctrl.ts","webpack:///./public/app/plugins/datasource/mssql/module.ts","webpack:///./public/app/plugins/datasource/testdata/query_ctrl.ts","webpack:///./public/app/plugins/datasource/testdata/module.ts","webpack:///./public/app/plugins/panel/text/module.ts","webpack:///./public/app/plugins/panel/graph/jquery.flot.events.ts","webpack:///./public/app/plugins/panel/graph/graph_tooltip.ts","webpack:///./public/app/plugins/panel/graph/threshold_manager.ts","webpack:///./public/app/plugins/panel/graph/align_yaxes.ts","webpack:///./public/app/plugins/panel/graph/histogram.ts","webpack:///./public/app/plugins/panel/graph/graph.ts","webpack:///./public/app/plugins/panel/graph/legend.ts","webpack:///./public/app/plugins/panel/graph/series_overrides_ctrl.ts","webpack:///./public/app/plugins/panel/graph/thresholds_form.ts","webpack:///./public/app/plugins/panel/graph/template.ts","webpack:///./public/app/plugins/panel/graph/data_processor.ts","webpack:///./public/app/plugins/panel/graph/module.ts","webpack:///./public/app/plugins/panel/graph/axes_editor.ts","webpack:///./public/app/plugins/panel/dashlist/module.ts","webpack:///./public/app/plugins/panel/pluginlist/module.ts","webpack:///./public/app/plugins/panel/alertlist/module.ts","webpack:///./public/app/plugins/panel/heatmap/color_legend.ts","webpack:///./public/app/plugins/panel/heatmap/color_scale.ts","webpack:///./public/app/plugins/panel/heatmap/display_editor.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_data_converter.ts","webpack:///./public/app/plugins/panel/heatmap/axes_editor.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_tooltip.ts","webpack:///./public/app/plugins/panel/heatmap/rendering.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_ctrl.ts","webpack:///./public/app/plugins/panel/heatmap/module.ts","webpack:///./public/app/plugins/panel/table/transformers.ts","webpack:///./public/app/plugins/panel/table/editor.ts","webpack:///./public/app/plugins/panel/table/column_options.ts","webpack:///./public/app/plugins/panel/table/renderer.ts","webpack:///./public/app/plugins/panel/table/module.ts","webpack:///./public/app/plugins/panel/singlestat/module.ts","webpack:///./public/app/plugins/panel/gettingstarted/module.ts","webpack:///./public/app/features/plugins/built_in_plugins.ts","webpack:///./public/app/features/plugins/plugin_loader.ts","webpack:///./public/app/features/plugins/datasource_srv.ts","webpack:///./public/app/plugins/panel/unknown/module.ts","webpack:///./public/app/features/plugins/plugin_component.ts","webpack:///./public/app/features/dashboard/dashboard_ctrl.ts","webpack:///./public/app/features/plugins/all.ts","webpack:///./public/app/features/dashboard/history/history.ts","webpack:///./public/app/features/dashboard/alerting_srv.ts","webpack:///./public/app/features/dashboard/history/history_srv.ts","webpack:///./public/app/features/dashboard/dashboard_loader_srv.ts","webpack:///./public/app/features/dashboard/dashnav/dashnav.ts","webpack:///./public/app/features/dashboard/submenu/submenu.ts","webpack:///./public/app/features/dashboard/save_as_modal.ts","webpack:///./public/app/features/dashboard/save_modal.ts","webpack:///./public/app/features/dashboard/save_provisioned_modal.ts","webpack:///./public/app/features/dashboard/shareModalCtrl.ts","webpack:///./public/app/features/dashboard/share_snapshot_ctrl.ts","webpack:///./public/app/features/dashboard/dashboard_srv.ts","webpack:///./public/app/features/dashboard/view_state_srv.ts","webpack:///./public/app/features/dashboard/validation_srv.ts","webpack:///./public/app/features/dashboard/time_srv.ts","webpack:///./public/app/features/dashboard/change_tracker.ts","webpack:///./public/app/features/dashboard/unsaved_changes_srv.ts","webpack:///./public/app/features/dashboard/unsaved_changes_modal.ts","webpack:///./public/app/features/dashboard/timepicker/input_date.ts","webpack:///./public/app/features/dashboard/timepicker/timepicker.ts","webpack:///./public/app/features/dashboard/upload.ts","webpack:///./public/app/features/dashboard/export/exporter.ts","webpack:///./public/app/features/dashboard/export/export_modal.ts","webpack:///./public/app/features/dashboard/export_data/export_data_modal.ts","webpack:///./public/app/features/dashboard/ad_hoc_filters.ts","webpack:///./public/app/features/dashboard/repeat_option/repeat_option.ts","webpack:///./public/app/features/dashboard/dashgrid/DashboardRow.tsx","webpack:///./public/app/core/components/ScrollBar/ScrollBar.tsx","webpack:///./public/app/features/dashboard/dashgrid/AddPanelPanel.tsx","webpack:///./public/app/features/dashboard/dashgrid/DashboardPanel.tsx","webpack:///./public/app/features/dashboard/dashgrid/DashboardGrid.tsx","webpack:///./public/app/features/dashboard/dashgrid/PanelLoader.ts","webpack:///./public/app/features/dashboard/dashgrid/DashboardGridDirective.ts","webpack:///./public/app/features/dashboard/dashgrid/RowOptions.ts","webpack:///./public/app/features/dashboard/folder_picker/folder_picker.ts","webpack:///./public/app/features/dashboard/move_to_folder_modal/move_to_folder.ts","webpack:///./public/app/features/dashboard/settings/settings.ts","webpack:///./public/app/features/dashboard/dashboard_list_ctrl.ts","webpack:///./public/app/features/dashboard/folder_page_loader.ts","webpack:///./public/app/features/dashboard/folder_dashboards_ctrl.ts","webpack:///./public/app/features/dashboard/folder_settings_ctrl.ts","webpack:///./public/app/features/dashboard/dashboard_import_ctrl.ts","webpack:///./public/app/features/playlist/playlists_ctrl.ts","webpack:///./public/app/features/dashboard/create_folder_ctrl.ts","webpack:///./public/app/features/dashboard/all.ts","webpack:///./public/app/features/playlist/playlist_search.ts","webpack:///./public/app/features/playlist/playlist_srv.ts","webpack:///./public/app/features/playlist/playlist_edit_ctrl.ts","webpack:///./public/app/features/playlist/playlist_routes.ts","webpack:///./public/app/features/playlist/all.ts","webpack:///./public/app/features/snapshot/snapshot_ctrl.ts","webpack:///./public/app/features/panel/panel_header.ts","webpack:///./public/app/features/panel/panel_directive.ts","webpack:///./public/app/features/panel/solo_panel_ctrl.ts","webpack:///./public/app/features/panel/panel_editor_tab.ts","webpack:///./public/app/features/panel/query_editor_row.ts","webpack:///./public/app/features/panel/query_troubleshooter.ts","webpack:///./public/app/features/panel/all.ts","webpack:///./public/app/features/org/org_users_ctrl.ts","webpack:///./public/app/features/org/profile_ctrl.ts","webpack:///./public/app/features/org/select_org_ctrl.ts","webpack:///./public/app/features/org/new_org_ctrl.ts","webpack:///./public/app/features/org/change_password_ctrl.ts","webpack:///./public/app/features/org/user_invite_ctrl.ts","webpack:///./public/app/features/org/create_team_ctrl.ts","webpack:///./public/app/features/org/org_api_keys_ctrl.ts","webpack:///./public/app/features/org/org_details_ctrl.ts","webpack:///./public/app/features/org/prefs_control.ts","webpack:///./public/app/features/org/all.ts","webpack:///./public/app/features/admin/admin_list_users_ctrl.ts","webpack:///./public/app/features/admin/admin_list_orgs_ctrl.ts","webpack:///./public/app/features/admin/admin_edit_org_ctrl.ts","webpack:///./public/app/features/admin/admin_edit_user_ctrl.ts","webpack:///./public/app/features/admin/admin.ts","webpack:///./public/app/features/alerting/notifications_list_ctrl.ts","webpack:///./public/app/features/alerting/notification_edit_ctrl.ts","webpack:///./public/app/features/alerting/all.ts","webpack:///./public/app/features/styleguide/styleguide.ts","webpack:///./public/app/features/all.ts"],"names":["$","Gauge","context","placeholder","options","gaugeOptions","series","plot","ctx","getPlaceholder","getOptions","gauges","getData","getLogger","debug","calculateAutoValues","gaugeOptionsi","cellWidth","gauge","width","Math","max","label","margin","font","size","value","threshold","calculateAngle","layout","data","a","startAngle","endAngle","min","drawArcWithShadow","cx","cy","r","w","rd1","rd2","lc","lw","fc","blur","save","drawArc","clip","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","restore","drawThresholdValue","cellLayout","i","drawText","thresholdLabelMargin","thresholdLabelFontSize","radius","cos","toRad","sin","formatter","x","y","id","text","textOptions","span","exists","length","attr","css","family","color","background","opacity","append","parseInt","height","prototype","calculateLayout","canvasWidth","canvasHeight","columns","rows","ceil","hMargin","vMargin","cellHeight","square","cell","cellMargin","labelMargin","labelFontSize","show","valueMargin","valueFontSize","thresholdWidth","maxRadiusH","dAngle","heightRatioV","outerRadiusV","maxRadiusV","outerRadius","gaugeOuterHeight","calculateCellLayout","c","col","floor","row","blank","offsetY","vAlign","drawBackground","frame","strokeStyle","grid","borderColor","lineWidth","borderWidth","strokeRect","backgroundColor","fillStyle","fillRect","drawCellBackground","border","drawGauge","shadow","c1","values","getColor","a2","drawThreshold","a1","drawLable","item","drawValue","drawThresholdValues","j","debugOptions","Logger","PI","beginPath","arc","lineTo","closePath","stroke","fill","defaults","log","alert","plugins","push","init","hooks","processOptions","legend","sort","b","draw","extend","name","version","jQuery","processDatapoints","datapoints","dashes","plotOffset","getPlotOffset","axisx","xaxis","axisy","yaxis","plotDashes","xoffset","yoffset","dashOnLength","dashOffLength","points","ps","pointsize","prevx","prevy","dashRemainder","dashOn","dashLength","x1","y1","x2","y2","moveTo","p2c","dashOffset","ax1","ay1","ax2","ay2","lineSegmentOffset","deltaX","deltaY","remainder","distance","segmentLength","sqrt","pow","ysign","translate","left","top","lineJoin","sw","shadowSize","angle","crosshair","locked","onMouseOut","e","triggerRedrawOverlay","onMouseMove","getSelection","offset","pageX","pageY","setCrosshair","pos","o","clearCrosshair","lockCrosshair","unlockCrosshair","bindEvents","eventHolder","mode","mouseout","mousemove","drawOverlay","adj","indexOf","drawX","drawY","shutdown","unbind","segmentIntersection","top_left_x","top_left_y","top_right_x","top_right_y","bottom_left_x","bottom_left_y","bottom_right_x","bottom_right_y","top_delta_x","top_delta_y","bottom_delta_x","bottom_delta_y","s","t","drawSeries","otherseries","otherps","otherpoints","openPolygon","findNextStart","start_i","end_i","console","assert","intersect","start","equal","intersectionPoint","topTraversal","right_i","error","bottomTraversal","fillBelowTo","allseries","findBelowSeries","validateInput","parse","normalize","toString","stackBases","processed","stackSums","getStackSums","_data","data_len","sums","stackpercent","key_idx","value_idx","bars","horizontal","num","processRawData","percents","sum","newPoints","stack","other","res","findMatchingSeries","px","py","intery","qx","qy","bottom","l","m","newpoints","withlines","lines","withbottom","format","withsteps","steps","keyOffset","accumulateOffset","fromgap","selection","first","second","active","savedhandlers","mouseUpHandler","updateSelection","trigger","onMouseDown","which","document","body","focus","undefined","onselectstart","ondrag","setSelectionPos","selectionIsSane","triggerSelectedEvent","setTimeout","isSelecting","onMouseUp","one","c2","axes","getAxes","each","axis","used","anyUsed","p1","c2p","direction","p2","from","to","event","ctrlKey","metaKey","clamp","clearSelection","preventEvent","extractRange","ranges","coord","key","k","n","getXAxes","getYAxes","tmp","minSize","abs","setSelection","range","mousedown","scale","shape","h","REDRAW_ATTEMPTS","REDRAW_SHRINK","pie","innerRadius","tilt","alpha","slice","round","percent","combine","highlight","canvas","target","maxRadius","centerLeft","centerTop","highlights","getCanvas","parent","setData","total","combined","numCombined","newdata","isArray","isNaN","parseFloat","isFinite","newCtx","legendWidth","children","filter","position","match","slices","attempts","clear","drawShadow","drawPie","prepend","setSeries","insertLegend","clearRect","remove","shadowLeft","shadowTop","globalAlpha","currentAngle","drawSlice","drawDonutHole","drawLabel","index","lf","labelFormatter","plf","halfAngle","html","labelTop","labelLeft","insertBefore","drawLabels","layer","globalCompositeOperation","isPointInPoly","poly","pt","triggerClickHoverEvent","onClick","eventname","mouseX","mouseY","isPointInPath","datapoint","dataIndex","seriesIndex","findNearbySlice","autoHighlight","auto","unhighlight","indexOfHighlight","splice","hoverable","clickable","click","octx","drawHighlight","ace","define","require","exports","module","snippets","content","scope","tabTrigger","oop","TextHighlightRules","PrometheusHighlightRules","keywordMapper","this","createKeywordMapper","support.function","keyword","constant.language","$rules","token","regex","next","start-label-matcher","start-label-list-matcher","normalizeRules","inherits","lang","keyWordsCompletions","map","word","caption","meta","score","Number","MAX_VALUE","functionsCompletions","def","docText","docHTML","escapeHTML","replace","convertMarkDownTags","str","len","space_index","line_start","next_line_end","line","join","wrapText","convertToHTML","PrometheusCompletions","getCompletions","state","session","prefix","callback","getTokenAt","column","type","concat","call","CstyleBehaviour","Behaviour","TokenIterator","PrometheusBehaviour","inherit","add","action","editor","getSelectionRange","selected","doc","getTextRange","getWrapBehavioursEnabled","opening","closing","rowDiff","end","getWrapped","isSaneInsertion","cursor","getCursorPosition","getLine","substring","$findOpeningBracket","isAutoInsertedClosing","isMultiLine","TextMode","Mode","HighlightRules","$behaviour","$completer","completer","$id","__webpack_require__","d","singlestat_module_namespaceObject","module_SingleStatCtrl","getColorForValue","gettingstarted_module_namespaceObject","module_GettingStartedPanelCtrl","angular","lodash","templateSrv","timeSrv","$inject","getLinkUrl","link","url","timeRangeForUrl","includeVars","fillVariableValuesForUrl","params","addParamsToUrl","paramsArray","lodash_default","instance","encodeURIComponent","appendToQueryString","LinkSrv","stringToAppend","isUndefined","getAnchorInfo","info","href","title","getPanelLinkAnchorInfo","scopedVars","targetBlank","dashUri","slug","kbn","slugifyForUrl","dashboard","keepTime","service","link_srv_LinkSrv","PanelLinksEditorCtrl","$scope","backendSrv","panel","links","addLink","searchDashboards","queryStr","dashboards","hits","dash","dashboardChanged","search","query","then","find","uri","deleteLink","without","controller","templateUrl","module_PanelLinksEditorCtrl","iconMap","question","cloud","DashLinkEditorCtrl","$rootScope","$on","appEvent","backToList","setupNew","editLink","saveLink","updateSubmenuVisibility","$compile","$sanitize","linkSrv","elem","asDropdown","update","linkInfo","anchor","anchorSanitized","sanitizeAnchor","tooltip","container","template","contents","icon","$last","addClass","directive","restrict","editor_DashLinkEditorCtrl","bindToController","controllerAs","$q","dashboardSrv","getCurrent","linkDef","tags","when","updateDashLinks","promises","buildLinks","results","generatedLinks","flatten","limit","tag","reduce","memo","currentDashId","hit","searchHits","onAppEvent","dashLink","module_DashLinksContainerCtrl","jquery_js_exposed","AnnotationsEditorCtrl","datasourceSrv","annotationDefaults","datasource","iconColor","enable","showIn","hide","showOptions","ctrl","datasources","getAnnotationSources","annotations","list","reset","onColorChange","bind","datasourceChanged","_this","get","currentAnnotation","ds","currentDatasource","edit","annotation","currentIsNew","jquery_js_exposed_default","angular_default","copy","removeAnnotation","newColor","partition","regionEvents","_a","singleEvents","events","regionId","groupBy","region_events","regions","compact","region_obj","head","timeEnd","time","isRegion","isStartOfRegion","valueOf","isPanelAlert","eventType","editor_ctrl_AnnotationsEditorCtrl","clearCache","globalAnnotationsPromise","alertStatesPromise","getAnnotations","all","getGlobalAnnotations","getAlertStates","flattenDeep","makeRegions","dedup","eventsById","eventGroup","every","dedupAnnotations","panelId","source","alertState","catch","err","message","raw","timeRange","_loop_1","this_1","annotationQuery","rangeRaw","snapshot","snapshotData","translateQueryResult","_i","state_1","saveAnnotationEvent","post","AnnotationsSrv","updateAnnotationEvent","put","results_1","annotations_srv_AnnotationsSrv","moment","EventEditorCtrl","annotationsSrv","panelCtrl","dashboardId","tryEpochToMoment","timeFormated","formatDate","form","$valid","cloneDeep","saveModel","refresh","close","delete","deleteAnnotationEvent","moment_default","epoch","timestamp","tinycolor_default","tinycolor","AnnotationEvent","event_manager_EventManager","EventManager","editorClosed","editorOpen","render","editorOpened","updateTime","editEvent","addFlotEvents","flotOptions","colors","markerSize","editModel","newState","types","fillColor","colorString","isValid","setAlpha","toRgbString","addAlphaToRGB","region","defaultColor","markings","event_manager_getRegions","eventSectionHeight","levels","keys","manager","contextSrv","escape","onEdit","element","titleStateClass","alertId","stateModel","alert_def","getStateDisplayModel","stateClass","iconClass","getAlertAnnotationInfo","isString","header","login","avatarUrl","canEdit","annotationTooltipDirective","model_utils","variableTypes","containsVariable","args","arguments","variableName","regexEscape","RegExp","exec","variableSrv","namePattern","_","optionsLimit","refreshOptions","sortOptions","hideOptions","variables","$watch","val","addVariable","current","app_events","emit","sameName","validate","infoText","getTagKeys","runQuery","updateOptions","variable","duplicate","clone","getSaveModel","createVariableFromModel","updateTemplateData","getMetricSources","mixed","datasourceTypes","uniqBy","typeChanged","old","removeVariable","showMoreOptions","VariableEditorCtrl","editor_ctrl_VariableEditorCtrl","template_srv","TemplateSrv","grafanaVariables","builtIns","isNone","variableInitialized","getAdhocFilters","datasourceName","filters","luceneFormat","luceneEscape","Array","formatValue","escapedValues","distributeVariable","setGrafanaVariable","getVariableName","expression","lastIndex","variableExists","highlightVariablesAsHtml","var1","var2","fmt2","var3","getAllValue","allValue","systemValue","fmt","fmt3","isAllValue","replaceWithText","option","skipUrlSync","getValueForUrl","VariableSrv","$location","$injector","onDashboardRefresh","updateUrlParamsWithCurrentVariables","templating","initLock","defer","queryParams","processVariable","evt","payload","fromVariableValueUpdated","Promise","resolve","previousOptions","toJson","$emit","otherVariable","dependsOn","dependencies","promise","urlValue","setValueFromUrl","finally","model","ctor","instantiate","variableUpdated","emitChangeEvents","$broadcast","selectOptionsForCurrentValue","validateVariableSelectionState","setValue","currentOption","setOptionFromUrl","op","defaultText","defaultValue","setOptionAsCurrent","setAdhocFilter","operator","variable_srv_VariableSrv","IntervalVariable","auto_min","auto_count","Object","updateAutoValue","unshift","calculateInterval","interval","trim","QueryVariable","multi","includeAll","updateOptionsFromMetricFindQuery","updateTags","useTags","metricFindQuery","tagsQuery","getValuesForTag","tagKey","tagValuesQuery","metricNamesToVariableValues","addAllOption","metricNames","matches","stringToJsRegex","isNumber","sortVariableValues","sortOrder","reverseSort","sortType","sortBy","opt","toLower","reverse","query_variable_QueryVariable","datasource_variable_DatasourceVariable","DatasourceVariable","sources","skipVariables","description","CustomVariable","custom_variable_CustomVariable","supportsMulti","ConstantVariable","constant_variable_ConstantVariable","AdhocVariable","split","unescapeDelimiter","escapeDelimiter","setFilters","adhoc_variable_AdhocVariable","factory","remarkable","PluginEditCtrl","$sce","$routeParams","navModelSrv","pluginId","setNavModel","defaultTab","navModel","main","img","logos","large","subTitle","author","breadcrumbs","includes","tab","result","pluginIcon","getPluginIcon","forEach","plug","initReadme","md","remarkable_default","readmeHtml","trustAsHtml","preUpdateHook","updateCmd","enabled","pinned","jsonData","secureJsonData","window","location","importDashboards","setPreUpdateHook","setPostUpdateHook","postUpdateHook","updateAvailable","modalScope","$new","plugin","src","disable","plugin_edit_ctrl_PluginEditCtrl","pluginInfoCache","AppPageCtrl","loadPluginInfo","initPage","app","appModel","page","getNotFoundNav","pluginNav","getNav","plugin_page_ctrl_AppPageCtrl","PluginListCtrl","tabIndex","embedded","allPlugins","onQueryUpdated","searchQuery","test","plugin_list_ctrl_PluginListCtrl","import_list_DashImportListCtrl","DashImportListCtrl","on","importAll","importNext","reject","import","overwrite","installCmd","path","importedUri","imported","access","DataSourceEditCtrl","store","nav","load","mobx_module","loadDatasourceTypes","getDatasourceById","initNewDatasourceModel","isNew","ds_edit_ctrl_defaults","gettingstarted","gettingStarted","isDefault","datasourceCreated","testDatasource","userChangedType","updateNav","initDatasourceEditNav","datasourceMeta","pluginInfo","updateFrontendSettings","settings","config","defaultDatasource","testing","done","status","withNoBackendCache","statusText","saveChanges","editForm","readOnly","confirmDelete","core","yesText","onConfirm","ds_edit_ctrl_DataSourceEditCtrl","pre","attrs","showAccessOption","noDirectAccess","showAccessHelp","toggleAccessHelp","getSuggestUrls","suggestUrl","ds_dashboards_ctrl_DataSourceDashboardsCtrl","DataSourceDashboardsCtrl","getPluginInfo","DataSourcesCtrl","removeDataSource","removeDataSourceConfirmed","ds_list_ctrl_DataSourcesCtrl","system","constants","core_store","PanelCtrl","$timeout","editorTabIndex","timing","panels","pluginName","panelDidMount","removeAllListeners","publishAppEvent","renderingCompleted","evtName","$root","changeView","fullscreen","viewPanel","editPanel","exitFullscreen","initEditMode","editorTabs","toLowerCase","urlTab","changeTab","newIndex","route","updateParams","addEditorTab","directiveFn","editorTab","getMenu","menu","role","shortcut","apply","getAdditionalMenuItems","extendedMenu","getExtendedMenu","submenu","divider","otherPanelInFullscreenMode","calculatePanelHeight","docHeight","editHeight","fullscreenHeight","containerHeight","editMode","gridPos","soloMode","renderStart","Date","getTime","duplicatePanel","removePanel","editPanelJson","editScope","object","updateHandler","replacePanel","enableCopy","copyPanel","set","JSON","stringify","newPanel","oldPanel","findIndex","deletedPanel","panel_model","sharePanel","shareScope","getInfoMode","getInfoContent","sanitize","openInspector","panelInfoHtml","inspector","MetricsTabCtrl","panelDsValue","datasourceInstance","addQueryDropdown","fake","nextRefId","getNextQueryLetter","updateDatasourceOptions","hasQueryHelp","queryOptions","includeBuiltin","builtIn","setDatasource","addMixedQuery","addQuery","toggleHelp","optionsOpen","queryTroubleshooterOpen","helpOpen","helpHtml","toggleOptions","toggleQueryTroubleshooter","metricsTabDirective","metrics_tab_MetricsTabCtrl","_super","MetricsPanelCtrl","targets","onMetricsPanelRefresh","onInitMetricsPanelEditMode","onPanelTearDown","dataSubscription","unsubscribe","updateTimeRange","dataStream","loading","setTimeQueryStart","issueQueries","handleQueryResult","cancelled","queryStart","setTimeQueryEnd","queryEnd","applyPanelTimeOverrides","maxDataPoints","resolution","intervalOverride","intervalMs","timeInfo","timeFrom","timeFromInterpolated","timeFromInfo","rangeutil","invalid","timeFromDate","datemath","display","timeShift","timeShiftInterpolated","hideTimeOverride","assign","__interval","__interval_ms","getTimezone","cacheTimeout","metricsQuery","subscribe","handleDataStream","stream","complete","items","exploreEnabled","isEditor","supportsExplore","explore","tslib_es6","getExploreState","exploreState","location_util","refId","removeQuery","moveQuery","move","alertToGraphThresholds","conditions","condition","evaluator","thresholds","value1","value2","colorMode","AlertTabCtrl","uiSegmentSrv","subTabIndex","evalFunctions","evalOperators","conditionTypes","noDataModes","executionErrorModes","appSubUrl","$onInit","newPlusButton","graphThresholdChanged","thresholdChangedEventHandler","off","editingThresholds","notifications","alertNotifications","alertHistory","initModel","validateModel","getAlertHistory","ah","getNotificationIcon","getNotifications","newSegment","changeTabIndex","newTabIndex","notificationAdded","addNotificationSegment","removeNotification","buildDefaultCondition","noDataState","executionErrorState","frequency","handler","defaultName","conditionModels","buildConditionModel","ThresholdMapper","addedNotification","_b","_c","notification","bgColor","handleIndex","evaluatorParamsChanged","firstTarget","foundTarget","alerting","targetContainsTemplate","cm","queryPart","query_part","alertQueryDef","reducerPart","createReducerPart","reducer","handleQueryPartEvent","conditionModel","handleReducerPartEvent","reducerTypes","addCondition","removeCondition","text2","evaluatorTypeChanged","clearHistory","prism","prism_default","slate_es","slate_react_es","react","react_dom","react_dom_default","time_series2","table_model","POINT_TIME_INDEX","POINT_VALUE_INDEX","END_COLUMN","END_ROW","QUOTE","EXPORT_FILENAME","csvEscaped","DOMParser","htmlDecoded","regexp","domParser","parseFromString","textContent","formatSpecialHeader","useExcelHeader","formatRow","addEndRowDelimiter","util","toLocaleString","excel","seriesList","alias","dateTimeFormat","exportSeriesListToCsv","DEFAULT_DATETIME_FORMAT","convertSeriesListToCsv","timestamps","seriesPoints","seriesTimestamps","p","extendedSeries","pointIndex","mergeSeriesByTime","convertSeriesListToCsvColumns","table","saveSaveBlob","fname","blob","Blob","FileSaver","opts","delimiter","maxDepth","currentDepth","output","step","prev","isarray","safe","newKey","utils_ticks","impression_srv","versionPattern","version_SemVersion","SemVersion","major","minor","patch","isGtOrEq","compared","isVersionGtOrEq","gfunc_index","addFuncDef","funcDef","defaultParams","shortName","optionalSeriesRefArgs","optional","multiple","obj","graphiteVersion","category","FuncInstance","withDefaultParams","updateText","metricExp","parameters","paramType","last","pop","_hasMultipleParamsInString","strValue","updateParam","partVal","idx","getFuncDef","gfunc","gfunc_FuncInstance","funcs","param","isVersionRelatedFunction","rawDefs","funcName","group","required","shift","rawParam","default","func","suggestions","GraphiteDatasource","instanceSettings","basicAuth","supportsTags","withCredentials","render_method","getQueryOptionsInfo","graphOptions","translateTime","until","buildGraphiteParams","httpOptions","method","headers","Content-Type","requestId","doGraphiteRequest","convertDataPointsToMs","tagString","graphiteQuery","parseTags","what","date","roundUp","subtract","unix","optionalOptions","interpolatedQuery","expressions","exprRegex","getTagValuesAutoComplete","getTagsAutoComplete","metric","expandable","tagPrefix","expr","valuePrefix","createFuncInstance","funcDefs","waitForFuncDefsLoaded","getFuncDefs","funcDefsPromise","supportsFunctionIndex","parseFuncDefs","Authorization","inspect","datasourceRequest","targetValue","clean_options","intervalFormatFixRegex","hasTargets","fixIntervalFormat","nestedSeriesRegexReplacer","graphite_options","rst2html_min","js_drop","drop","appendTo","allFunctions","functionMenu","categories","createFunctionDropDownMenu","$input","typeahead","minLength","updater","$apply","addFunction","$button","removeClass","cleanUpDrop","destroy","shortDesc","contentElement","innerHTML","rst2html_min_default","drop_default","classes","openOn","tetherOptions","attachment","targetAttachment","popoverSrv","$funcLink","$funcControls","scheduledRelink","paramCountAtLink","cancelBlur","clickFuncParam","paramIndex","$link","$comma","select","lookup","paramDef","switchToLink","inputElem","clearTimeout","newValue","relink","targetChanged","hasClass","inputBlur","inputKeyPress","inputKeyDown","style","toggleFuncControls","targetDiv","closest","addElementsAndCompile","defParams","lastParam","paramValue","$paramLink","paramTemplate","partial","$element","process","addTypeahead","added","$target","removeFunction","queryModel","functions","$index","classNames","open","graphiteAddFunc","graphiteFuncEditor","unicodeLetterTable","lexer_i","identifierStartTable","Lexer","input","char","Parser","lexer","tokens","tokenize","charAt","peek","skip","scanStringLiteral","scanPunctuator","scanNumericLiteral","scanIdentifier","scanTemplateSequence","isUnicodeLetter","code","isHexDigit","readUnicodeEscapeSequence","ch1","ch2","ch3","ch4","getIdentifierStart","chr","charCodeAt","getIdentifierPart","ch","isDecimalDigit","isMalformed","isIdentifierStart","base","isOctalDigit","bad","isPunctuator","quote","isUnclosed","functionCall","metricExpression","curlySegment","consumeToken","errorMark","curly","curlyBraceSegment","parts","node","segments","metricSegment","segment","functionParameters","numericLiteral","seriesRefExpression","boolExpression","stringLiteral","currentToken","token1","token2","matchToken","graphite_query","GraphiteQuery","parseTarget","removeTagValue","textEditor","getAst","astNode","checkForSeriesByTag","hidden","splitSeriesByTagParams","seriesByTagFunc","getSegmentPathUpTo","arr","parseTargetRecursive","innerFunc","addFunctionParameter","updateSegmentValue","addSelectMetricSegment","newFunc","moveAliasFuncLast","startsWith","aliasFunc","updateModelTarget","wrapFunction","metricPath","updateRenderedTarget","targetsByRefId","keyBy","nestedSeriesRefRegex","targetWithNestedQueries","count","refCount","countTargetRefs","updated","g1","targetFull","tagPattern","getSeriesByTagFuncIndex","getSeriesByTagFunc","addTag","newTagParam","renderTagString","removeTag","updateTag","tagIndex","renderTagExpressions","excludeIndex","tagExpr","GraphiteQueryCtrl","paused","toggleEditorMode","buildSegments","checkOtherSegmentsIndex","checkOtherSegments","seriesByTagUsed","fixTagSegments","newSelectMetric","fromIndex","setSegmentFocus","segmentIndex","getAltSegments","altSegments","eachRight","removeTaggedEntry","addAltTagSegments","getTagsAsSegments","tagSegments","TAG_PREFIX","segmentValueChanged","removeTagPrefix","pause","addSeriesByTagFunc","spliceSegments","emptySegments","targetTextChanged","oldTarget","smartlyHandleNewAliasByNode","tagParam","getAllTags","getTags","altTags","mapToDropdownOptions","tagExpressions","getTagOperators","GRAPHITE_TAG_OPERATORS","getAllTagValues","getTagValues","altValues","tagChanged","addNewTag","newTag","addTagSegments","showDelimiter","unpause","query_ctrl_QueryCtrl","GraphiteConfigCtrl","graphiteVersions","autoDetectGraphiteVersion","loadDatasource","getVersion","onChange","namespace","metricName","statistics","dimensions","period","returnData","highResolution","regionSegment","getSegmentForValue","namespaceSegment","dimSegments","newOperator","newKeyValue","statSegments","stat","ensurePlusButton","removeDimSegment","removeStatSegment","isEmpty","standardStatistics","seg","lastSegment","getDimSegments","getDimensionKeys","dimensionKey","getDimensionValues","transformToSegments","dimSegmentChanged","newFake","cssClass","dims","keySegment","valueSegment","getRegions","getMetrics","regionChanged","namespaceChanged","metricChanged","addTemplateVars","CloudWatchQueryParameter","query_parameter_ctrl_CloudWatchQueryParameterCtrl","cloudwatch_datasource","CloudWatchDatasource","supportMetrics","proxyUrl","defaultRegion","expandTemplateVariable","queries","getActualRegion","convertDimensionFormat","String","getPeriod","some","datasourceId","request","performTimeSeriesQuery","now","convertToCloudWatchTime","interval_to_seconds","periodUnit","daySec","awsRequest","queryRes","transformSuggestDataFromTable","suggestData","tables","v","doMetricQueryRequest","subtype","getNamespaces","filterDimensions","getEbsVolumeIds","instanceId","getEc2InstanceAttribute","attributeName","filterJson","metricNameQuery","dimensionKeysQuery","dimensionValuesQuery","ebsVolumeIdsQuery","ec2InstanceAttributeQuery","targetAttributeName","defaultPeriod","prefixMatching","actionPrefix","alarmNamePrefix","getDefaultRegion","getExpandedVariables","allSelected","currentVariables","selectedVariables","scopedVar","findKey","has","multiVariable","convertedDimensions","query_ctrl_CloudWatchQueryCtrl","CloudWatchQueryCtrl","aliasSyntax","CloudWatchConfigCtrl","accessKeyExist","secretKeyExist","authTypes","indexPatternTypes","example","timeField","authType","secureJsonFields","accessKey","secretKey","resetAccessKey","resetSecretKey","CloudWatchAnnotationsQueryCtrl","requiresField","supportsInlineScript","supportsMissing","isPipelineAgg","minVersion","orderByOptions","orderOptions","sizeOptions","movingAvgModelOptions","query_def_pipelineOptions","moving_avg","holt","holt_winters","isCheckbox","getMetricAggTypes","esVersion","query_def_metricAggTypes","f","metricType","po","getMovingAvgSettings","filtered","filteredResult","movingAvgModelSettings","setting","field","ElasticQueryBuilder","getRangeFilter","gte","lte","buildTermsAgg","aggDef","queryNode","metricRef","terms","orderBy","order","metrics","aggs","min_doc_count","missing","getDateHistogramAgg","esAgg","extended_bounds","getHistogramAgg","getFiltersAgg","analyze_wildcard","documentQuery","unmapped_type","fields","script_fields","fielddata_fields","docvalue_fields","addAdhocFilters","adhocFilters","queryCondition","bool","must","match_phrase","must_not","lt","gt","build","queryString","bucketAggs","query_string","precision","nestedAggs","pipelineAgg","metricAgg","buckets_path","prop","hasOwnProperty","aggField","getTermsQuery","queryDef","1","_term","startOf","amount","Daily","Weekly","pattern","getIndexForToday","utc","getIndexList","intervalMap","intervalInfo","endEpoch","response","processMetrics","props","bucket","buckets","doc_count","newSeries","percentiles","percentileName","statName","stats","std_deviation_bounds_upper","std_deviation_bounds","upper","std_deviation_bounds_lower","lower","normalized_value","processAggregationDocs","propKey","addColumn","filterable","addMetricValue","_d","_e","propValues","_f","_g","getMetricName","processBuckets","depth","aggId","nameIndex","key_as_string","metricDef","extendedStats","getSeriesName","metricTypeCount","g2","appliedAgg","describeMetric","propName","nameSeries","uniq","processHits","_id","_type","_index","_source","trimDatapoints","aggregations","histogram","trimEdges","ElasticResponse","getErrorFromElasticResponse","root_cause","reason","$$config","getTimeSeries","responses","tmpSeriesList","ElasticDatasource","indexPattern","index_pattern_IndexPattern","timeInterval","maxConcurrentShardRequests","queryBuilder","query_builder_ElasticQueryBuilder","index_list","tagsField","textField","fieldName","fieldNames","fieldValue","getFieldFromSource","titleField","setTime","getFields","dateFields","getQueryHeader","searchType","timeTo","search_type","query_header","sentTargets","queryObj","elastic_response_ElasticResponse","string","scaled_float","nested","shouldAddField","typeMap","fieldNameParts","getFieldsRecursively","subObj","isObject","properties","indexName","mappings","typeName","getTerms","esQuery","fromJson","bucketAgg","objectContainsTemplate","isPrimitive","agg","settingsLinkText","describeOrder","describeOrderBy","substr","defaultTo","addFiltersQuery","removeFiltersQuery","getOrderByOptions","metricRefs","getFieldsInternal","$fieldType","getIntervalOptions","intervalOptions","addBucketAgg","lastBucket","addIndex","removeBucketAgg","bucket_agg_ElasticBucketAggCtrl","metricAggs","updatePipelineAggOptions","getPipelineAggOptions","metricAggTypes","pipelineOptions","getPipelineOptions","precision_threshold","movingAvgModelTypes","modelSettings","updateMovingAvgModelSettings","inlineScript","script","inline","onChangeInternal","modelSettingsKeys","onChangeClearInternal","minimize","onTypeChange","addMetricAgg","removeMetricAgg","toggleShowMetric","metric_agg_ElasticMetricAggCtrl","ElasticQueryCtrl","queryUpdated","jsonStr","handleQueryError","newJson","rawQueryOld","getCollapsedText","bucketAggTypes","query_def_bucketAggTypes","ElasticConfigCtrl","esVersions","indexPatternTypeChanged","database","opentsdb_datasource","tsdbVersion","tsdbResolution","tagKeys","aggregatorsPromise","filterTypesPromise","convertToTSDBTime","convertTargetToQuery","qs","groupByTags","tagk","metricToTargetMapping","mapMetricsToTargets","metricData","_saveTagKeys","transformMetricData","eventList","aggregator","annotationObject","isGlobal","globalAnnotations","startTime","OpenTsDatasource","reqBody","msResolution","showQuery","_addCredentialOptions","suggestTagKeys","aggregateTags","_performSuggestQuery","_get","q","_performMetricKeyValueLookup","keysArray","keysQuery","tagvs","_performMetricKeyLookup","tagks","tagv","relativeUrl","interpolated","responseTransform","metrics_query","tag_names_query","tag_values_query","tag_names_suggest_query","tag_values_suggest_query","getAggregators","getFilterTypes","createMetricLabel","dps","metricLabel","tagData","toPairs","isCounter","counterMax","counterResetValue","rateOptions","resetValue","dropResets","ResetValue","disableDownsampling","downsampleInterval","downsample","downsampleAggregator","downsampleFillPolicy","filter_key","tag_key","explicitTags","interpolatedTagValue","arrTagV","tagV","tagK","OpenTsQueryCtrl","errors","validateTarget","aggregators","fillPolicies","filterTypes","suggestMetrics","getTextValues","suggestTagValues","targetBlur","metricFindResult","addTagMode","currentTagKey","currentTagValue","editTag","closeAddTagMode","addFilter","addFilterMode","currentFilterType","currentFilterGroupBy","currentFilter","currentFilterKey","currentFilterValue","removeFilter","editFilter","fil","closeAddFilterMode","errs","shouldDownsample","describe_interval","OpenTsConfigCtrl","tsdbVersions","tsdbResolutions","AnnotationsQueryCtrl","datasource_GrafanaDatasource","GrafanaDatasource","GrafanaQueryCtrl","GrafanaAnnotationsQueryCtrl","influx_series","InfluxSeries","seriesName","columnName","_getSeriesName","segIndex","textCol","titleCol","titleColumn","tagsColumn","textColumn","timeCol","getTable","reordered","Aliasing","Fields","createPart","part","query_part_index","register","groupByTimeFunctions","innerExpr","selectParts","partModel","query_part_categories","Aggregations","morePartsAvailable","Selectors","addTransformationStrategy","addStrategy","selectModels","dynamicLookup","renderer","fieldRenderer","replaceAggregationAddStrategy","Transformations","Predictors","partCount","influxdb_query_part","influx_query","InfluxQuery","policy","resultFormat","orderByTime","updateProjection","create","groupByParts","updatePersistedParts","hasGroupByTime","g","hasFill","addGroupBy","stringParts","typePart","arg","removeGroupByPart","getCategories","removeSelect","removeSelectPart","modelsIndex","partIndex","addSelectPart","renderTagCondition","interpolate","getMeasurementAndPolicy","measurement","interpolateQueryStr","defaultFormatFn","rawQuery","selectText","groupBySection","slimit","renderAdhocFilters","response_parser","ResponseParser","influxResults","normalizedQuery","isValueFirst","serie","addUnique","InfluxQueryBuilder","buildExploreQuery","withKey","withMeasurementFilter","whereConditions","influxdb_datasource","username","password","getTimeFilter","allQueries","acc","timeFilter","_seriesQuery","queryTargets","influxSeries","timeSeries","curry","responseParser","query_builder_InfluxQueryBuilder","_influxRequest","serializeParams","currentUrl","urls","u","db","req","paramSerializer","getInfluxTime","fromIsAbsolute","InfluxDatasource","query_ctrl_InfluxQueryCtrl","InfluxQueryCtrl","groupBySegment","resultFormats","measurementSegment","newSelectMeasurement","newCondition","buildSelectMenu","removeOrderByTime","selectMenu","cat","getGroupByOptions","tags_1","groupByAction","plusButton","subitem","handleSelectPartEvent","fieldsQuery","handleGroupByPartEvent","measurementChanged","getPolicySegments","policiesQuery","policyChanged","policySegment","getMeasurements","measurementFilter","getTagsOrValues","nextValue","newOperators","removeTagFilterSegment","getFieldSegments","tagSegmentUpdated","rebuildTargetTagConditions","tagOperator","segment2","getTagValueOperator","tagValue","InfluxConfigCtrl","InfluxAnnotationsQueryCtrl","processEntry","entry","labels","fromNow","timeLocal","searchMatches","getSearchMatches","logLevel","level","LogLevel","getLogLevel","timeFromNow","logging_datasource","_request","apiUrl","DEFAULT_QUERY_PARAMS","QUERY_REGEXP","parseQuery","LoggingDatasource","streams","combinedEntries","entries","chain","processStreams","metadataRequest","silent","MixedDatasource","sets","dsName","mysql_response_parser","processQueryResult","parseMetricFindQueryResult","rowCount","findColIndex","textColIndex","valueColIndex","transformToKeyValueList","transformToSimpleList","containsKey","colName","transformAnnotationResponse","timeColumnIndex","textColumnIndex","tagsColumnIndex","MysqlDatasource","interpolateVariable","rawSql","defaultQuery","query_ctrl_MysqlQueryCtrl","MysqlQueryCtrl","formats","onDataReceived","onDataError","dataList","anySeriesFromQuery","lastQueryMeta","lastQueryError","MysqlConfigCtrl","MysqlAnnotationsQueryCtrl","module_defaultQuery","postgres_response_parser","PostgresDatasource","query_ctrl_defaultQuery","query_ctrl_PostgresQueryCtrl","PostgresQueryCtrl","sslmode","PostgresAnnotationsQueryCtrl","postgres_module_defaultQuery","metric_find_query","PrometheusMetricFindQuery","label_values_query","labelValuesQuery","metric_names_query","query_result_query","queryResultQuery","metricNameAndLabelsQuery","getPrometheusTime","_labels","metricFilterPattern","matchedMetricName","performInstantQuery","__name__","self","getOriginalMetricName","ResultTransformer","transform","prometheusResult","transformMetricDataToTable","responseListLength","sortSeriesByLabel","prometheusResult_1","transformToHistogramOverTime","prometheusResult_2","resultType","transformInstantMetricData","Error","dp_value","baseTimestamp","stepMs","endTimestamp","responseIndex","resultCount","metricLabels","sortedLabels","labelIndex","valueText","labelData","legendFormat","renderTemplate","aliasPattern","aliasData","topSeries","bottomSeries","bottomPoint","s1","s2","le2","le1","parseHistogramLabel","le","Infinity","prometheusRegularEscape","prometheusSpecialRegexEscape","datasource_PrometheusDatasource","PrometheusDatasource","editorSrc","directUrl","queryTimeout","httpMethod","resultTransformer","result_transformer_ResultTransformer","transformRequest","interpolateQueryExpr","activeTargets","createQuery","allQueryPromise","instant","responseList","hints","transformerOptions","hinting","queryHints","fix","dp","increasing_1","monotonic","determineQueryHints","minInterval","intervalFactor","adjustedInterval","adjustInterval","getRangeScopedVars","adjusted","alignRange","performSuggestQuery","cache","metricsNameCache","expire","interval_to_ms","msRange","diff","regularRange","secondsToHms","__range_ms","titleFormat","textFormat","modifyQuery","previousWord","nextSelectorStart","nextSelectorEnd","keywords","previousWordIsKeyWord","builtInWords","labelParts","selector","suffix","selectorRegexp","addLabelToQuery","templateVariableCompletions","wrappedCallback","completions","getCompletionsForLabelMatcherName","getCompletionsForLabelMatcherValue","getCompletionsForBinaryOperator","vectors","unit","findMetricName","labelNameCache","transformToCompletions","labelNames","findToken","labelName","labelNameToken","labelValueCache","getLabelNameAndValueForExpression","labelValues","rparenToken","keywordOperatorToken","findExpressionMatchedParen","binaryOperatorToken","metricName_1","labelQueryCache","words","nameLabelValueToken","getTokens","nameLabelNameToken","metricNameToken","guard","nc","deep","query_ctrl_PrometheusQueryCtrl","PrometheusQueryCtrl","resolutions","factor","getCompleter","completer_PromCompleter","getDefaultFormat","refreshMetricData","isEqual","updateLink","rangeDiff","endTime","g0.stacked","g0.tab","linkToPrometheus","PrometheusConfigCtrl","PrometheusAnnotationsQueryCtrl","mssql_response_parser","MssqlDatasource","mssql_query_ctrl_defaultQuery","MssqlQueryCtrl","MssqlConfigCtrl","mssql_module_defaultQuery","MssqlAnnotationsQueryCtrl","TestDataDatasource","scenarioId","stringInput","query_ctrl_TestDataQueryCtrl","TestDataQueryCtrl","scenarioList","newPointTime","selectedPoint","getPoints","point","pointSelected","deletePoint","addPoint","newPointValue","scenario","scenarioChanged","TestDataAnnotationsQueryCtrl","TextPanelCtrl","onInitEditMode","onRefresh","onRender","renderMarkdown","updateContent","renderText","$applyAsync","scrollable","injector","createElement","tmpScope","eventManager","$digest","createEditPopover","markerElementToAttachTo","invoke","constraints","pin","$destroy","DrawableEvent","drawFunc","clearFunc","moveFunc","_object","_drawFunc","_clearFunc","_position","_width","_height","getObject","_moveFunc","VisualEvent","drawableEvent","visual","_drawableEvent","_options","getParent","_parent","isHidden","_hidden","unhide","_events","_types","_plot","eventsEnabled","EventMarkers","getEvents","setTypes","setupEvents","ve","_buildDiv","vre","_buildRegDiv","ao","bo","drawEvents","_insidePlot","updateEvents","_clearEvents","markerShow","lineStyle","eventTypeId","markerTooltip","topOffset","border-left-width","border-left-style","border-left-color","marker_1","font-size","line-height","border-left","border-right","toUpperCase","border-top","border-bottom","that","hover","createAnnotationToolip","regionWidth","right","background-color","xc","jquery_flot_events_EventMarkers","eventMarkers","hideEvents","ThresholdManager","getHandleHtml","valueStr","initDragging","posTop","handleElem","currentTarget","parents","lastY","dragging","clientY","stopped","graphValue","toFixed","cleanUp","renderHandle","defaultHandleTopPos","valueCanvasPos","toggleClass","handleTopPos","shouldDrawHandles","hasSecondYAxis","prepare","thresholdMargin","needsCleanup","addFlotOptions","ltLimit","gtLimit","lineColor","y2axis","convertToHistogramData","bucketSize","hiddenSeries","getSeriesValues","maxBound","getBucketBound","bound_1","bound","histogam_series","convertValuesToHistogram","alignYLevel","yAxes","checkCorrectAxes","checkCorrectAxis","yLeft","yRight","moveLevelToZero","expandStuckValues","zero","oneSide","checkOneSide","checkOppositeSides","rate","rateRight","absLeftMin","absLeftMax","absRightMin","downLeft","upRight","absRightMax","downRight","upLeft","rateLeft","getRate","checkTwoCross","sortedSeries","panelWidth","threshold_manager_ThresholdManager","getSeriesFn","posX","initial","middle","renderAndShow","absoluteTime","innerHtml","xMode","place_tt","hoverIndex","hoverDistance","pointTime","minDistance","minTime","last_value","hideEmpty","allIsNull","hideZero","allIsZero","hideTooltip","findHoverIndexFromData","value_type","findHoverIndexFromDataPoints","aliasEscaped","shared","$tooltip","detach","hoverInfo","seriesHtml","tooltipFormat","panelRelY","pointOffset","allSeriesMode","sharedCrosshairModeOnly","hasMsResolution","seriesHoverInfo","getMultiSeriesPlotHoverInfo","plotData","highlightClass","drawHook","yaxes","dataWarning","processOffsetHook","gridMargin","panelOptions","align","alignLevel","timeStep","translateFillOption","percentage","timezone","ticks","timeformat","secPerTick","time_format","addXSeriesAxis","addXHistogramAxis","defaultTicks","tick_values","data_1","tickStep_1","ticks_num","addXTableAxis","parseNumber","toNumber","applyLogScale","logBase","minSetToZero","MIN_VALUE","logmin","inverseTransform","nextTick","maxNumTicks","numTicks","generateTicksForLogScaleYAxis","configureAxisMode","tickFormatter","valueFormats","tickDecimals","scaledDecimals","thresholdManager","renderData","getFlotPairs","nullPointMode","buildFlotPairs","graphHeight","gridColor","bootData","user","lightTheme","processOffset","processRange","processRangeHook","linewidth","steppedLine","spaceLength","barWidth","pointradius","labelMarginX","buildFlotOptions","histMin","histMax","getMinTimeStepOfSeries","addTimeAxis","decimals","secondY","configureYAxisOptions","sortDesc","haveSortBy","haveSortOrder","shouldSortBy","zindex","sortSeries","incrementRenderCounter","renderError","sharedTooltipModeEnabled","canMakeEditable","graphDirective","src_core","SeriesOverridesCtrl","overrideMenu","currentOverrides","override","addOverrideOption","propertyName","lenght","setOverride","subItem","addSeriesOverride","updateCurrentOverrides","openColorSelector","colorSelected","fakeSeries","autoClose","onClose","removeOverride","getSeriesNames","legendScrollbar","legendRightDefaultWidth","getSeriesIndexForElement","el","toggleAxis","changeSeriesColor","seriesInfo","scrollPosition","scrollTop","toggleSeries","sortLegend","getTableHeaderHtml","renderLegendElement","tableHeaderElem","seriesElements","hideFromLegend","avg","renderSeriesLegendElements","alignAsTable","tbodyElem","wrap","rightSide","scrollRoot","scroller","scrollbarParams","root","bar","track","barOnCls","scrollingCls","destroyScrollbar","core_default","marginRight","offsetWidth","clientWidth","scroll","addScrollbar","dispose","legendElem","empty","sideWidth","ieWidth","ThresholdFormCtrl","disabled","unbindDestroy","addThreshold","removeThreshold","onFillColorChange","onLineColorChange","getSeriesList","autoDetectMode","getAutoDetectXAxisMode","firstItem","setPanelDefaultsForNewXAxisMode","timeSeriesHandler","customHandler","seriesData","aliasColors","colorIndex","isOutsideRange","DataProcessor","dataItem","validateXAxisSeriesValue","validOptions","getXAxisValueOptions","getDataFieldNames","onlyNumbers","fieldParts","getPropertiesRecursive","pluckDeep","property","propertyParts","axes_editor_AxesEditorCtrl","AxesEditorCtrl","unitFormats","getUnitFormats","logScales","linear","log (base 2)","log (base 10)","log (base 32)","log (base 1024)","setUnitFormat","xAxisModeChanged","processor","xAxisValueChanged","GraphCtrl","panelDefaults","seriesOverrides","data_processor_DataProcessor","onDataSnapshotLoad","onInitPanelActions","axesEditorComponent","alertingEnabled","alertTab","actions","zoomOut","annotationsPromise","tip","applySeriesOverrides","setColor","shiftKey","toggleSeriesExclusiveMode","removeSeriesOverride","toggleLegend","legendValuesOptionChanged","exportCsv","templateHtml","modalClass","DashListCtrl","recent","starred","headings","folderId","modes","getRecentDashboards","getStarred","getSearch","folderIds","groups","starDashboard","isStarred","stopPropagation","dashIds","take","getDashboardOpened","dashboardIds","orderId","onFolderChange","folder","pluginList","viewModel","gotoPlugin","$event","preventDefault","hasUpdate","sortOrderOptions","stateFilter","currentAlerts","onlyAlertsOnDashboard","dashboardFilter","nameFilter","AlertListPanel","sortResult","alerts","alertStateSortScore","updateStateFilter","getAlertsPromise","getCurrentAlertState","getStateChanges","al","noAlertsMessage","dashboardQuery","dashboardTags","dashboardTag","newStateDate","locale","colorScheme","maxValue","minValue","d3_scale_chromatic","invert","colorInterpolator","domain","d3","colorScale","legendOpacityScale","exponent","drawLegendValues","rangeFrom","rangeTo","childNodes","legendValueScale","tickStepSize","ticksNum","isValueCloseTo","buildLegendTicks","xAxis","tickValues","tickSize","LEGEND_TICK_SIZE","posY","svgElem","baseVal","getSvgElemHeight","LEGEND_VALUE_MARGIN","getSvgElemX","colorRect","clearLegend","valueTo","outerWidth","getColorScale","colorSchemes","valuesNumber","rangeStep","valuesRange","selectAll","enter","legendHeight","drawSimpleColorLegend","colorOptions","legendOpacityScale_1","legendRects","cardColor","drawSimpleOpacityLegend","cards","cardStats","widthFactor","drawColorLegend","getOpacityScale","opacityScale","drawOpacityLegend","dataFormats","Time series","Time series buckets","yBucketBoundModes","Upper","Lower","yAxis","axesEditor","heatmap_axes_editor_AxesEditorCtrl","HeatmapDisplayEditorCtrl","heatmapDisplayEditor","label2","label1","heatmap_data_converter_parseHistogramLabel","yBucket","card","convertToHeatMap","yBucketSize","xBucketSize","heatmap","bucketBound","heatmap_data_converter_getBucketBound","TIME_INDEX","bucketNum","VALUE_INDEX","point_ext","pushToXBuckets","seriesList_1","xBucket","yBucketSplitFactor","bounds","getLogScaleBucketBounds","convertToLogScaleValueBuckets","getBucketBounds","pushToYBuckets","convertToValueBuckets","getValueBucketBound","getLogScaleBucketBound","powTop","value_log","logp","additional_log","additional_bucket_size","heatmapPanel","onMouseOver","onMouseLeave","HeatmapTooltip","getBucketIndexes","xBucketIndex","yBucketIndex","boundBottom","boundTop","countValueFormatter","bucketBoundFormatter","xData","yData","bucketIndex","tooltipDecimals","tickValueFormatter","tooltipHtml","tsBuckets","valIndex","tsBucketsFormatted","showHistogram","addHistogram","getXBucketIndex","offsetX","getYBucketIndex","xScale","yAxisWidth","yScale","chartTop","getSharedTooltipPos","histogramData","histXScale","barNumberFactor","histogramDomain","histYScale","tooltipHeight","clientHeight","tooltipWidth","innerWidth","pageYOffset","innerHeight","CARD_PADDING","CARD_ROUND","DATA_RANGE_WIDING_FACTOR","DEFAULT_X_TICK_SIZE_PX","DEFAULT_Y_TICK_SIZE_PX","X_AXIS_TICK_PADDING","Y_AXIS_TICK_PADDING","MIN_SELECTION_WIDTH","rendering_link","chartWidth","chartHeight","chartBottom","xAxisHeight","cardPadding","cardRound","cardWidth","cardHeight","$heatmap","heatmap_tooltip_HeatmapTooltip","padding","dataRangeWidingFactor","getYAxisWidth","axis_text","nodes","getBBox","addYAxis","tick_interval","heatmapStats","tickInterval","y_min","y_max","y_widing","wideYAxisRange","decimalsAuto","flot_tick_size","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","addLogYAxis","minLog","adjustLogMin","adjustLogMax","adjustLogRange","log_base","logScaleTickValues","domainMin","domainMax","tick_value","addAxes","dataFormat","valueFormatted","addYAxisFromBuckets","timeFormat","grafanaTimeFormatter","axis_line_position","getXAxisHeight","addHeatmapCanvas","heatmap_elem","getCardX","getCardWidth","cutted_width","MIN_CARD_SIZE","getCardY","getCardHeight","getCardColor","getCardOpacity","drawCrosshair","setElementHeight","yBuckets","emptyBucket","nullBucket","minBucket","newBucket","mergeZeroBuckets","cardsData","maxValueAuto","xGridSize","yGridSize","splitFactor","mouseOverBucket","highlightColor","darker","strokeColor","brighter","current_card","originalFillColor","resetCardHighLight","addHeatmap","graphTooltip","drawSharedCrosshair","selectionRange","limitSelection","posX1","posX2","selectionX","selectionWidth","drawSelection","emitGraphHoverEvent","HeatmapCtrl","opacityScales","colorModes","selectionActivated","defaultsDeep","onCardColorChange","convertHistogramToHeatmapData","convertTimeSeriesToHeatmapData","bucketsData","xBucketNumber","interval_regex","xBucketSizeByNumber","parseSeries","yBucketNumber","convertToCards","panelDatasource","getPanelDataSourceType","ds_support_histogram_sort","heatmap_data_converter_sortSeriesByLabel","histogramToHeatmap","yBucketBound","getDistance","calculateBucketSize","seriesHandler","flotpairs","parseHistogramSeries","timeKey","cells","noTableIndex","fromCharCode","columnNames","columnIndexMapper","flattenedRows","mapper","alteredRow","compactedRows","rowIndex","mergedRows","otherRow","areRowsMatching","columnsUnion","matchedRow","columnIndex","foundFieldToMatch","maxDocs","flattened","names","z","tableCol","TablePanelEditorCtrl","transformers","fontSizes","addColumnSegment","updateTransformHints","canSetColumns","columnsHelpMessage","getColumnOptions","dataRaw","getColumns","transformChanged","removeColumn","tablePanelEditor","editor_TablePanelEditorCtrl","ColumnOptionsCtrl","activeStyleIndex","columnTypes","dateFormats","mappingTypes","getColumnNames","addColumnStyle","styles","stylesCount","indexToInsert","dateFormat","removeColumnStyle","invertColorOrder","ref","styleIndex","addValueMap","valueMaps","removeValueMap","addRangeMap","rangeMaps","removeRangeMap","column_options_ColumnOptionsCtrl","isUtc","setTable","initColumns","colIndex","formatters","createColumnFormatter","defaultCellFormatter","mappingType","setColorState","valueFormatter_1","NaN","colorState","numericValue","renderRowVariables","formatColumnValue","renderCell","addWidthHack","cellClasses","cellClass","columnHtml","preserveFormat","linkUrl","cellLinkTooltip","linkTooltip","linkTargetBlank","cellLink","cellTarget","pageSize","startPos","endPos","rowClasses","rowClass","cellHtml","rowStyle","render_values","new_row","TableRenderer","TablePanelCtrl","showHeader","fontSize","desc","pageIndex","columnOptionsTab","transformer","transformDataToTable","renderer_TableRenderer","isTimezoneUtc","toggleColumnSort","pageCount","renderPanel","panelElem","rootElem","footerElem","appendTableRows","startPage","endPage","paginationList","activeClass","pageLinkElem","appendPaginationControls","max-height","panelHeight","getTableHeight","filterData","SingleStatCtrl","dataType","valueNameOptions","postfix","nullText","prefixFontSize","postfixFontSize","colorBackground","colorValue","sparkline","full","thresholdMarkers","thresholdLabels","tableColumn","onSparklineColorChange","onSparklineFillChange","tableData","tableHandler","setTableValues","setValues","tableColumnOptions","setTableColumnToSensibleDefault","valueRounded","decimalInfo","getDecimalsForValue","formatFunc","roundValue","canModifyText","setColoring","panelColorIndex","delta","LN10","magn","dec","norm","lastPoint","lastValue","valueName","setValueMapping","rangeMap","valueString","className","addGauge","dimension","invalidGaugeRange","plotCanvas","plotCss","colorMap","fontScale","gaugeWidthReduceRatio","gaugeWidth","thresholdMarkersWidth","getValueText","plotSeries","addSparkline","dynamicHeightMargin","strVale","applyColoringThresholds","getSpan","colorPostfix","$panelContainer","drilldownTooltip","mouseleave","hookupDrilldownLinkTooltip","GettingStartedPanelCtrl","note","check","cta","currentStep","nextStep","dismiss","showSuccessAlert","helpFlags1","panel_ctrl_PanelCtrl","built_in_plugins","graphite_module_namespaceObject","cloudwatch_module_namespaceObject","elasticsearch_module_namespaceObject","app/plugins/datasource/opentsdb/module","opentsdb_module_namespaceObject","grafana_module_namespaceObject","influxdb_module_namespaceObject","logging_module_namespaceObject","mixed_module_namespaceObject","mysql_module_namespaceObject","postgres_module_namespaceObject","app/plugins/datasource/mssql/module","mssql_module_namespaceObject","app/plugins/datasource/prometheus/module","prometheus_module_namespaceObject","app/plugins/datasource/testdata/module","testdata_module_namespaceObject","text_module_namespaceObject","app/plugins/panel/graph/module","graph_module_namespaceObject","app/plugins/panel/dashlist/module","dashlist_module_namespaceObject","app/plugins/panel/pluginlist/module","pluginlist_module_namespaceObject","app/plugins/panel/alertlist/module","alertlist_module_namespaceObject","app/plugins/panel/heatmap/module","heatmap_module_namespaceObject","app/plugins/panel/table/module","table_module_namespaceObject","app/plugins/panel/singlestat/module","app/plugins/panel/gettingstarted/module","Observable","Subject","bust","exposeToPlugin","component","registerDynamic","registry","system_default","newModule","locate","address","defaultExtension","packages","esModule","authorization","loader","slate_plain_serializer_es","react_default","sdk_namespaceObject","file_export_namespaceObject","flatten_namespaceObject","plugin_loader_i","flotDeps_1","fakeDep","importPluginModule","light","dark","DatasourceSrv","dsConfig","pluginDef","Datasource","deferred","addDataSourceVariables","getExploreSources","es","metricSources","metricSource","datasource_srv_DatasourceSrv","UnknownPanelCtrl","$http","$templateCache","baseUrl","class","module_UnknownPanelCtrl","panelInfo","panelModule","Component","registered","componentInfo","templatePromise","relativeTemplateUrlToAbs","cached","getTemplate","registerPluginComponent","notFound","directiveName","$normalize","bindings","getPluginComponentDirective","core_module","child","dsModule","panel-ctrl","QueryCtrl","dsMeta","ConfigCtrl","model_1","appModule","appEditCtrl","app-model","app-edit-ctrl","appModel_1","loadPanelComponentInfo","getModule","pluginDirectiveLoader","dashboard_ctrl_DashboardCtrl","DashboardCtrl","keybindingSrv","alertingSrv","unsavedChangesSrv","dashboardViewStateSrv","playlistSrv","panelLoader","getPanelContainer","setupDashboard","setupDashboardInternal","onInitFailed","setCurrent","autoFitPanels","dashboardViewState","setupDashboardBindings","setWindowTitleAndTheme","msg","fatal","loadedFallbackDashboard","templateVariableUpdated","processRepeats","window_title_prefix","showJsonEditor","getDashboard","getPanelLoader","timezoneChanged","onRemovingPanel","getPanelInfoById","ask","confirmText","AlertingSrv","HistorySrv","getHistoryList","calculateDiff","restoreDashboard","history_srv_HistorySrv","HistoryListCtrl","$route","historySrv","appending","canCompare","onDashboardSaved","resetFromSource","switchMode","addToLog","getLog","revisionSelectionChanged","revisions","checked","formatBasicDate","getDiff","newInfo","baseInfo","isNewLatest","new","revisions_1","rev","createdDateString","created","ageString","isLastPage","basic","json","restoreConfirm","stripBaseFromUrl","reload","history_HistoryListCtrl","DashboardLoaderSrv","_dashboardLoadFailed","canStar","isSnapshot","canDelete","canSave","dashboardNotFound","loadDashboard","uid","_loadScriptedDashboard","getDashboardByUid","isFolder","addDashboardImpression","file","_executeScript","fromScript","services","script_result","Function","script_func","isFunction","dashboard_loader_srv_DashboardLoaderSrv","DashNavCtrl","saveDashboard","titleTooltip","calendar","expires","editview","shareDashboard","showSearch","addPanel","animate","navItemClicked","navItem","clickHandler","dashnav_DashNavCtrl","transclude","SubmenuCtrl","annotationStateChanged","openEditView","submenu_SubmenuCtrl","save_as_modal_template","SaveDashboardAsModalCtrl","isValidFolderSelection","getSaveModelClone","hideControls","autoUpdate","keyDown","keyCode","onEnterFolderCreation","onExitFolderCreation","saveVariables","originalCurrent","timeChange","hasTimeChanged","variableValueChange","hasVariableValuesChanged","saveForm","saveTimerange","isSaving","postSave","resetOriginalVariables","resetOriginalTime","save_modal_template","SaveDashboardModalCtrl","dashboardJson","getJsonForClipboard","SaveProvisionedDashboardModalCtrl","ShareModalCtrl","forCurrent","includeTemplateVars","theme","modeSharePanel","tabs","modalTitle","buildUrl","absUrl","orgId","shareUrl","soloUrl","iframeHtml","imageUrl","getLocalTimeZone","utcOffset","Intl","DateTimeFormat","resolvedOptions","timeZone","shareModalCtrl_ShareModalCtrl","ShareSnapshotCtrl","expireOptions","accessOptions","externalUrl","sharingButtonText","externalEnabled","createSnapshot","external","originalUrl","saveSnapshot","scrubDashboard","cmdData","postUrl","deleteUrl","snapshotUrl","saveExternalSnapshotRef","deleteKey","singlePanel","forEachPanel","deleteSnapshot","share_snapshot_ctrl_ShareSnapshotCtrl","dashboard_srv_DashboardSrv","DashboardSrv","dashboard_model","handleSaveDashboardError","isHandled","altActionText","onAltAction","showSaveAsModal","newUrl","provisioned","showDashboardProvisionedModal","makeEditable","showSaveModal","saveJSONDashboard","panelScopes","urlState","getQueryStringState","needsSync","registerPanel","serializeToUrl","fromRouteUpdated","toggle","editStateChanged","toggleCollapsedPanelRow","syncState","DashboardViewState","collapsed","toggleRow","panelScope","getPanelScope","fullscreenPanel","leaveFullscreen","editModeInitiated","enterFullscreen","oldTimeRange","setViewMode","view_state_srv_DashboardViewState","hitTypes","ValidationSrv","rootName","validateNewDashboardName","validateNewFolderName","existingErrorMessage","nameLowerCased","hits_1","time_srv_TimeSrv","TimeSrv","timer","routeUpdated","addEventListener","autoRefreshBlocked","visibilityState","refreshDashboard","cancelAll","initTimeFromUrl","parseTime","timeAtLoad","setAutoRefresh","parseUrlParam","urlRange","timeHasChangedSinceLoad","cancelNextRefresh","refreshTimer","startNextRefreshTimer","afterMs","isGrafanaVisible","cancel","fromRouteUpdate","isMoment","oldRefresh","urlParams","timespan","center","ChangeTracker","originalCopyDelay","$window","originalPath","original","onbeforeunload","ignoreChanges","hasChanges","open_modal","fromFile","cleanDashboardFromIgnoredChanges","dashData","schemaVersion","iteration","repeatPanelId","currentTimepicker","originalTimepicker","discardChanges","gotoNext","baseLen","nextUrl","tracker","change_tracker_ChangeTracker","UnsavedChangesModalCtrl","discard","unsaved_changes_modal_template","timepicker_TimePickerCtrl","TimePickerCtrl","openDropdown","timepicker","firstDayOfWeek","localeData","timeRaw","local","rangeString","absolute","fromJs","toDate","toJs","zoom","closeDropdown","editTimeRaw","refresh_intervals","isOpen","applyCustom","absoluteFromChanged","getAbsoluteMomentForTimezone","absoluteToChanged","jsDate","setRelativeFilter","nowDelay","$elem","ngModel","$parsers","$setValidity","parsed","$formatters","currentValue","alertSrv","wnd","File","FileReader","FileList","getElementById","files","reader","onload","onUpload","readAsText","uploadDashboardDirective","makeExportable","variableLookup","templateizeDatasourceUsage","refName","requires","processPanel","panelDef","_h","_j","annotationDef","buildInfo","inputs","newObj","DashboardExporter","DashExportCtrl","exporter","exporter_DashboardExporter","saveJson","export_modal_DashExportCtrl","export","asRows","exportSeriesListToCsvColumns","ExportDataModalCtrl","export_data_modal_ExportDataModalCtrl","buildSegmentModel","AdHocFiltersCtrl","segmentChanged","updateVariableModel","filterIndex","hasFakes","ad_hoc_filters_template","ad_hoc_filters_AdHocFiltersCtrl","dashRepeatOptionDirective","repeat_option_template","repeat","repeatDirection","react2angular","react_grid_layout","classnames","DashboardRow_DashboardRow","DashboardRow","panelContainer","openSettings","setState","prevState","forceUpdate","removeRow","classnames_default","fa-chevron-right","chevronClass","components_ScrollBar_ScrollBar","ScrollBar","handleRef","componentDidMount","scrollbar","parentElement","componentDidUpdate","componentWillUnmount","setScrollTop","setScrollLeft","scrollLeft","AddPanelPanel_AddPanelPanel","AddPanelPanel","onAddPanel","panelPluginInfo","handleCloseAddPanel","renderPanelItem","panelSizeChanged","panelPlugins","getPanelPlugins","copiedPanelPlugins","getCopiedPanelPlugins","small","hideFromList","copiedPanelJson","copiedPanel","pluginCopy","copiedPanels","filterPanels","searchWords","main_default","highlightClassName","textToHighlight","noCopiedPanelPlugins","filterChange","openCopy","openAdd","panelTab","active active--panel","","copyClass","autoFocus","onKeyPress","filterKeyPress","DashboardPanel_DashboardPanel","DashboardPanel","attachedPanel","lastGridWidth","SizedReactLayoutGrid","react_sizeme","react_sizeme_default","monitorWidth","onWidthChange","react_grid_layout_default","isDraggable","isResizable","measureBeforeMount","containerPadding","useCSSTransforms","cols","rowHeight","draggableHandle","onResize","onResizeStop","onDragStop","onLayoutChange","DashboardGrid_DashboardGrid","DashboardGrid","animated","triggerForceUpdate","buildLayout","panelMap","stringId","panelPos","newLayout","newLayout_1","newPos","updateGridPos","sortPanelsByGridPos","resizeDone","oldItem","newItem","renderPanels","panelClasses","panel--fullscreen","panelElements","watchDepth","wrapApply","PanelLoader_PanelLoader","PanelLoader","compiledElem","RowOptionsCtrl","onUpdated","FolderPickerCtrl","validationSrv","labelClass","loadInitialValue","permission","enableCreateNew","enableReset","initialTitle","createNewFolder","enterFolderCreation","$folder","newFolderNameChanged","newFolderNameTouched","newFolderName","hasValidationError","validationError","createFolder","closeCreateFolder","cancelCreateFolder","exitFolderCreation","resetFolder","rootFolder","initialFolderId","folder_picker_FolderPickerCtrl","MoveToFolderCtrl","moveDashboards","successCount","totalCount","alreadyInFolderCount","afterSave","move_to_folder_MoveToFolderCtrl","settings_SettingsCtrl","SettingsCtrl","canSaveAs","hasEditPermissionInFolders","buildSectionList","onRouteUpdated","onPostSave","sections","canAdmin","section","sectionParams","viewId","openSaveAsModal","saveDashboardJson","hideSettings","editable","currentSection","deleteDashboard","sumBy","deleteDashboardConfirmed","hasUnsavedFolderChange","getFolder","folderTitle","folderUrl","DashboardListCtrl","FolderPageLoader","activeChildId","getFolderByUid","dashTab","FolderDashboardsCtrl","folderPageLoader","titleChanged","hasChanged","handleSaveFolderError","deleteFolder","updateFolder","FolderSettingsCtrl","nameExists","uidExists","autoGenerateUid","autoGenerateUidValue","initialFolderTitle","gnetId","gnetUrl","checkGnetDashboard","__inputs","inputModel","setDatasourceOptions","inputsValid","uidChanged","DashboardImportCtrl","inputValueChanged","titleTouched","hasNameValidationError","nameValidationError","hasUidValidationError","uidValidationError","importedUrl","loadJsonText","parseError","jsonText","gnetError","gnetInfo","back","CreateFolderCtrl","folder_dashboards_ctrl_FolderDashboardsCtrl","folder_settings_ctrl_FolderSettingsCtrl","dashboard_import_ctrl_DashboardImportCtrl","create_folder_ctrl_CreateFolderCtrl","PlaylistsCtrl","playlists","removePlaylistConfirmed","playlist","removePlaylist","playlists_ctrl_PlaylistsCtrl","PlaylistSearchCtrl","tagsMode","prom","dashboardResult","tagResult","searchStarted","showStarred","queryHasNoFilters","filterByTag","PlaylistSrv","cancelPromise","getUrlWithKioskMode","inKioskMode","classList","contains","startUrl","playlistId","stop","isPlaying","kiosk","PlaylistEditCtrl","filteredDashboards","filteredTags","playlistItems","dashboardresult","tagresult","filterFoundPlaylistItems","playlistItem","listPlaylistItem","term","addPlaylistItem","addTagPlaylistItem","removePlaylistItem","savePlaylist","isPlaylistEmpty","movePlaylistItem","currentPosition","newPosition","movePlaylistItemUp","movePlaylistItemDown","$routeProvider","playlist_edit_ctrl_PlaylistEditCtrl","snapshots","removeSnapshotConfirmed","removeSnapshot","SnapshotsCtrl","snapshot_ctrl_SnapshotsCtrl","listItemClass","renderMenuItem","menuScope","isDragged","togglePanelStackPosition","parentsUntil","menuElem","targetClass","menuHtml","createMenuTemplate","dropdown","togglePanelMenu","panelHeader","$document","infoDrop","panelScrollbar","lastAlertState","hasAlertRule","panelContent","transparentLastState","lastHasAlertRule","panelHeightUpdated","updatePanelCornerInfo","cornerMode","cornerInfoElem","hoverOpenDelay","transparent","__proto__","constructor","$watchGroup","$watchCollection","setPanelFocus","solo_panel_ctrl_SoloPanelCtrl","SoloPanelCtrl","dashboardLoaderSrv","sidemenu","initDashboard","getDashboardBySlug","initPanelScope","panelEditorTab","dynamicDirectiveSrv","fn","QueryRowCtrl","queryCtrl","toggleCollapse","toggleHideQuery","canCollapse","__collapsedQueryCache","collapsedText","duplicateQuery","query_editor_row_module","query_editor_row_QueryRowCtrl","query_troubleshooter_template","query_troubleshooter_QueryTroubleshooterCtrl","QueryTroubleshooterCtrl","onRequestResponseEventListener","onRequestResponse","onRequestErrorEventListener","removeEventsListeners","stateChanged","toggleMocking","isMocking","onRequestError","hasError","isLoading","getClipboardText","jsonExplorer","handleMocking","mockedData","mockedResponse","transformResponse","jsonpCallbackParam","renderJsonExplorer","toggleExpand","allNodesExpanded","openAtDepth","jsonElem","animateOpen","OrgUsersCtrl","externalUserMngLinkUrl","externalUserMngLinkName","canInvite","disableLoginForm","externalUserMngInfo","linkTarget","users","unfiltered","pendingInvites","email","updateOrgUser","userId","removeUser","removeUserConfirmed","revokeInvite","invite","copyInviteToClipboard","getInviteUrl","profile_ctrl_ProfileCtrl","ProfileCtrl","orgs","showOrgsList","readonlyLoginFields","getUser","getUserOrgs","setUsingOrg","org","userForm","old_theme","SelectOrgCtrl","select_org_ctrl_SelectOrgCtrl","ChangePasswordCtrl","command","authProxyEnabled","ldapEnabled","changePassword","newPassword","confirmNew","change_password_ctrl_ChangePasswordCtrl","NewOrgCtrl","newOrg","UserInviteCtrl","sendEmail","sendInvite","inviteForm","CreateTeamCtrl","teamId","org_api_keys_ctrl_OrgApiKeysCtrl","OrgApiKeysCtrl","roleTypes","obj2","index2","roleText","removeToken","addToken","rootPath","origin","getOrgInfo","orgForm","updateAddress","addressForm","OrgDetailsCtrl","PrefsControlCtrl","themes","prefs","oldTheme","updatePrefs","prefsForm","cmd","homeDashboardId","prefs_control_PrefsControlCtrl","prefs_control_template","admin_list_users_ctrl","AdminListUsersCtrl","showPaging","getUsers","perPage","totalPages","pages","navigateToPage","deleteUser","AdminListOrgsCtrl","getOrgs","deleteOrg","AdminEditOrgCtrl","getOrg","getOrgUsers","orgUsers","orgDetailsForm","orgUser","removeOrgUser","AdminEditUserCtrl","permissions","user_id","passwordForm","updatePermissions","orgsSearchCache","searchOrgs","addOrgForm","orgInfo","loginOrEmail","admin_edit_user_ctrl_AdminEditUserCtrl","AdminSettingsCtrl","AdminHomeCtrl","AdminStatsCtrl","AlertNotificationsListCtrl","loadNotifications","deleteNotification"],"mappings":"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","file":"3.60b9d7617656d735a025.js","sourcesContent":["/*!\n * jquery.flot.gauge v1.1.0 *\n *\n * Flot plugin for rendering gauge charts.\n *\n * Copyright (c) 2015 @toyoty99.\n * Licensed under the MIT license.\n */\n\n/**\n * @module flot.gauge\n */\n(function($) {\n\n\n    /**\n     * Gauge class\n     *\n     * @class Gauge\n     */\n    var Gauge = (function() {\n        /**\n         * context of canvas\n         *\n         * @property context\n         * @type Object\n         */\n        var context;\n        /**\n         * placeholder of canvas\n         *\n         * @property placeholder\n         * @type Object\n         */\n        var placeholder;\n        /**\n         * options of plot\n         *\n         * @property options\n         * @type Object\n         */\n        var options;\n        /**\n         * options of gauge\n         *\n         * @property gaugeOptions\n         * @type Object\n         */\n        var gaugeOptions;\n        /**\n         * data series\n         *\n         * @property series\n         * @type Array\n         */\n        var series;\n        /**\n         * logger\n         *\n         * @property logger\n         * @type Object\n         */\n        var logger;\n\n        /**\n         * constructor\n         *\n         * @class Gauge\n         * @constructor\n         * @param  {Object} gaugeOptions gauge options\n         */\n        var Gauge = function(plot, ctx) {\n            context = ctx;\n            placeholder = plot.getPlaceholder();\n            options = plot.getOptions();\n            gaugeOptions = options.series.gauges;\n            series = plot.getData();\n            logger = getLogger(gaugeOptions.debug);\n        }\n\n        /**\n         * calculate layout\n         *\n         * @method calculateLayout\n         * @return the calculated layout properties\n         */\n        Gauge.prototype.calculateLayout = function() {\n\n            var canvasWidth = placeholder.width();\n            var canvasHeight = placeholder.height();\n\n\n\n            // calculate cell size\n            var columns = Math.min(series.length, gaugeOptions.layout.columns);\n            var rows = Math.ceil(series.length / columns);\n\n\n\n            var margin = gaugeOptions.layout.margin;\n            var hMargin = gaugeOptions.layout.hMargin;\n            var vMargin = gaugeOptions.layout.vMargin;\n            var cellWidth = (canvasWidth - (margin * 2) - (hMargin * (columns - 1))) / columns;\n            var cellHeight = (canvasHeight - (margin * 2) - (vMargin * (rows - 1))) / rows;\n            if (gaugeOptions.layout.square) {\n                var cell = Math.min(cellWidth, cellHeight);\n                cellWidth = cell;\n                cellHeight = cell;\n            }\n\n\n\n            // calculate 'auto' values\n            calculateAutoValues(gaugeOptions, cellWidth);\n\n            // calculate maximum radius\n            var cellMargin = gaugeOptions.cell.margin;\n            var labelMargin = 0;\n            var labelFontSize = 0;\n            if (gaugeOptions.label.show) {\n                labelMargin = gaugeOptions.label.margin;\n                labelFontSize = gaugeOptions.label.font.size;\n            }\n            var valueMargin = 0;\n            var valueFontSize = 0;\n            if (gaugeOptions.value.show) {\n                valueMargin = gaugeOptions.value.margin;\n                valueFontSize = gaugeOptions.value.font.size;\n            }\n            var thresholdWidth = 0;\n            if (gaugeOptions.threshold.show) {\n                thresholdWidth = gaugeOptions.threshold.width;\n            }\n            var thresholdLabelMargin = 0;\n            var thresholdLabelFontSize = 0;\n            if (gaugeOptions.threshold.label.show) {\n                thresholdLabelMargin = gaugeOptions.threshold.label.margin;\n                thresholdLabelFontSize = gaugeOptions.threshold.label.font.size;\n            }\n\n            var maxRadiusH = (cellWidth / 2) - cellMargin - thresholdWidth - (thresholdLabelMargin * 2) - thresholdLabelFontSize;\n\n            var startAngle = gaugeOptions.gauge.startAngle;\n            var endAngle = gaugeOptions.gauge.endAngle;\n            var dAngle = (endAngle - startAngle) / 100;\n            var heightRatioV = -1;\n            for (var a = startAngle; a < endAngle; a += dAngle) {\n                heightRatioV = Math.max(heightRatioV, Math.sin(toRad(a)));\n            }\n            heightRatioV = Math.max(heightRatioV, Math.sin(toRad(endAngle)));\n            var outerRadiusV = (cellHeight - (cellMargin * 2) - (labelMargin * 2) - labelFontSize) / (1 + heightRatioV);\n            if (outerRadiusV * heightRatioV < valueMargin + (valueFontSize / 2)) {\n                outerRadiusV = cellHeight - (cellMargin * 2) - (labelMargin * 2) - labelFontSize - valueMargin - (valueFontSize / 2);\n            }\n            var maxRadiusV = outerRadiusV - (thresholdLabelMargin * 2) - thresholdLabelFontSize - thresholdWidth;\n\n            var radius = Math.min(maxRadiusH, maxRadiusV);\n\n\n            var width = gaugeOptions.gauge.width;\n            if (width >= radius) {\n                width = Math.max(3, radius / 3);\n            }\n\n\n            var outerRadius = (thresholdLabelMargin * 2) + thresholdLabelFontSize + thresholdWidth + radius;\n            var gaugeOuterHeight = Math.max(outerRadius * (1 + heightRatioV), outerRadius + valueMargin + (valueFontSize / 2));\n\n            return {\n                canvasWidth: canvasWidth,\n                canvasHeight: canvasHeight,\n                margin: margin,\n                hMargin: hMargin,\n                vMargin: vMargin,\n                columns: columns,\n                rows: rows,\n                cellWidth: cellWidth,\n                cellHeight: cellHeight,\n                cellMargin: cellMargin,\n                labelMargin: labelMargin,\n                labelFontSize: labelFontSize,\n                valueMargin: valueMargin,\n                valueFontSize: valueFontSize,\n                width: width,\n                radius: radius,\n                thresholdWidth: thresholdWidth,\n                thresholdLabelMargin: thresholdLabelMargin,\n                thresholdLabelFontSize: thresholdLabelFontSize,\n                gaugeOuterHeight: gaugeOuterHeight\n            };\n        }\n\n        /**\n         * calculate the values which are set as 'auto'\n         *\n         * @method calculateAutoValues\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} cellWidth the width of cell\n         */\n        function calculateAutoValues(gaugeOptionsi, cellWidth) {\n\n            if (gaugeOptionsi.gauge.width === \"auto\") {\n                gaugeOptionsi.gauge.width = Math.max(5, cellWidth / 8);\n            }\n            if (gaugeOptionsi.label.margin === \"auto\") {\n                gaugeOptionsi.label.margin = Math.max(1, cellWidth / 20);\n            }\n            if (gaugeOptionsi.label.font.size === \"auto\") {\n                gaugeOptionsi.label.font.size = Math.max(5, cellWidth / 8);\n            }\n            if (gaugeOptionsi.value.margin === \"auto\") {\n                gaugeOptionsi.value.margin = Math.max(1, cellWidth / 30);\n            }\n            if (gaugeOptionsi.value.font.size === \"auto\") {\n                gaugeOptionsi.value.font.size = Math.max(5, cellWidth / 9);\n            }\n            if (gaugeOptionsi.threshold.width === \"auto\") {\n                gaugeOptionsi.threshold.width = Math.max(3, cellWidth / 100);\n            }\n            if (gaugeOptionsi.threshold.label.margin === \"auto\") {\n                gaugeOptionsi.threshold.label.margin = Math.max(3, cellWidth / 40);\n            }\n            if (gaugeOptionsi.threshold.label.font.size === \"auto\") {\n                gaugeOptionsi.threshold.label.font.size = Math.max(5, cellWidth / 15);\n            }\n\n        }\n        Gauge.prototype.calculateAutoValues = calculateAutoValues;\n\n        /**\n         * calculate the layout of the cell inside\n         *\n         * @method calculateCellLayout\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} cellWidth the width of cell\n         * @param  {Number} i the index of the series\n         * @return the calculated cell layout properties\n         */\n        Gauge.prototype.calculateCellLayout = function(gaugeOptionsi, layout, i) {\n\n            // calculate top, left and center\n            var c = col(layout.columns, i);\n            var r = row(layout.columns, i);\n            var x = layout.margin + (layout.cellWidth + layout.hMargin) * c;\n            var y = layout.margin + (layout.cellHeight + layout.vMargin) * r;\n            var cx = x + (layout.cellWidth / 2);\n            var cy = y + layout.cellMargin + (layout.labelMargin * 2) + layout.labelFontSize + layout.thresholdWidth\n                        + layout.thresholdLabelFontSize + (layout.thresholdLabelMargin * 2) + layout.radius;\n            var blank = layout.cellHeight - (layout.cellMargin * 2) - (layout.labelMargin * 2) - layout.labelFontSize - layout.gaugeOuterHeight;\n            var offsetY = 0;\n            if (gaugeOptionsi.cell.vAlign === \"middle\") {\n                offsetY = (blank / 2);\n            } else if (gaugeOptionsi.cell.vAlign === \"bottom\") {\n                offsetY = blank;\n            }\n            cy += offsetY;\n\n            return {\n                col: c,\n                row: r,\n                x: x,\n                y: y,\n                offsetY: offsetY,\n                cellWidth: layout.cellWidth,\n                cellHeight: layout.cellHeight,\n                cellMargin: layout.cellMargin,\n                cx: cx,\n                cy: cy\n            }\n        }\n\n        /**\n         * draw the background of chart\n         *\n         * @method drawBackground\n         * @param  {Object} layout the layout properties\n         */\n        Gauge.prototype.drawBackground = function(layout) {\n\n            if (!gaugeOptions.frame.show) {\n                return;\n            }\n            context.save();\n            context.strokeStyle = options.grid.borderColor;\n            context.lineWidth = options.grid.borderWidth;\n            context.strokeRect(0, 0, layout.canvasWidth, layout.canvasHeight);\n            if (options.grid.backgroundColor) {\n                context.fillStyle = options.grid.backgroundColor;\n                context.fillRect(0, 0, layout.canvasWidth, layout.canvasHeight);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the background of cell\n         *\n         * @method drawCellBackground\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} cellLayout the cell layout properties\n         */\n        Gauge.prototype.drawCellBackground = function(gaugeOptionsi, cellLayout) {\n\n            context.save();\n            if (gaugeOptionsi.cell.border && gaugeOptionsi.cell.border.show && gaugeOptionsi.cell.border.color && gaugeOptionsi.cell.border.width) {\n                context.strokeStyle = gaugeOptionsi.cell.border.color;\n                context.lineWidth = gaugeOptionsi.cell.border.width;\n                context.strokeRect(cellLayout.x, cellLayout.y, cellLayout.cellWidth, cellLayout.cellHeight);\n            }\n            if (gaugeOptionsi.cell.background && gaugeOptionsi.cell.background.color) {\n                context.fillStyle = gaugeOptionsi.cell.background.color;\n                context.fillRect(cellLayout.x, cellLayout.y, cellLayout.cellWidth, cellLayout.cellHeight);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the gauge\n         *\n         * @method drawGauge\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {String} label the label of data\n         * @param  {Number} data the value of the gauge\n         */\n        Gauge.prototype.drawGauge = function(gaugeOptionsi, layout, cellLayout, label, data) {\n\n\n            var blur = gaugeOptionsi.gauge.shadow.show ? gaugeOptionsi.gauge.shadow.blur : 0;\n\n\n            // draw gauge frame\n            drawArcWithShadow(\n                cellLayout.cx, // center x\n                cellLayout.cy, // center y\n                layout.radius,\n                layout.width,\n                toRad(gaugeOptionsi.gauge.startAngle),\n                toRad(gaugeOptionsi.gauge.endAngle),\n                gaugeOptionsi.gauge.border.color,      // line color\n                gaugeOptionsi.gauge.border.width,      // line width\n                gaugeOptionsi.gauge.background.color,  // fill color\n                blur);\n\n            // draw gauge\n            var c1 = getColor(gaugeOptionsi, data);\n            var a2 = calculateAngle(gaugeOptionsi, layout, data);\n            drawArcWithShadow(\n                cellLayout.cx, // center x\n                cellLayout.cy, // center y\n                layout.radius - 1,\n                layout.width - 2,\n                toRad(gaugeOptionsi.gauge.startAngle),\n                toRad(a2),\n                c1,           // line color\n                1,            // line width\n                c1,           // fill color\n                blur);\n        }\n\n        /**\n         * decide the color of the data from the threshold options\n         *\n         * @method getColor\n         * @private\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} data the value of the gauge\n         */\n        function getColor(gaugeOptionsi, data) {\n            var color;\n            for (var i = 0; i < gaugeOptionsi.threshold.values.length; i++) {\n                var threshold = gaugeOptionsi.threshold.values[i];\n                color = threshold.color;\n                if (data < threshold.value) {\n                    break;\n                }\n            }\n            return color;\n        }\n\n        /**\n         * calculate the angle of the data\n         *\n         * @method calculateAngle\n         * @private\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Number} data the value of the gauge\n         */\n        function calculateAngle(gaugeOptionsi, layout, data) {\n            var a =\n                gaugeOptionsi.gauge.startAngle\n                    + (gaugeOptionsi.gauge.endAngle - gaugeOptionsi.gauge.startAngle)\n                        * ((data - gaugeOptionsi.gauge.min) / (gaugeOptionsi.gauge.max - gaugeOptionsi.gauge.min));\n\n            if (a < gaugeOptionsi.gauge.startAngle) {\n                a = gaugeOptionsi.gauge.startAngle;\n            } else if (a > gaugeOptionsi.gauge.endAngle) {\n                a = gaugeOptionsi.gauge.endAngle;\n            }\n            return a;\n        }\n\n        /**\n         * draw the arc of the threshold\n         *\n         * @method drawThreshold\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         */\n        Gauge.prototype.drawThreshold = function(gaugeOptionsi, layout, cellLayout) {\n\n            var a1 = gaugeOptionsi.gauge.startAngle;\n            for (var i = 0; i < gaugeOptionsi.threshold.values.length; i++) {\n                var threshold = gaugeOptionsi.threshold.values[i];\n                c1 = threshold.color;\n                a2 = calculateAngle(gaugeOptionsi, layout, threshold.value);\n                drawArc(\n                    context,\n                    cellLayout.cx, // center x\n                    cellLayout.cy, // center y\n                    layout.radius + layout.thresholdWidth,\n                    layout.thresholdWidth - 2,\n                    toRad(a1),\n                    toRad(a2),\n                    c1,           // line color\n                    1,            // line width\n                    c1);          // fill color\n                a1 = a2;\n            }\n        }\n\n        /**\n         * draw an arc with a shadow\n         *\n         * @method drawArcWithShadow\n         * @private\n         * @param  {Number} cx the x position of the center\n         * @param  {Number} cy the y position of the center\n         * @param  {Number} r the radius of an arc\n         * @param  {Number} w the width of an arc\n         * @param  {Number} rd1 the start angle of an arc in radians\n         * @param  {Number} rd2 the end angle of an arc in radians\n         * @param  {String} lc the color of a line\n         * @param  {Number} lw the widht of a line\n         * @param  {String} fc the fill color  of an arc\n         * @param  {Number} blur the shdow blur\n         */\n        function drawArcWithShadow(cx, cy, r, w, rd1, rd2, lc, lw, fc, blur) {\n            if (rd1 === rd2) {\n                return;\n            }\n            context.save();\n\n            drawArc(context, cx, cy, r, w, rd1, rd2, lc, lw, fc);\n\n            if (blur) {\n                drawArc(context, cx, cy, r, w, rd1, rd2);\n                context.clip();\n                context.shadowOffsetX = 0;\n                context.shadowOffsetY = 0;\n                context.shadowBlur = 10;\n                context.shadowColor = \"gray\";\n                drawArc(context, cx, cy, r + 1, w + 2, rd1, rd2, lc, 1);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the label of the gauge\n         *\n         * @method drawLable\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Object} item the item of the series\n         */\n        Gauge.prototype.drawLable = function(gaugeOptionsi, layout, cellLayout, i, item) {\n\n            drawText(\n                cellLayout.cx,\n                cellLayout.y + cellLayout.cellMargin + layout.labelMargin + cellLayout.offsetY,\n                \"flotGagueLabel\" + i,\n                gaugeOptionsi.label.formatter ? gaugeOptionsi.label.formatter(item.label, item.data[0][1]) : text,\n                gaugeOptionsi.label);\n        }\n\n        /**\n         * draw the value of the gauge\n         *\n         * @method drawValue\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Object} item the item of the series\n         */\n        Gauge.prototype.drawValue = function(gaugeOptionsi, layout, cellLayout, i, item) {\n\n            drawText(\n                cellLayout.cx,\n                cellLayout.cy - (gaugeOptionsi.value.font.size / 2),\n                \"flotGagueValue\" + i,\n                gaugeOptionsi.value.formatter ? gaugeOptionsi.value.formatter(item.label, item.data[0][1]) : text,\n                gaugeOptionsi.value);\n        }\n\n        /**\n         * draw the values of the threshold\n         *\n         * @method drawThresholdValues\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         */\n        Gauge.prototype.drawThresholdValues = function(gaugeOptionsi, layout, cellLayout, i) {\n\n            // min, max\n            drawThresholdValue(gaugeOptionsi, layout, cellLayout, \"Min\" + i, gaugeOptionsi.gauge.min, gaugeOptionsi.gauge.startAngle);\n            drawThresholdValue(gaugeOptionsi, layout, cellLayout, \"Max\" + i, gaugeOptionsi.gauge.max, gaugeOptionsi.gauge.endAngle);\n            // threshold values\n            for (var j = 0; j < gaugeOptionsi.threshold.values.length; j++) {\n                var threshold = gaugeOptionsi.threshold.values[j];\n                if (threshold.value > gaugeOptionsi.gauge.min && threshold.value < gaugeOptionsi.gauge.max) {\n                    var a = calculateAngle(gaugeOptionsi, layout, threshold.value);\n                    drawThresholdValue(gaugeOptionsi, layout, cellLayout, i + \"_\" + j, threshold.value, a);\n                }\n            }\n        }\n\n        /**\n         * draw the value of the threshold\n         *\n         * @method drawThresholdValue\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Number} value the value of the threshold\n         * @param  {Number} a the angle of the value drawn\n         */\n        function drawThresholdValue(gaugeOptionsi, layout, cellLayout, i, value, a) {\n            drawText(\n                cellLayout.cx\n                    + ((layout.thresholdLabelMargin + (layout.thresholdLabelFontSize / 2) + layout.radius)\n                        * Math.cos(toRad(a))),\n                cellLayout.cy\n                    + ((layout.thresholdLabelMargin + (layout.thresholdLabelFontSize / 2) + layout.radius)\n                        * Math.sin(toRad(a))),\n                \"flotGagueThresholdValue\" + i,\n                gaugeOptionsi.threshold.label.formatter ? gaugeOptionsi.threshold.label.formatter(value) : value,\n                gaugeOptionsi.threshold.label,\n                a);\n        }\n\n        /**\n         * draw a text\n         *\n         * the textOptions is assumed as follows:\n         *\n         *   textOptions: {\n         *       background: {\n         *           color: null,\n         *           opacity: 0\n         *       },\n         *       font: {\n         *           size: \"auto\"\n         *           family: \"\\\"ＭＳ ゴシック\\\",sans-serif\"\n         *       },\n         *       color: null\n         *   }\n         *\n         * @method drawText\n         * @private\n         * @param  {Number} x the x position of the text drawn (left top)\n         * @param  {Number} y the y position of the text drawn (left top)\n         * @param  {String} id the id of the dom element\n         * @param  {String} text the text drawn\n         * @param  {Object} textOptions the option of the text\n         * @param  {Number} [a] the angle of the value drawn\n         */\n        function drawText(x, y, id, text, textOptions, a) {\n            var span = $(\".\" + id, placeholder);\n            var exists = span.length;\n            if (!exists) {\n                span = $(\"<span></span>\")\n                span.attr(\"id\", id);\n                span.css(\"position\", \"absolute\");\n                span.css(\"top\", y + \"px\");\n                if (textOptions.font.size) {\n                    span.css(\"font-size\", textOptions.font.size + \"px\");\n                }\n                if (textOptions.font.family) {\n                    span.css(\"font-family\", textOptions.font.family);\n                }\n                if (textOptions.color) {\n                    span.css(\"color\", textOptions.color);\n                }\n                if (textOptions.background.color) {\n                    span.css(\"background-color\", textOptions.background.color);\n                }\n                if (textOptions.background.opacity) {\n                    span.css(\"opacity\", textOptions.background.opacity);\n                }\n                placeholder.append(span);\n            }\n            span.text(text);\n            // after append, readjust the left position\n            span.css(\"left\", x + \"px\"); // for redraw, resetting the left position is needed here\n            span.css(\"left\", (parseInt(span.css(\"left\")) - (span.width()/ 2)) + \"px\");\n\n            // at last, set angle\n            if (!exists && a) {\n                span.css(\"top\", (parseInt(span.css(\"top\")) - (span.height()/ 2)) + \"px\");\n                span.css(\"transform\", \"rotate(\" + ((180 * a) + 90) + \"deg)\"); // not supported for ie8\n            }\n        }\n\n        return Gauge;\n    })();\n    /**\n     * get a instance of Logger\n     *\n     * @method  getLogger\n     * @for flot.gauge\n     * @private\n     * @param  {Object} debugOptions the options of debug\n     */\n    function getLogger(debugOptions) {\n        return typeof Logger !== \"undefined\" ? new Logger(debugOptions) : null;\n    }\n\n    /**\n     * calculate the index of columns for the specified data\n     *\n     * @method col\n     * @for flot.gauge\n     * @param  {Number} columns the number of columns\n     * @param  {Number} i       the index of the series\n     * @return the index of columns\n     */\n    function col(columns, i) {\n        return i % columns;\n    }\n\n    /**\n     * calculate the index of rows for the specified data\n     *\n     * @method row\n     * @for flot.gauge\n     * @param  {Number} columns the number of rows\n     * @param  {Number} i       the index of the series\n     * @return the index of rows\n     */\n    function row(columns, i) {\n        return Math.floor(i / columns);\n    }\n\n    /**\n     * calculate the angle in radians\n     *\n     * internally, use a number without PI (0 - 2).\n     * so, in this function, multiply PI\n     *\n     * @method toRad\n     * @for flot.gauge\n     * @param  {Number} a the number of angle without PI\n     * @return the angle in radians\n     */\n    function toRad(a) {\n        return a * Math.PI;\n    }\n\n    /**\n     * draw an arc\n     *\n     * @method drawArc\n     * @for flot.gauge\n     * @param  {Object} context the context of canvas\n     * @param  {Number} cx the x position of the center\n     * @param  {Number} cy the y position of the center\n     * @param  {Number} r the radius of an arc\n     * @param  {Number} w the width of an arc\n     * @param  {Number} rd1 the start angle of an arc in radians\n     * @param  {Number} rd2 the end angle of an arc in radians\n     * @param  {String} lc the color of a line\n     * @param  {Number} lw the widht of a line\n     * @param  {String} fc the fill color  of an arc\n     */\n    function drawArc(context, cx, cy, r, w, rd1, rd2, lc, lw, fc) {\n        if (rd1 === rd2) {\n            return;\n        }\n        var counterClockwise = false;\n        context.save();\n        context.beginPath();\n        context.arc(cx, cy, r, rd1, rd2, counterClockwise);\n        context.lineTo(cx + (r - w) * Math.cos(rd2),\n                       cy + (r - w) * Math.sin(rd2));\n        context.arc(cx, cy, r - w, rd2, rd1, !counterClockwise);\n        context.closePath();\n        if (lw) {\n            context.lineWidth = lw;\n        }\n        if (lc) {\n            context.strokeStyle = lc;\n            context.stroke();\n        }\n        if (fc) {\n            context.fillStyle = fc;\n            context.fill();\n        }\n        context.restore();\n    }\n\n    /**\n     * initialize plugin\n     *\n     * @method init\n     * @for flot.gauge\n     * @private\n     * @param  {Object} plot a instance of plot\n     */\n    function init (plot) {\n        // add processOptions hook\n        plot.hooks.processOptions.push(function(plot, options) {\n            var logger = getLogger(options.series.gauges.debug);\n\n\n\n\n            // turn 'grid' and 'legend' off\n            if (options.series.gauges.show) {\n                options.grid.show = false;\n                options.legend.show = false;\n            }\n\n            // sort threshold\n            var thresholds = options.series.gauges.threshold.values;\n\n            thresholds.sort(function(a, b) {\n                if (a.value < b.value) {\n                    return -1;\n                } else if (a.value > b.value) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n\n\n        });\n\n        // add draw hook\n        plot.hooks.draw.push(function(plot, context) {\n            var options = plot.getOptions();\n            var gaugeOptions = options.series.gauges;\n\n            var logger = getLogger(gaugeOptions.debug);\n\n\n            if (!gaugeOptions.show) {\n                return;\n            }\n\n            var series = plot.getData();\n\n            if (!series || !series.length) {\n                return; // if no series were passed\n            }\n\n            var gauge = new Gauge(plot, context);\n\n            // calculate layout\n            var layout = gauge.calculateLayout();\n\n            // debug layout\n            if (gaugeOptions.debug.layout) {\n\n            }\n\n            // draw background\n            gauge.drawBackground(layout)\n\n            // draw cells (label, gauge, value, threshold)\n            for (var i = 0; i < series.length; i++) {\n                var item = series[i];\n\n                var gaugeOptionsi = $.extend({}, gaugeOptions, item.gauges);\n                if (item.gauges) {\n                    // re-calculate 'auto' values\n                    gauge.calculateAutoValues(gaugeOptionsi, layout.cellWidth);\n                }\n\n                // calculate cell layout\n                var cellLayout = gauge.calculateCellLayout(gaugeOptionsi, layout, i);\n\n                // draw cell background\n                gauge.drawCellBackground(gaugeOptionsi, cellLayout)\n                // debug layout\n                if (gaugeOptionsi.debug.layout) {\n\n                }\n                // draw label\n                if (gaugeOptionsi.label.show) {\n                    gauge.drawLable(gaugeOptionsi, layout, cellLayout, i, item);\n                }\n                // draw gauge\n                gauge.drawGauge(gaugeOptionsi, layout, cellLayout, item.label, item.data[0][1]);\n                // draw threshold\n                if (gaugeOptionsi.threshold.show) {\n                    gauge.drawThreshold(gaugeOptionsi, layout, cellLayout);\n                }\n                if (gaugeOptionsi.threshold.label.show) {\n                    gauge.drawThresholdValues(gaugeOptionsi, layout, cellLayout, i)\n                }\n                // draw value\n                if (gaugeOptionsi.value.show) {\n                    gauge.drawValue(gaugeOptionsi, layout, cellLayout, i, item);\n                }\n            }\n        });\n    }\n\n    /**\n     * [defaults description]\n     *\n     * @property defaults\n     * @type {Object}\n     */\n    var defaults = {\n        series: {\n            gauges: {\n                debug: {\n                    log: false,\n                    layout: false,\n                    alert: false\n                },\n                show: false,\n                layout: {\n                    margin: 5,\n                    columns: 3,\n                    hMargin: 5,\n                    vMargin: 5,\n                    square: false\n                },\n                frame: {\n                    show: true\n                },\n                cell: {\n                    background: {\n                        color: null\n                    },\n                    border: {\n                        show: true,\n                        color: \"black\",\n                        width: 1\n                    },\n                    margin: 5,\n                    vAlign: \"middle\" // 'top' or 'middle' or 'bottom'\n                },\n                gauge: {\n                    width: \"auto\", // a specified number, or 'auto'\n                    startAngle: 0.9, // 0 - 2 factor of the radians\n                    endAngle: 2.1, // 0 - 2 factor of the radians\n                    min: 0,\n                    max: 100,\n                    background: {\n                        color: \"white\"\n                    },\n                    border: {\n                        color: \"lightgray\",\n                        width: 2\n                    },\n                    shadow: {\n                        show: true,\n                        blur: 5\n                    }\n                },\n                label: {\n                    show: true,\n                    margin: \"auto\", // a specified number, or 'auto'\n                    background: {\n                        color: null,\n                        opacity: 0\n                    },\n                    font: {\n                        size: \"auto\", // a specified number, or 'auto'\n                        family: \"sans-serif\"\n                    },\n                    color: null,\n                    formatter: function(label, value) {\n                        return label;\n                    }\n                },\n                value: {\n                    show: true,\n                    margin: \"auto\", // a specified number, or 'auto'\n                    background: {\n                        color: null,\n                        opacity: 0\n                    },\n                    font: {\n                        size: \"auto\", // a specified number, or 'auto'\n                        family: \"sans-serif\"\n                    },\n                    color: null,\n                    formatter: function(label, value) {\n                        return parseInt(value);\n                    }\n                },\n                threshold: {\n                    show: true,\n                    width: \"auto\", // a specified number, or 'auto'\n                    label: {\n                        show: true,\n                        margin: \"auto\", // a specified number, or 'auto'\n                        background: {\n                            color: null,\n                            opacity: 0\n                        },\n                        font: {\n                            size: \"auto\", // a specified number, or 'auto'\n                            family: \",sans-serif\"\n                        },\n                        color: null,\n                        formatter: function(value) {\n                            return value;\n                        }\n                    },\n                    values: [\n                        {\n                            value: 50,\n                            color: \"lightgreen\"\n                        }, {\n                            value: 80,\n                            color: \"yellow\"\n                        }, {\n                            value: 100,\n                            color: \"red\"\n                        }\n                    ]\n                }\n            }\n        }\n    };\n\n    // register the gauge plugin\n    $.plot.plugins.push({\n        init: init,\n        options: defaults,\n        name: \"gauge\",\n        version: \"1.1.0\"\n    });\n\n})(jQuery);\n","/*\n * jQuery.flot.dashes\n *\n * options = {\n *   series: {\n *     dashes: {\n *\n *       // show\n *       // default: false\n *       // Whether to show dashes for the series.\n *       show: <boolean>,\n *\n *       // lineWidth\n *       // default: 2\n *       // The width of the dashed line in pixels.\n *       lineWidth: <number>,\n *\n *       // dashLength\n *       // default: 10\n *       // Controls the length of the individual dashes and the amount of\n *       // space between them.\n *       // If this is a number, the dashes and spaces will have that length.\n *       // If this is an array, it is read as [ dashLength, spaceLength ]\n *       dashLength: <number> or <array[2]>\n *     }\n *   }\n * }\n */\n(function($){\n\n  function init(plot) {\n\n    plot.hooks.processDatapoints.push(function(plot, series, datapoints) {\n\n      if (!series.dashes.show) return;\n\n      plot.hooks.draw.push(function(plot, ctx) {\n\n        var plotOffset = plot.getPlotOffset(),\n          axisx = series.xaxis,\n          axisy = series.yaxis;\n\n        function plotDashes(xoffset, yoffset) {\n\n          var points = datapoints.points,\n            ps = datapoints.pointsize,\n            prevx = null,\n            prevy = null,\n            dashRemainder = 0,\n            dashOn = true,\n            dashOnLength,\n            dashOffLength;\n\n          if (series.dashes.dashLength[0]) {\n            dashOnLength = series.dashes.dashLength[0];\n            if (series.dashes.dashLength[1]) {\n              dashOffLength = series.dashes.dashLength[1];\n            } else {\n              dashOffLength = dashOnLength;\n            }\n          } else {\n            dashOffLength = dashOnLength = series.dashes.dashLength;\n          }\n\n          ctx.beginPath();\n\n          for (var i = ps; i < points.length; i += ps) {\n\n            var x1 = points[i - ps],\n              y1 = points[i - ps + 1],\n              x2 = points[i],\n              y2 = points[i + 1];\n\n            if (x1 == null || x2 == null) continue;\n\n            // clip with ymin\n            if (y1 <= y2 && y1 < axisy.min) {\n              if (y2 < axisy.min) continue;   // line segment is outside\n              // compute new intersection point\n              x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y1 = axisy.min;\n            } else if (y2 <= y1 && y2 < axisy.min) {\n              if (y1 < axisy.min) continue;\n              x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y2 = axisy.min;\n            }\n\n            // clip with ymax\n            if (y1 >= y2 && y1 > axisy.max) {\n              if (y2 > axisy.max) continue;\n              x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y1 = axisy.max;\n            } else if (y2 >= y1 && y2 > axisy.max) {\n              if (y1 > axisy.max) continue;\n              x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y2 = axisy.max;\n            }\n\n            // clip with xmin\n            if (x1 <= x2 && x1 < axisx.min) {\n              if (x2 < axisx.min) continue;\n              y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x1 = axisx.min;\n            } else if (x2 <= x1 && x2 < axisx.min) {\n              if (x1 < axisx.min) continue;\n              y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x2 = axisx.min;\n            }\n\n            // clip with xmax\n            if (x1 >= x2 && x1 > axisx.max) {\n              if (x2 > axisx.max) continue;\n              y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x1 = axisx.max;\n            } else if (x2 >= x1 && x2 > axisx.max) {\n              if (x1 > axisx.max) continue;\n              y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x2 = axisx.max;\n            }\n\n            if (x1 != prevx || y1 != prevy) {\n              ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n            }\n\n            var ax1 = axisx.p2c(x1) + xoffset,\n              ay1 = axisy.p2c(y1) + yoffset,\n              ax2 = axisx.p2c(x2) + xoffset,\n              ay2 = axisy.p2c(y2) + yoffset,\n              dashOffset;\n\n            function lineSegmentOffset(segmentLength) {\n\n              var c = Math.sqrt(Math.pow(ax2 - ax1, 2) + Math.pow(ay2 - ay1, 2));\n\n              if (c <= segmentLength) {\n                return {\n                  deltaX: ax2 - ax1,\n                  deltaY: ay2 - ay1,\n                  distance: c,\n                  remainder: segmentLength - c\n                }\n              } else {\n                var xsign = ax2 > ax1 ? 1 : -1,\n                  ysign = ay2 > ay1 ? 1 : -1;\n                return {\n                  deltaX: xsign * Math.sqrt(Math.pow(segmentLength, 2) / (1 + Math.pow((ay2 - ay1)/(ax2 - ax1), 2))),\n                  deltaY: ysign * Math.sqrt(Math.pow(segmentLength, 2) - Math.pow(segmentLength, 2) / (1 + Math.pow((ay2 - ay1)/(ax2 - ax1), 2))),\n                  distance: segmentLength,\n                  remainder: 0\n                };\n              }\n            }\n            //-end lineSegmentOffset\n\n            do {\n\n              dashOffset = lineSegmentOffset(\n                dashRemainder > 0 ? dashRemainder :\n                  dashOn ? dashOnLength : dashOffLength);\n\n              if (dashOffset.deltaX != 0 || dashOffset.deltaY != 0) {\n                if (dashOn) {\n                  ctx.lineTo(ax1 + dashOffset.deltaX, ay1 + dashOffset.deltaY);\n                } else {\n                  ctx.moveTo(ax1 + dashOffset.deltaX, ay1 + dashOffset.deltaY);\n                }\n              }\n\n              dashOn = !dashOn;\n              dashRemainder = dashOffset.remainder;\n              ax1 += dashOffset.deltaX;\n              ay1 += dashOffset.deltaY;\n\n            } while (dashOffset.distance > 0);\n\n            prevx = x2;\n            prevy = y2;\n          }\n\n          ctx.stroke();\n        }\n        //-end plotDashes\n\n        ctx.save();\n        ctx.translate(plotOffset.left, plotOffset.top);\n        ctx.lineJoin = 'round';\n\n        var lw = series.dashes.lineWidth,\n          sw = series.shadowSize;\n\n        // FIXME: consider another form of shadow when filling is turned on\n        if (lw > 0 && sw > 0) {\n          // draw shadow as a thick and thin line with transparency\n          ctx.lineWidth = sw;\n          ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n          // position shadow at angle from the mid of line\n          var angle = Math.PI/18;\n          plotDashes(Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2));\n          ctx.lineWidth = sw/2;\n          plotDashes(Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4));\n        }\n\n        ctx.lineWidth = lw;\n        ctx.strokeStyle = series.color;\n\n        if (lw > 0) {\n          plotDashes(0, 0);\n        }\n\n        ctx.restore();\n\n      });\n      //-end draw hook\n\n    });\n    //-end processDatapoints hook\n\n  }\n  //-end init\n\n  $.plot.plugins.push({\n    init: init,\n    options: {\n      series: {\n        dashes: {\n          show: false,\n          lineWidth: 2,\n          dashLength: 10\n        }\n      }\n    },\n    name: 'dashes',\n    version: '0.1'\n  });\n\n})(jQuery)\n","/* Flot plugin for showing crosshairs when the mouse hovers over the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\n\tcrosshair: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\"\n\t\tcolor: color\n\t\tlineWidth: number\n\t}\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a vertical\ncrosshair that lets you trace the values on the x axis, \"y\" enables a\nhorizontal crosshair and \"xy\" enables them both. \"color\" is the color of the\ncrosshair (default is \"rgba(170, 0, 0, 0.80)\"), \"lineWidth\" is the width of\nthe drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair( pos )\n\n    Set the position of the crosshair. Note that this is cleared if the user\n    moves the mouse. \"pos\" is in coordinates of the plot and should be on the\n    form { x: xpos, y: ypos } (you can use x2/x3/... if you're using multiple\n    axes), which is coincidentally the same format as what you get from a\n    \"plothover\" event. If \"pos\" is null, the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer updating if\n    the user moves the mouse. Optionally supply a position (passed on to\n    setCrosshair()) to move it to.\n\n    Example usage:\n\n\tvar myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n\t$(\"#graph\").bind( \"plothover\", function ( evt, position, item ) {\n\t\tif ( item ) {\n\t\t\t// Lock the crosshair to the data point being hovered\n\t\t\tmyFlot.lockCrosshair({\n\t\t\t\tx: item.datapoint[ 0 ],\n\t\t\t\ty: item.datapoint[ 1 ]\n\t\t\t});\n\t\t} else {\n\t\t\t// Return normal crosshair operation\n\t\t\tmyFlot.unlockCrosshair();\n\t\t}\n\t});\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*/\n\n(function ($) {\n    var options = {\n        crosshair: {\n            mode: null, // one of null, \"x\", \"y\" or \"xy\",\n            color: \"rgba(170, 0, 0, 0.80)\",\n            lineWidth: 1\n        }\n    };\n    \n    function init(plot) {\n        // position of crosshair in pixels\n        var crosshair = { x: -1, y: -1, locked: false };\n\n        plot.setCrosshair = function setCrosshair(pos) {\n            if (!pos)\n                crosshair.x = -1;\n            else {\n                var o = plot.p2c(pos);\n                crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n                crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n            }\n            \n            plot.triggerRedrawOverlay();\n        };\n        \n        plot.clearCrosshair = plot.setCrosshair; // passes null for pos\n        \n        plot.lockCrosshair = function lockCrosshair(pos) {\n            if (pos)\n                plot.setCrosshair(pos);\n            crosshair.locked = true;\n        };\n\n        plot.unlockCrosshair = function unlockCrosshair() {\n            crosshair.locked = false;\n        };\n\n        function onMouseOut(e) {\n            if (crosshair.locked)\n                return;\n\n            if (crosshair.x != -1) {\n                crosshair.x = -1;\n                plot.triggerRedrawOverlay();\n            }\n        }\n\n        function onMouseMove(e) {\n            if (crosshair.locked)\n                return;\n                \n            if (plot.getSelection && plot.getSelection()) {\n                crosshair.x = -1; // hide the crosshair while selecting\n                return;\n            }\n                \n            var offset = plot.offset();\n            crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n            crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n            plot.triggerRedrawOverlay();\n        }\n        \n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\n            if (!plot.getOptions().crosshair.mode)\n                return;\n\n            eventHolder.mouseout(onMouseOut);\n            eventHolder.mousemove(onMouseMove);\n        });\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            var c = plot.getOptions().crosshair;\n            if (!c.mode)\n                return;\n\n            var plotOffset = plot.getPlotOffset();\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            if (crosshair.x != -1) {\n                var adj = plot.getOptions().crosshair.lineWidth % 2 ? 0.5 : 0;\n\n                ctx.strokeStyle = c.color;\n                ctx.lineWidth = c.lineWidth;\n                ctx.lineJoin = \"round\";\n\n                ctx.beginPath();\n                if (c.mode.indexOf(\"x\") != -1) {\n                    var drawX = Math.floor(crosshair.x) + adj;\n                    ctx.moveTo(drawX, 0);\n                    ctx.lineTo(drawX, plot.height());\n                }\n                if (c.mode.indexOf(\"y\") != -1) {\n                    var drawY = Math.floor(crosshair.y) + adj;\n                    ctx.moveTo(0, drawY);\n                    ctx.lineTo(plot.width(), drawY);\n                }\n                ctx.stroke();\n            }\n            ctx.restore();\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mouseout\", onMouseOut);\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n        });\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'crosshair',\n        version: '1.0'\n    });\n})(jQuery);\n","(function($) {\n    \"use strict\";\n\n    var options = {\n        series: {\n            fillBelowTo: null\n        }\n    };\n\n    function init(plot) {\n        function findBelowSeries( series, allseries ) {\n\n            var i;\n\n            for ( i = 0; i < allseries.length; ++i ) {\n                if ( allseries[ i ].id === series.fillBelowTo ) {\n                    return allseries[ i ];\n                }\n            }\n\n            return null;\n        }\n\n        /* top and bottom doesn't actually matter for this, we're just using it to help make this easier to think about */\n        /* this is a vector cross product operation */\n        function segmentIntersection(top_left_x, top_left_y, top_right_x, top_right_y, bottom_left_x, bottom_left_y, bottom_right_x, bottom_right_y) {\n            var top_delta_x, top_delta_y, bottom_delta_x, bottom_delta_y,\n                s, t;\n\n            top_delta_x = top_right_x - top_left_x;\n            top_delta_y = top_right_y - top_left_y;\n            bottom_delta_x = bottom_right_x - bottom_left_x;\n            bottom_delta_y = bottom_right_y - bottom_left_y;\n\n            s = (\n                (-top_delta_y * (top_left_x - bottom_left_x)) + (top_delta_x * (top_left_y - bottom_left_y))\n            ) / (\n                -bottom_delta_x * top_delta_y + top_delta_x * bottom_delta_y\n            );\n\n            t = (\n                (bottom_delta_x * (top_left_y - bottom_left_y)) - (bottom_delta_y * (top_left_x - bottom_left_x))\n            ) / (\n                -bottom_delta_x * top_delta_y + top_delta_x * bottom_delta_y\n            );\n\n            // Collision detected\n            if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n                return [\n                    top_left_x + (t * top_delta_x), // X\n                    top_left_y + (t * top_delta_y) // Y\n                ];\n            }\n\n            // No collision\n            return null;\n        }\n\n        function plotDifferenceArea(plot, ctx, series) {\n            if ( series.fillBelowTo === null ) {\n                return;\n            }\n\n            var otherseries,\n\n                ps,\n                points,\n\n                otherps,\n                otherpoints,\n\n                plotOffset,\n                fillStyle;\n\n            function openPolygon(x, y) {\n                ctx.beginPath();\n                ctx.moveTo(\n                    series.xaxis.p2c(x) + plotOffset.left,\n                    series.yaxis.p2c(y) + plotOffset.top\n                );\n\n            }\n\n            function closePolygon() {\n                ctx.closePath();\n                ctx.fill();\n            }\n\n            function validateInput() {\n                if (points.length/ps !== otherpoints.length/otherps) {\n                    console.error(\"Refusing to graph inconsistent number of points\");\n                    return false;\n                }\n\n                var i;\n                for (i = 0; i < (points.length / ps); i++) {\n                    if (\n                        points[i * ps] !== null &&\n                        otherpoints[i * otherps] !== null &&\n                        points[i * ps] !== otherpoints[i * otherps]\n                    ) {\n                        console.error(\"Refusing to graph points without matching value\");\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            function findNextStart(start_i, end_i) {\n                console.assert(end_i > start_i, \"expects the end index to be greater than the start index\");\n\n                var start = (\n                        start_i === 0 ||\n                        points[start_i - 1] === null ||\n                        otherpoints[start_i - 1] === null\n                    ),\n                    equal = false,\n                    i,\n                    intersect;\n\n                for (i = start_i; i < end_i; i++) {\n                    // Take note of null points\n                    if (\n                        points[(i * ps) + 1] === null ||\n                        otherpoints[(i * ps) + 1] === null\n                    ) {\n                        equal = false;\n                        start = true;\n                    }\n\n                    // Take note of equal points\n                    else if (points[(i * ps) + 1] === otherpoints[(i * otherps) + 1]) {\n                        equal = true;\n                        start = false;\n                    }\n\n\n                    else if (points[(i * ps) + 1] > otherpoints[(i * otherps) + 1]) {\n                        // If we begin above the desired point\n                        if (start) {\n                            openPolygon(points[i * ps], points[(i * ps) + 1]);\n                        }\n\n                        // If an equal point preceeds this, start the polygon at that equal point\n                        else if (equal) {\n                            openPolygon(points[(i - 1) * ps], points[((i - 1) * ps) + 1]);\n                        }\n\n                        // Otherwise, find the intersection point, and start it there\n                        else {\n                            intersect = intersectionPoint(i);\n                            openPolygon(intersect[0], intersect[1]);\n                        }\n\n                        topTraversal(i, end_i);\n                        return;\n                    }\n\n                    // If we go below equal, equal at any preceeding point is irrelevant\n                    else {\n                        start = false;\n                        equal = false;\n                    }\n                }\n            }\n\n            function intersectionPoint(right_i) {\n                console.assert(right_i > 0, \"expects the second point in the series line segment\");\n\n                var i, intersect;\n\n                for (i = 1; i < (otherpoints.length/otherps); i++) {\n                    intersect = segmentIntersection(\n                        points[(right_i - 1) * ps], points[((right_i - 1) * ps) + 1],\n                        points[right_i * ps], points[(right_i * ps) + 1],\n\n                        otherpoints[(i - 1) * otherps], otherpoints[((i - 1) * otherps) + 1],\n                        otherpoints[i * otherps], otherpoints[(i * otherps) + 1]\n                    );\n\n                    if (intersect !== null) {\n                        return intersect;\n                    }\n                }\n\n                console.error(\"intersectionPoint() should only be called when an intersection happens\");\n            }\n\n            function bottomTraversal(start_i, end_i) {\n                console.assert(start_i >= end_i, \"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)\");\n\n                var i;\n\n                for (i = start_i; i >= end_i; i--) {\n                    ctx.lineTo(\n                        otherseries.xaxis.p2c(otherpoints[i * otherps]) + plotOffset.left,\n                        otherseries.yaxis.p2c(otherpoints[(i * otherps) + 1]) + plotOffset.top\n                    );\n                }\n\n                closePolygon();\n            }\n\n            function topTraversal(start_i, end_i) {\n                console.assert(start_i <= end_i, \"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)\");\n\n                var i,\n                    intersect;\n\n                for (i = start_i; i < end_i; i++) {\n                    if (points[(i * ps) + 1] === null && i > start_i) {\n                        bottomTraversal(i - 1, start_i);\n                        findNextStart(i, end_i);\n                        return;\n                    }\n\n                    else if (points[(i * ps) + 1] === otherpoints[(i * otherps) + 1]) {\n                        bottomTraversal(i, start_i);\n                        findNextStart(i, end_i);\n                        return;\n                    }\n\n                    else if (points[(i * ps) + 1] < otherpoints[(i * otherps) + 1]) {\n                        intersect = intersectionPoint(i);\n                        ctx.lineTo(\n                            series.xaxis.p2c(intersect[0]) + plotOffset.left,\n                            series.yaxis.p2c(intersect[1]) + plotOffset.top\n                        );\n                        bottomTraversal(i, start_i);\n                        findNextStart(i, end_i);\n                        return;\n\n                    }\n\n                    else {\n                        ctx.lineTo(\n                            series.xaxis.p2c(points[i * ps]) + plotOffset.left,\n                            series.yaxis.p2c(points[(i * ps) + 1]) + plotOffset.top\n                        );\n                    }\n                }\n\n                bottomTraversal(end_i, start_i);\n            }\n\n\n            // Begin processing\n\n            otherseries = findBelowSeries( series, plot.getData() );\n\n            if ( !otherseries ) {\n                return;\n            }\n\n            ps = series.datapoints.pointsize;\n            points = series.datapoints.points;\n            otherps = otherseries.datapoints.pointsize;\n            otherpoints = otherseries.datapoints.points;\n            plotOffset = plot.getPlotOffset();\n\n            if (!validateInput()) {\n                return;\n            }\n\n\n            // Flot's getFillStyle() should probably be exposed somewhere\n            fillStyle = $.color.parse(series.color);\n            fillStyle.a = 0.4;\n            fillStyle.normalize();\n            ctx.fillStyle = fillStyle.toString();\n\n\n            // Begin recursive bi-directional traversal\n            findNextStart(0, points.length/ps);\n        }\n\n        plot.hooks.drawSeries.push(plotDifferenceArea);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"fillbelow\",\n        version: \"0.1.0\"\n    });\n\n})(jQuery);\n","(function ($) {\n    var options = {\n        series: {\n            stackpercent: null\n        } // or number/string\n    };\n\n    function init(plot) {\n\n        // will be built up dynamically as a hash from x-value, or y-value if horizontal\n        var stackBases = {};\n        var processed = false;\n        var stackSums = {};\n\n        //set percentage for stacked chart\n        function processRawData(plot, series, data, datapoints) {\n            if (!processed) {\n                processed = true;\n                stackSums = getStackSums(plot.getData());\n            }\n\t\t\tif (series.stackpercent == true) {\n\t\t\t\tvar num = data.length;\n\t\t\t\tseries.percents = [];\n\t\t\t\tvar key_idx = 0;\n\t\t\t\tvar value_idx = 1;\n\t\t\t\tif (series.bars && series.bars.horizontal && series.bars.horizontal === true) {\n\t\t\t\t\tkey_idx = 1;\n\t\t\t\t\tvalue_idx = 0;\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < num; j++) {\n\t\t\t\t\tvar sum = stackSums[data[j][key_idx] + \"\"];\n\t\t\t\t\tif (sum > 0) {\n\t\t\t\t\t\tseries.percents.push(data[j][value_idx] * 100 / sum);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseries.percents.push(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n        }\n\n        //calculate summary\n        function getStackSums(_data) {\n            var data_len = _data.length;\n            var sums = {};\n            if (data_len > 0) {\n                //caculate summary\n                for (var i = 0; i < data_len; i++) {\n                    if (_data[i].stackpercent) {\n\t\t\t\t\t\tvar key_idx = 0;\n\t\t\t\t\t\tvar value_idx = 1;\n\t\t\t\t\t\tif (_data[i].bars && _data[i].bars.horizontal && _data[i].bars.horizontal === true) {\n\t\t\t\t\t\t\tkey_idx = 1;\n\t\t\t\t\t\t\tvalue_idx = 0;\n\t\t\t\t\t\t}\n                        var num = _data[i].data.length;\n                        for (var j = 0; j < num; j++) {\n                            var value = 0;\n                            if (_data[i].data[j][1] != null) {\n                                value = _data[i].data[j][value_idx];\n                            }\n                            if (sums[_data[i].data[j][key_idx] + \"\"]) {\n                                sums[_data[i].data[j][key_idx] + \"\"] += value;\n                            } else {\n                                sums[_data[i].data[j][key_idx] + \"\"] = value;\n                            }\n\n                        }\n                    }\n                }\n            }\n            return sums;\n        }\n\n        function stackData(plot, s, datapoints) {\n            if (!s.stackpercent) return;\n            if (!processed) {\n                stackSums = getStackSums(plot.getData());\n            }\n            var newPoints = [];\n\n\n\t\t\tvar key_idx = 0;\n\t\t\tvar value_idx = 1;\n\t\t\tif (s.bars && s.bars.horizontal && s.bars.horizontal === true) {\n\t\t\t\tkey_idx = 1;\n\t\t\t\tvalue_idx = 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < datapoints.points.length; i += 3) {\n\t\t\t\t// note that the values need to be turned into absolute y-values.\n\t\t\t\t// in other words, if you were to stack (x, y1), (x, y2), and (x, y3),\n\t\t\t\t// (each from different series, which is where stackBases comes in),\n\t\t\t\t// you'd want the new points to be (x, y1, 0), (x, y1+y2, y1), (x, y1+y2+y3, y1+y2)\n\t\t\t\t// generally, (x, thisValue + (base up to this point), + (base up to this point))\n\t\t\t\tif (!stackBases[datapoints.points[i + key_idx]]) {\n\t\t\t\t\tstackBases[datapoints.points[i + key_idx]] = 0;\n\t\t\t\t}\n\t\t\t\tnewPoints[i + key_idx] = datapoints.points[i + key_idx];\n\t\t\t\tnewPoints[i + value_idx] = datapoints.points[i + value_idx] + stackBases[datapoints.points[i + key_idx]];\n\t\t\t\tnewPoints[i + 2] = stackBases[datapoints.points[i + key_idx]];\n\t\t\t\tstackBases[datapoints.points[i + key_idx]] += datapoints.points[i + value_idx];\n\t\t\t\t// change points to percentage values\n\t\t\t\t// you may need to set yaxis:{ max = 100 }\n\t\t\t\tif ( stackSums[newPoints[i+key_idx]+\"\"] > 0 ){\n\t\t\t\t\tnewPoints[i + value_idx] = newPoints[i + value_idx] * 100 / stackSums[newPoints[i + key_idx] + \"\"];\n\t\t\t\t\tnewPoints[i + 2] = newPoints[i + 2] * 100 / stackSums[newPoints[i + key_idx] + \"\"];\n\t\t\t\t} else {\n\t\t\t\t\tnewPoints[i + value_idx] = 0;\n\t\t\t\t\tnewPoints[i + 2] = 0;\n\t\t\t\t}\n\t\t\t}\n\n            datapoints.points = newPoints;\n        }\n\n\t\tplot.hooks.processRawData.push(processRawData);\n        plot.hooks.processDatapoints.push(stackData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'stackpercent',\n        version: '0.1'\n    });\n})(jQuery);\n","/* Flot plugin for stacking data sets rather than overlyaing them.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin assumes the data is sorted on x (or y if stacking horizontally).\nFor line charts, it is assumed that if a line has an undefined gap (from a\nnull point), then the line above it should have the same gap - insert zeros\ninstead of \"null\" if you want another behaviour. This also holds for the start\nand end of the chart. Note that stacking a mix of positive and negative values\nin most instances doesn't make sense (so it looks weird).\n\nTwo or more series are stacked when their \"stack\" attribute is set to the same\nkey (which can be any number or string or just \"true\"). To specify the default\nstack, you can set the stack option like this:\n\n    series: {\n        stack: null/false, true, or a key (number/string)\n    }\n\nYou can also specify it for a single series, like this:\n\n    $.plot( $(\"#placeholder\"), [{\n        data: [ ... ],\n        stack: true\n    }])\n\nThe stacking order is determined by the order of the data series in the array\n(later series end up on top of the previous).\n\nInternally, the plugin modifies the datapoints in each series, adding an\noffset to the y value. For line series, extra data points are inserted through\ninterpolation. If there's a second y value, it's also adjusted (e.g for bar\ncharts or filled areas).\n\n*/\n\n(function ($) {\n    var options = {\n        series: { stack: null } // or number/string\n    };\n\n    function init(plot) {\n        function findMatchingSeries(s, allseries) {\n            var res = null;\n            for (var i = 0; i < allseries.length; ++i) {\n                if (s == allseries[i])\n                    break;\n\n                if (allseries[i].stack == s.stack)\n                    res = allseries[i];\n            }\n\n            return res;\n        }\n\n        function stackData(plot, s, datapoints) {\n            if (s.stack == null || s.stack === false)\n                return;\n\n            var other = findMatchingSeries(s, plot.getData());\n            if (!other)\n                return;\n\n            var ps = datapoints.pointsize,\n                points = datapoints.points,\n                otherps = other.datapoints.pointsize,\n                otherpoints = other.datapoints.points,\n                newpoints = [],\n                px, py, intery, qx, qy, bottom,\n                withlines = s.lines.show,\n                horizontal = s.bars.horizontal,\n                withbottom = ps > 2 && (horizontal ? datapoints.format[2].x : datapoints.format[2].y),\n                withsteps = withlines && s.lines.steps,\n                keyOffset = horizontal ? 1 : 0,\n                accumulateOffset = horizontal ? 0 : 1,\n                i = 0, j = 0, l, m;\n\n            while (true) {\n                if (i >= points.length && j >= otherpoints.length)\n                    break;\n\n                l = newpoints.length;\n\n                if (i < points.length && points[i] == null) {\n                    // copy gaps\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(points[i + m]);\n                    i += ps;\n                }\n                else if (i >= points.length) {\n                    // take the remaining points from the previous series\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(otherpoints[j + m]);\n                    if (withbottom)\n                        newpoints[l + 2] = otherpoints[j + accumulateOffset];\n                    j += otherps;\n                }\n                else if (j >= otherpoints.length) {\n                    // take the remaining points from the current series\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(points[i + m]);\n                    i += ps;\n                }\n                else if (j < otherpoints.length && otherpoints[j] == null) {\n                    // ignore point\n                    j += otherps;\n                }\n                else {\n                    // cases where we actually got two points\n                    px = points[i + keyOffset];\n                    py = points[i + accumulateOffset];\n                    qx = otherpoints[j + keyOffset];\n                    qy = otherpoints[j + accumulateOffset];\n                    bottom = 0;\n\n                    if (px == qx) {\n                        for (m = 0; m < ps; ++m)\n                            newpoints.push(points[i + m]);\n\n                        newpoints[l + accumulateOffset] += qy;\n                        bottom = qy;\n\n                        i += ps;\n                        j += otherps;\n                    }\n                    else if (px > qx) {\n                        // take the point from the previous series so that next series will correctly stack\n                        if (i == 0) {\n                            for (m = 0; m < ps; ++m)\n                                newpoints.push(otherpoints[j + m]);\n                            bottom = qy;\n                        }\n                        // we got past point below, might need to\n                        // insert interpolated extra point\n                        if (i > 0 && points[i - ps] != null) {\n                            intery = py + (points[i - ps + accumulateOffset] - py) * (qx - px) / (points[i - ps + keyOffset] - px);\n                            newpoints.push(qx);\n                            newpoints.push(intery + qy);\n                            for (m = 2; m < ps; ++m)\n                                newpoints.push(points[i + m]);\n                            bottom = qy;\n                        }\n\n                        j += otherps;\n                    }\n                    else { // px < qx\n                        for (m = 0; m < ps; ++m)\n                            newpoints.push(points[i + m]);\n\n                        // we might be able to interpolate a point below,\n                        // this can give us a better y\n                        if (j > 0 && otherpoints[j - otherps] != null)\n                            bottom = qy + (otherpoints[j - otherps + accumulateOffset] - qy) * (px - qx) / (otherpoints[j - otherps + keyOffset] - qx);\n\n                        newpoints[l + accumulateOffset] += bottom;\n\n                        i += ps;\n                    }\n\n                    fromgap = false;\n\n                    if (l != newpoints.length && withbottom)\n                        newpoints[l + 2] = bottom;\n                }\n\n                // maintain the line steps invariant\n                if (withsteps && l != newpoints.length && l > 0\n                    && newpoints[l] != null\n                    && newpoints[l] != newpoints[l - ps]\n                    && newpoints[l + 1] != newpoints[l - ps + 1]) {\n                    for (m = 0; m < ps; ++m)\n                        newpoints[l + ps + m] = newpoints[l + m];\n                    newpoints[l + 1] = newpoints[l - ps + 1];\n                }\n            }\n\n            datapoints.points = newpoints;\n        }\n\n        plot.hooks.processDatapoints.push(stackData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'stack',\n        version: '1.2'\n    });\n})(jQuery);\n","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n\tmode: null or \"x\" or \"y\" or \"xy\",\n\tcolor: color,\n\tshape: \"round\" or \"miter\" or \"bevel\",\n\tminSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t// x2axis, x3axis, ...\n\t});\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n                show: false,\n                active: false\n            };\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n\n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n\n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            if (e.which != 1)  // only accept left-click\n                return;\n\n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n\n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n\n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined)\n                document.onselectstart = savedhandlers.onselectstart;\n            if (document.ondrag !== undefined)\n                document.ondrag = savedhandlers.ondrag;\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane())\n                triggerSelectedEvent(e);\n            else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            setTimeout(function() {\n              plot.isSelecting = false;\n            }, 10);\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane())\n                return null;\n\n            if (!selection.show) return null;\n\n            var r = {}, c1 = selection.first, c2 = selection.second;\n            var axes = plot.getAxes();\n            // look if no axis is used\n            var noAxisInUse = true;\n            $.each(axes, function (name, axis) {\n              if (axis.used) {\n                anyUsed = false;\n              }\n            })\n\n            $.each(axes, function (name, axis) {\n                if (axis.used || noAxisInUse) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]);\n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent(event) {\n            var r = getSelection();\n\n            // Add ctrlKey and metaKey to event\n            r.ctrlKey = event.ctrlKey;\n            r.metaKey = event.metaKey;\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis)\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min: (value > max ? max: value);\n        }\n\n        function setSelectionPos(pos, e) {\n            var o = plot.getOptions();\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (o.selection.mode == \"y\")\n                pos.x = pos == selection.first ? 0 : plot.width();\n\n            if (o.selection.mode == \"x\")\n                pos.y = pos == selection.first ? 0 : plot.height();\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null)\n                return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                plot.isSelecting = true;\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            }\n            else\n                clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                plot.triggerRedrawOverlay();\n                if (!preventEvent)\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function setSelection(ranges, preventEvent) {\n            var axis, range, o = plot.getOptions();\n\n            if (o.selection.mode == \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            }\n            else {\n                range = extractRange(ranges, \"x\");\n\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (o.selection.mode == \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            }\n            else {\n                range = extractRange(ranges, \"y\");\n\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane())\n                triggerSelectedEvent();\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n\n                ctx.strokeStyle = c.scale('a', 0.8).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                ctx.fillRect(x, y, w, h);\n                ctx.strokeRect(x, y, w, h);\n\n                ctx.restore();\n            }\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n\n            if (mouseUpHandler)\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n        });\n\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                color: \"#e8cfac\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n","/* Flot plugin for rendering pie charts.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin assumes that each series has a single data value, and that each\nvalue is a positive integer or zero.  Negative numbers don't make sense for a\npie chart, and have unpredictable results.  The values do NOT need to be\npassed in as percentages; the plugin will calculate the total and per-slice\npercentages internally.\n\n* Created by Brian Medendorp\n\n* Updated with contributions from btburnett3, Anthony Aragues and Xavi Ivars\n\nThe plugin supports these options:\n\n\tseries: {\n\t\tpie: {\n\t\t\tshow: true/false\n\t\t\tradius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'\n\t\t\tinnerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect\n\t\t\tstartAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result\n\t\t\ttilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)\n\t\t\toffset: {\n\t\t\t\ttop: integer value to move the pie up or down\n\t\t\t\tleft: integer value to move the pie left or right, or 'auto'\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')\n\t\t\t\twidth: integer pixel width of the stroke\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\tshow: true/false, or 'auto'\n\t\t\t\tformatter:  a user-defined function that modifies the text/style of the label text\n\t\t\t\tradius: 0-1 for percentage of fullsize, or a specified pixel length\n\t\t\t\tbackground: {\n\t\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')\n\t\t\t\t\topacity: 0-1\n\t\t\t\t},\n\t\t\t\tthreshold: 0-1 for the percentage value at which to hide labels (if they're too small)\n\t\t\t},\n\t\t\tcombine: {\n\t\t\t\tthreshold: 0-1 for the percentage value at which to combine slices (if they're too small)\n\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined\n\t\t\t\tlabel: any text value of what the combined slice should be labeled\n\t\t\t}\n\t\t\thighlight: {\n\t\t\t\topacity: 0-1\n\t\t\t}\n\t\t}\n\t}\n\nMore detail and specific examples can be found in the included HTML file.\n\n*/\n\n(function($) {\n\n\t// Maximum redraw attempts when fitting labels within the plot\n\n\tvar REDRAW_ATTEMPTS = 10;\n\n\t// Factor by which to shrink the pie when fitting labels within the plot\n\n\tvar REDRAW_SHRINK = 0.95;\n\n\tfunction init(plot) {\n\n\t\tvar canvas = null,\n\t\t\ttarget = null,\n\t\t\tmaxRadius = null,\n\t\t\tcenterLeft = null,\n\t\t\tcenterTop = null,\n\t\t\tprocessed = false,\n\t\t\tctx = null;\n\n\t\t// interactive variables\n\n\t\tvar highlights = [];\n\n\t\t// add hook to determine if pie plugin in enabled, and then perform necessary operations\n\n\t\tplot.hooks.processOptions.push(function(plot, options) {\n\t\t\tif (options.series.pie.show) {\n\n\t\t\t\toptions.grid.show = false;\n\n\t\t\t\t// set labels.show\n\n\t\t\t\tif (options.series.pie.label.show == \"auto\") {\n\t\t\t\t\tif (options.legend.show) {\n\t\t\t\t\t\toptions.series.pie.label.show = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.series.pie.label.show = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set radius\n\n\t\t\t\tif (options.series.pie.radius == \"auto\") {\n\t\t\t\t\tif (options.series.pie.label.show) {\n\t\t\t\t\t\toptions.series.pie.radius = 3/4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.series.pie.radius = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ensure sane tilt\n\n\t\t\t\tif (options.series.pie.tilt > 1) {\n\t\t\t\t\toptions.series.pie.tilt = 1;\n\t\t\t\t} else if (options.series.pie.tilt < 0) {\n\t\t\t\t\toptions.series.pie.tilt = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.bindEvents.push(function(plot, eventHolder) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tif (options.grid.hoverable) {\n\t\t\t\t\teventHolder.unbind(\"mousemove\").mousemove(onMouseMove);\n\t\t\t\t}\n\t\t\t\tif (options.grid.clickable) {\n\t\t\t\t\teventHolder.unbind(\"click\").click(onClick);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.processDatapoints.push(function(plot, series, data, datapoints) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tprocessDatapoints(plot, series, data, datapoints);\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.drawOverlay.push(function(plot, octx) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tdrawOverlay(plot, octx);\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.draw.push(function(plot, newCtx) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tdraw(plot, newCtx);\n\t\t\t}\n\t\t});\n\n\t\tfunction processDatapoints(plot, series, datapoints) {\n\t\t\tif (!processed)\t{\n\t\t\t\tprocessed = true;\n\t\t\t\tcanvas = plot.getCanvas();\n\t\t\t\ttarget = $(canvas).parent();\n\t\t\t\toptions = plot.getOptions();\n\t\t\t\tplot.setData(combine(plot.getData()));\n\t\t\t}\n\t\t}\n\n\t\tfunction combine(data) {\n\n\t\t\tvar total = 0,\n\t\t\t\tcombined = 0,\n\t\t\t\tnumCombined = 0,\n\t\t\t\tcolor = options.series.pie.combine.color,\n\t\t\t\tnewdata = [];\n\n\t\t\t// Fix up the raw data from Flot, ensuring the data is numeric\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\n\t\t\t\tvar value = data[i].data;\n\n\t\t\t\t// If the data is an array, we'll assume that it's a standard\n\t\t\t\t// Flot x-y pair, and are concerned only with the second value.\n\n\t\t\t\t// Note how we use the original array, rather than creating a\n\t\t\t\t// new one; this is more efficient and preserves any extra data\n\t\t\t\t// that the user may have stored in higher indexes.\n\n\t\t\t\tif ($.isArray(value) && value.length == 1) {\n    \t\t\t\tvalue = value[0];\n\t\t\t\t}\n\n\t\t\t\tif ($.isArray(value)) {\n\t\t\t\t\t// Equivalent to $.isNumeric() but compatible with jQuery < 1.7\n\t\t\t\t\tif (!isNaN(parseFloat(value[1])) && isFinite(value[1])) {\n\t\t\t\t\t\tvalue[1] = +value[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue[1] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNaN(parseFloat(value)) && isFinite(value)) {\n\t\t\t\t\tvalue = [1, +value];\n\t\t\t\t} else {\n\t\t\t\t\tvalue = [1, 0];\n\t\t\t\t}\n\n\t\t\t\tdata[i].data = [value];\n\t\t\t}\n\n\t\t\t// Sum up all the slices, so we can calculate percentages for each\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\ttotal += data[i].data[0][1];\n\t\t\t}\n\n\t\t\t// Count the number of slices with percentages below the combine\n\t\t\t// threshold; if it turns out to be just one, we won't combine.\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\tvar value = data[i].data[0][1];\n\t\t\t\tif (value / total <= options.series.pie.combine.threshold) {\n\t\t\t\t\tcombined += value;\n\t\t\t\t\tnumCombined++;\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tcolor = data[i].color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\tvar value = data[i].data[0][1];\n\t\t\t\tif (numCombined < 2 || value / total > options.series.pie.combine.threshold) {\n\t\t\t\t\tnewdata.push({\n\t\t\t\t\t\tdata: [[1, value]],\n\t\t\t\t\t\tcolor: data[i].color,\n\t\t\t\t\t\tlabel: data[i].label,\n\t\t\t\t\t\tangle: value * Math.PI * 2 / total,\n\t\t\t\t\t\tpercent: value / (total / 100)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (numCombined > 1) {\n\t\t\t\tnewdata.push({\n\t\t\t\t\tdata: [[1, combined]],\n\t\t\t\t\tcolor: color,\n\t\t\t\t\tlabel: options.series.pie.combine.label,\n\t\t\t\t\tangle: combined * Math.PI * 2 / total,\n\t\t\t\t\tpercent: combined / (total / 100)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newdata;\n\t\t}\n\n\t\tfunction draw(plot, newCtx) {\n\n\t\t\tif (!target) {\n\t\t\t\treturn; // if no series were passed\n\t\t\t}\n\n\t\t\tvar canvasWidth = plot.getPlaceholder().width(),\n\t\t\t\tcanvasHeight = plot.getPlaceholder().height(),\n\t\t\t\tlegendWidth = target.children().filter(\".legend\").children().width() || 0;\n\n\t\t\tctx = newCtx;\n\n\t\t\t// WARNING: HACK! REWRITE THIS CODE AS SOON AS POSSIBLE!\n\n\t\t\t// When combining smaller slices into an 'other' slice, we need to\n\t\t\t// add a new series.  Since Flot gives plugins no way to modify the\n\t\t\t// list of series, the pie plugin uses a hack where the first call\n\t\t\t// to processDatapoints results in a call to setData with the new\n\t\t\t// list of series, then subsequent processDatapoints do nothing.\n\n\t\t\t// The plugin-global 'processed' flag is used to control this hack;\n\t\t\t// it starts out false, and is set to true after the first call to\n\t\t\t// processDatapoints.\n\n\t\t\t// Unfortunately this turns future setData calls into no-ops; they\n\t\t\t// call processDatapoints, the flag is true, and nothing happens.\n\n\t\t\t// To fix this we'll set the flag back to false here in draw, when\n\t\t\t// all series have been processed, so the next sequence of calls to\n\t\t\t// processDatapoints once again starts out with a slice-combine.\n\t\t\t// This is really a hack; in 0.9 we need to give plugins a proper\n\t\t\t// way to modify series before any processing begins.\n\n\t\t\tprocessed = false;\n\n\t\t\t// calculate maximum radius and center point\n\n\t\t\tmaxRadius =  Math.min(canvasWidth, canvasHeight / options.series.pie.tilt) / 2;\n\t\t\tcenterTop = canvasHeight / 2 + options.series.pie.offset.top;\n\t\t\tcenterLeft = canvasWidth / 2;\n\n\t\t\tif (options.series.pie.offset.left == \"auto\") {\n\t\t\t\tif (options.legend.position.match(\"w\")) {\n\t\t\t\t\tcenterLeft += legendWidth / 2;\n\t\t\t\t} else {\n\t\t\t\t\tcenterLeft -= legendWidth / 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcenterLeft += options.series.pie.offset.left;\n\t\t\t}\n\n\t\t\tif (centerLeft < maxRadius) {\n\t\t\t\tcenterLeft = maxRadius;\n\t\t\t} else if (centerLeft > canvasWidth - maxRadius) {\n\t\t\t\tcenterLeft = canvasWidth - maxRadius;\n\t\t\t}\n\n\t\t\tvar slices = plot.getData(),\n\t\t\t\tattempts = 0;\n\n\t\t\t// Keep shrinking the pie's radius until drawPie returns true,\n\t\t\t// indicating that all the labels fit, or we try too many times.\n\n\t\t\tdo {\n\t\t\t\tif (attempts > 0) {\n\t\t\t\t\tmaxRadius *= REDRAW_SHRINK;\n\t\t\t\t}\n\t\t\t\tattempts += 1;\n\t\t\t\tclear();\n\t\t\t\tif (options.series.pie.tilt <= 0.8) {\n\t\t\t\t\tdrawShadow();\n\t\t\t\t}\n\t\t\t} while (!drawPie() && attempts < REDRAW_ATTEMPTS)\n\n\t\t\tif (attempts >= REDRAW_ATTEMPTS) {\n\t\t\t\tclear();\n\t\t\t\ttarget.prepend(\"<div class='error'>Could not draw pie with labels contained inside canvas</div>\");\n\t\t\t}\n\n\t\t\tif (plot.setSeries && plot.insertLegend) {\n\t\t\t\tplot.setSeries(slices);\n\t\t\t\tplot.insertLegend();\n\t\t\t}\n\n\t\t\t// we're actually done at this point, just defining internal functions at this point\n\n\t\t\tfunction clear() {\n\t\t\t\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\ttarget.children().filter(\".pieLabel, .pieLabelBackground\").remove();\n\t\t\t}\n\n\t\t\tfunction drawShadow() {\n\n\t\t\t\tvar shadowLeft = options.series.pie.shadow.left;\n\t\t\t\tvar shadowTop = options.series.pie.shadow.top;\n\t\t\t\tvar edge = 10;\n\t\t\t\tvar alpha = options.series.pie.shadow.alpha;\n\t\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\t\tif (radius >= canvasWidth / 2 - shadowLeft || radius * options.series.pie.tilt >= canvasHeight / 2 - shadowTop || radius <= edge) {\n\t\t\t\t\treturn;\t// shadow would be outside canvas, so don't draw it\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(shadowLeft,shadowTop);\n\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t\tctx.fillStyle = \"#000\";\n\n\t\t\t\t// center and rotate to starting position\n\n\t\t\t\tctx.translate(centerLeft,centerTop);\n\t\t\t\tctx.scale(1, options.series.pie.tilt);\n\n\t\t\t\t//radius -= edge;\n\n\t\t\t\tfor (var i = 1; i <= edge; i++) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, false);\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tradius -= i;\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tfunction drawPie() {\n\n\t\t\t\tvar startAngle = Math.PI * options.series.pie.startAngle;\n\t\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\t\t// center and rotate to starting position\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(centerLeft,centerTop);\n\t\t\t\tctx.scale(1, options.series.pie.tilt);\n\t\t\t\t//ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera\n\n\t\t\t\t// draw slices\n\n\t\t\t\tctx.save();\n\t\t\t\tvar currentAngle = startAngle;\n\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\tslices[i].startAngle = currentAngle;\n\t\t\t\t\tdrawSlice(slices[i].angle, slices[i].color, true);\n\t\t\t\t}\n\t\t\t\tctx.restore();\n\n\t\t\t\t// draw slice outlines\n\n\t\t\t\tif (options.series.pie.stroke.width > 0) {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.lineWidth = options.series.pie.stroke.width;\n\t\t\t\t\tcurrentAngle = startAngle;\n\t\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\t\tdrawSlice(slices[i].angle, options.series.pie.stroke.color, false);\n\t\t\t\t\t}\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\n\t\t\t\t// draw donut hole\n\n\t\t\t\tdrawDonutHole(ctx);\n\n\t\t\t\tctx.restore();\n\n\t\t\t\t// Draw the labels, returning true if they fit within the plot\n\n\t\t\t\tif (options.series.pie.label.show) {\n\t\t\t\t\treturn drawLabels();\n\t\t\t\t} else return true;\n\n\t\t\t\tfunction drawSlice(angle, color, fill) {\n\n\t\t\t\t\tif (angle <= 0 || isNaN(angle)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fill) {\n\t\t\t\t\t\tctx.fillStyle = color;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.strokeStyle = color;\n\t\t\t\t\t\tctx.lineJoin = \"round\";\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tif (Math.abs(angle - Math.PI * 2) > 0.000000001) {\n\t\t\t\t\t\tctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t\t}\n\n\t\t\t\t\t//ctx.arc(0, 0, radius, 0, angle, false); // This doesn't work properly in Opera\n\t\t\t\t\tctx.arc(0, 0, radius,currentAngle, currentAngle + angle / 2, false);\n\t\t\t\t\tctx.arc(0, 0, radius,currentAngle + angle / 2, currentAngle + angle, false);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\t//ctx.rotate(angle); // This doesn't work properly in Opera\n\t\t\t\t\tcurrentAngle += angle;\n\n\t\t\t\t\tif (fill) {\n\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction drawLabels() {\n\n\t\t\t\t\tvar currentAngle = startAngle;\n\t\t\t\t\tvar radius = options.series.pie.label.radius > 1 ? options.series.pie.label.radius : maxRadius * options.series.pie.label.radius;\n\n\t\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\t\tif (slices[i].percent >= options.series.pie.label.threshold * 100) {\n\t\t\t\t\t\t\tif (!drawLabel(slices[i], currentAngle, i)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentAngle += slices[i].angle;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\tfunction drawLabel(slice, startAngle, index) {\n\n\t\t\t\t\t\tif (slice.data[0][1] == 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// format label text\n\n\t\t\t\t\t\tvar lf = options.legend.labelFormatter, text, plf = options.series.pie.label.formatter;\n\n\t\t\t\t\t\tif (lf) {\n\t\t\t\t\t\t\ttext = lf(slice.label, slice);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = slice.label;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (plf) {\n\t\t\t\t\t\t\ttext = plf(text, slice);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar halfAngle = ((startAngle + slice.angle) + startAngle) / 2;\n\t\t\t\t\t\tvar x = centerLeft + Math.round(Math.cos(halfAngle) * radius);\n\t\t\t\t\t\tvar y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;\n\n\t\t\t\t\t\tvar html = \"<span class='pieLabel' id='pieLabel\" + index + \"' style='position:absolute;top:\" + y + \"px;left:\" + x + \"px;'>\" + text + \"</span>\";\n\t\t\t\t\t\ttarget.append(html);\n\n\t\t\t\t\t\tvar label = target.children(\"#pieLabel\" + index);\n\t\t\t\t\t\tvar labelTop = (y - label.height() / 2);\n\t\t\t\t\t\tvar labelLeft = (x - label.width() / 2);\n\n\t\t\t\t\t\tlabel.css(\"top\", labelTop);\n\t\t\t\t\t\tlabel.css(\"left\", labelLeft);\n\n\t\t\t\t\t\t// check to make sure that the label is not outside the canvas\n\n\t\t\t\t\t\tif (0 - labelTop > 0 || 0 - labelLeft > 0 || canvasHeight - (labelTop + label.height()) < 0 || canvasWidth - (labelLeft + label.width()) < 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.series.pie.label.background.opacity != 0) {\n\n\t\t\t\t\t\t\t// put in the transparent background separately to avoid blended labels and label boxes\n\n\t\t\t\t\t\t\tvar c = options.series.pie.label.background.color;\n\n\t\t\t\t\t\t\tif (c == null) {\n\t\t\t\t\t\t\t\tc = slice.color;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar pos = \"top:\" + labelTop + \"px;left:\" + labelLeft + \"px;\";\n\t\t\t\t\t\t\t$(\"<div class='pieLabelBackground' style='position:absolute;width:\" + label.width() + \"px;height:\" + label.height() + \"px;\" + pos + \"background-color:\" + c + \";'></div>\")\n\t\t\t\t\t\t\t\t.css(\"opacity\", options.series.pie.label.background.opacity)\n\t\t\t\t\t\t\t\t.insertBefore(label);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} // end individual label function\n\t\t\t\t} // end drawLabels function\n\t\t\t} // end drawPie function\n\t\t} // end draw function\n\n\t\t// Placed here because it needs to be accessed from multiple locations\n\n\t\tfunction drawDonutHole(layer) {\n\t\t\tif (options.series.pie.innerRadius > 0) {\n\n\t\t\t\t// subtract the center\n\n\t\t\t\tlayer.save();\n\t\t\t\tvar innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;\n\t\t\t\tlayer.globalCompositeOperation = \"destination-out\"; // this does not work with excanvas, but it will fall back to using the stroke color\n\t\t\t\tlayer.beginPath();\n\t\t\t\tlayer.fillStyle = options.series.pie.stroke.color;\n\t\t\t\tlayer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\n\t\t\t\tlayer.fill();\n\t\t\t\tlayer.closePath();\n\t\t\t\tlayer.restore();\n\n\t\t\t\t// add inner stroke\n\n\t\t\t\tlayer.save();\n\t\t\t\tlayer.beginPath();\n\t\t\t\tlayer.strokeStyle = options.series.pie.stroke.color;\n\t\t\t\tlayer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\n\t\t\t\tlayer.stroke();\n\t\t\t\tlayer.closePath();\n\t\t\t\tlayer.restore();\n\n\t\t\t\t// TODO: add extra shadow inside hole (with a mask) if the pie is tilted.\n\t\t\t}\n\t\t}\n\n\t\t//-- Additional Interactive related functions --\n\n\t\tfunction isPointInPoly(poly, pt) {\n\t\t\tfor(var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)\n\t\t\t\t((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) || (poly[j][1] <= pt[1] && pt[1]< poly[i][1]))\n\t\t\t\t&& (pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0])\n\t\t\t\t&& (c = !c);\n\t\t\treturn c;\n\t\t}\n\n\t\tfunction findNearbySlice(mouseX, mouseY) {\n\n\t\t\tvar slices = plot.getData(),\n\t\t\t\toptions = plot.getOptions(),\n\t\t\t\tradius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius,\n\t\t\t\tx, y;\n\n\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\n\t\t\t\tvar s = slices[i];\n\n\t\t\t\tif (s.pie.show) {\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t\t//ctx.scale(1, options.series.pie.tilt);\t// this actually seems to break everything when here.\n\t\t\t\t\tctx.arc(0, 0, radius, s.startAngle, s.startAngle + s.angle / 2, false);\n\t\t\t\t\tctx.arc(0, 0, radius, s.startAngle + s.angle / 2, s.startAngle + s.angle, false);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tx = mouseX - centerLeft;\n\t\t\t\t\ty = mouseY - centerTop;\n\n\t\t\t\t\tif (ctx.isPointInPath) {\n\t\t\t\t\t\tif (ctx.isPointInPath(mouseX - centerLeft, mouseY - centerTop)) {\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdatapoint: [s.percent, s.data],\n\t\t\t\t\t\t\t\tdataIndex: 0,\n\t\t\t\t\t\t\t\tseries: s,\n\t\t\t\t\t\t\t\tseriesIndex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// excanvas for IE doesn;t support isPointInPath, this is a workaround.\n\n\t\t\t\t\t\tvar p1X = radius * Math.cos(s.startAngle),\n\t\t\t\t\t\t\tp1Y = radius * Math.sin(s.startAngle),\n\t\t\t\t\t\t\tp2X = radius * Math.cos(s.startAngle + s.angle / 4),\n\t\t\t\t\t\t\tp2Y = radius * Math.sin(s.startAngle + s.angle / 4),\n\t\t\t\t\t\t\tp3X = radius * Math.cos(s.startAngle + s.angle / 2),\n\t\t\t\t\t\t\tp3Y = radius * Math.sin(s.startAngle + s.angle / 2),\n\t\t\t\t\t\t\tp4X = radius * Math.cos(s.startAngle + s.angle / 1.5),\n\t\t\t\t\t\t\tp4Y = radius * Math.sin(s.startAngle + s.angle / 1.5),\n\t\t\t\t\t\t\tp5X = radius * Math.cos(s.startAngle + s.angle),\n\t\t\t\t\t\t\tp5Y = radius * Math.sin(s.startAngle + s.angle),\n\t\t\t\t\t\t\tarrPoly = [[0, 0], [p1X, p1Y], [p2X, p2Y], [p3X, p3Y], [p4X, p4Y], [p5X, p5Y]],\n\t\t\t\t\t\t\tarrPoint = [x, y];\n\n\t\t\t\t\t\t// TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?\n\n\t\t\t\t\t\tif (isPointInPoly(arrPoly, arrPoint)) {\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdatapoint: [s.percent, s.data],\n\t\t\t\t\t\t\t\tdataIndex: 0,\n\t\t\t\t\t\t\t\tseries: s,\n\t\t\t\t\t\t\t\tseriesIndex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\ttriggerClickHoverEvent(\"plothover\", e);\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\ttriggerClickHoverEvent(\"plotclick\", e);\n\t\t}\n\n\t\t// trigger click or hover event (they send the same parameters so we share their code)\n\n\t\tfunction triggerClickHoverEvent(eventname, e) {\n\n\t\t\tvar offset = plot.offset();\n\t\t\tvar canvasX = parseInt(e.pageX - offset.left);\n\t\t\tvar canvasY =  parseInt(e.pageY - offset.top);\n\t\t\tvar item = findNearbySlice(canvasX, canvasY);\n\n\t\t\tif (options.grid.autoHighlight) {\n\n\t\t\t\t// clear auto-highlights\n\n\t\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\t\tvar h = highlights[i];\n\t\t\t\t\tif (h.auto == eventname && !(item && h.series == item.series)) {\n\t\t\t\t\t\tunhighlight(h.series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// highlight the slice\n\n\t\t\tif (item) {\n\t\t\t\thighlight(item.series, eventname);\n\t\t\t}\n\n\t\t\t// trigger any hover bind events\n\n\t\t\tvar pos = { pageX: e.pageX, pageY: e.pageY };\n\t\t\ttarget.trigger(eventname, [pos, item]);\n\t\t}\n\n\t\tfunction highlight(s, auto) {\n\t\t\t//if (typeof s == \"number\") {\n\t\t\t//\ts = series[s];\n\t\t\t//}\n\n\t\t\tvar i = indexOfHighlight(s);\n\n\t\t\tif (i == -1) {\n\t\t\t\thighlights.push({ series: s, auto: auto });\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t} else if (!auto) {\n\t\t\t\thighlights[i].auto = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction unhighlight(s) {\n\t\t\tif (s == null) {\n\t\t\t\thighlights = [];\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t}\n\n\t\t\t//if (typeof s == \"number\") {\n\t\t\t//\ts = series[s];\n\t\t\t//}\n\n\t\t\tvar i = indexOfHighlight(s);\n\n\t\t\tif (i != -1) {\n\t\t\t\thighlights.splice(i, 1);\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t}\n\t\t}\n\n\t\tfunction indexOfHighlight(s) {\n\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\tvar h = highlights[i];\n\t\t\t\tif (h.series == s)\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tfunction drawOverlay(plot, octx) {\n\n\t\t\tvar options = plot.getOptions();\n\n\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\toctx.save();\n\t\t\toctx.translate(centerLeft, centerTop);\n\t\t\toctx.scale(1, options.series.pie.tilt);\n\n\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\tdrawHighlight(highlights[i].series);\n\t\t\t}\n\n\t\t\tdrawDonutHole(octx);\n\n\t\t\toctx.restore();\n\n\t\t\tfunction drawHighlight(series) {\n\n\t\t\t\tif (series.angle <= 0 || isNaN(series.angle)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();\n\t\t\t\toctx.fillStyle = \"rgba(255, 255, 255, \" + options.series.pie.highlight.opacity + \")\"; // this is temporary until we have access to parseColor\n\t\t\t\toctx.beginPath();\n\t\t\t\tif (Math.abs(series.angle - Math.PI * 2) > 0.000000001) {\n\t\t\t\t\toctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t}\n\t\t\t\toctx.arc(0, 0, radius, series.startAngle, series.startAngle + series.angle / 2, false);\n\t\t\t\toctx.arc(0, 0, radius, series.startAngle + series.angle / 2, series.startAngle + series.angle, false);\n\t\t\t\toctx.closePath();\n\t\t\t\toctx.fill();\n\t\t\t}\n\t\t}\n\t} // end init (plugin body)\n\n\t// define pie specific options and their default values\n\n\tvar options = {\n\t\tseries: {\n\t\t\tpie: {\n\t\t\t\tshow: false,\n\t\t\t\tradius: \"auto\",\t// actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)\n\t\t\t\tinnerRadius: 0, /* for donut */\n\t\t\t\tstartAngle: 3/2,\n\t\t\t\ttilt: 1,\n\t\t\t\tshadow: {\n\t\t\t\t\tleft: 5,\t// shadow left offset\n\t\t\t\t\ttop: 15,\t// shadow top offset\n\t\t\t\t\talpha: 0.02\t// shadow alpha\n\t\t\t\t},\n\t\t\t\toffset: {\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: \"auto\"\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\twidth: 1\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: \"auto\",\n\t\t\t\t\tformatter: function(label, slice) {\n\t\t\t\t\t\treturn \"<div style='font-size:x-small;text-align:center;padding:2px;color:\" + slice.color + \";'>\" + label + \"<br/>\" + Math.round(slice.percent) + \"%</div>\";\n\t\t\t\t\t},\t// formatter function\n\t\t\t\t\tradius: 1,\t// radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)\n\t\t\t\t\tbackground: {\n\t\t\t\t\t\tcolor: null,\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t},\n\t\t\t\t\tthreshold: 0\t// percentage at which to hide the label (i.e. the slice is too narrow)\n\t\t\t\t},\n\t\t\t\tcombine: {\n\t\t\t\t\tthreshold: -1,\t// percentage at which to combine little slices into one larger slice\n\t\t\t\t\tcolor: null,\t// color to give the new slice (auto-generated if null)\n\t\t\t\t\tlabel: \"Other\"\t// label to give the new slice\n\t\t\t\t},\n\t\t\t\thighlight: {\n\t\t\t\t\t//color: \"#fff\",\t\t// will add this functionality once parseColor is available\n\t\t\t\t\topacity: 0.5\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: \"pie\",\n\t\tversion: \"1.1\"\n\t});\n\n})(jQuery);\n","// jshint ignore: start\n// jscs: disable\nace.define(\"ace/snippets/prometheus\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\n// exports.snippetText = \"# rate\\n\\\n// snippet r\\n\\\n//   rate(${1:metric}[${2:range}])\\n\\\n// \";\n\nexports.snippets = [\n  {\n    \"content\": \"rate(${1:metric}[${2:range}])\",\n    \"name\": \"rate()\",\n    \"scope\": \"prometheus\",\n    \"tabTrigger\": \"r\"\n  }\n];\n\nexports.scope = \"prometheus\";\n});\n","// jshint ignore: start\n// jscs: disable\nace.define(\"ace/mode/prometheus_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PrometheusHighlightRules = function() {\n  var keywords = (\n    \"count|count_values|min|max|avg|sum|stddev|stdvar|bottomk|topk|quantile\"\n  );\n\n  var builtinConstants = (\n    \"true|false|null|__name__|job\"\n  );\n\n  var builtinFunctions = (\n    \"abs|absent|ceil|changes|clamp_max|clamp_min|count_scalar|day_of_month|day_of_week|days_in_month|delta|deriv|\" + \"drop_common_labels|exp|floor|histogram_quantile|holt_winters|hour|idelta|increase|irate|label_replace|ln|log2|\" +\n    \"log10|minute|month|predict_linear|rate|resets|round|scalar|sort|sort_desc|sqrt|time|vector|year|avg_over_time|\" +\n    \"min_over_time|max_over_time|sum_over_time|count_over_time|quantile_over_time|stddev_over_time|stdvar_over_time\"\n  );\n\n  var keywordMapper = this.createKeywordMapper({\n    \"support.function\": builtinFunctions,\n    \"keyword\": keywords,\n    \"constant.language\": builtinConstants\n  }, \"identifier\", true);\n\n  this.$rules = {\n    \"start\" : [ {\n      token : \"string\", // single line\n      regex : /\"(?:[^\"\\\\]|\\\\.)*?\"/\n    }, {\n      token : \"string\", // string\n      regex : \"'.*?'\"\n    }, {\n      token : \"constant.numeric\", // float\n      regex : \"[-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    }, {\n      token : \"constant.language\", // time\n      regex : \"\\\\d+[smhdwy]\"\n    }, {\n      token : \"keyword.operator.binary\",\n      regex : \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\^|==|!=|<=|>=|<|>|and|or|unless\"\n    }, {\n      token : \"keyword.other\",\n      regex : \"keep_common|offset|bool\"\n    }, {\n      token : \"keyword.control\",\n      regex : \"by|without|on|ignoring|group_left|group_right\",\n      next  : \"start-label-list-matcher\"\n    }, {\n      token : \"variable\",\n      regex : \"\\\\$[A-Za-z0-9_]+\"\n    }, {\n      token : keywordMapper,\n      regex : \"[a-zA-Z_:][a-zA-Z0-9_:]*\"\n    }, {\n      token : \"paren.lparen\",\n      regex : \"[[(]\"\n    }, {\n      token : \"paren.lparen.label-matcher\",\n      regex : \"{\",\n      next  : \"start-label-matcher\"\n    }, {\n      token : \"paren.rparen\",\n      regex : \"[\\\\])]\"\n    }, {\n      token : \"paren.rparen.label-matcher\",\n      regex : \"}\"\n    }, {\n      token : \"text\",\n      regex : \"\\\\s+\"\n    } ],\n    \"start-label-matcher\" : [ {\n      token : \"entity.name.tag.label-matcher\",\n      regex : '[a-zA-Z_][a-zA-Z0-9_]*'\n    }, {\n      token : \"keyword.operator.label-matcher\",\n      regex : '=~|=|!~|!='\n    }, {\n      token : \"string.quoted.label-matcher\",\n      regex : '\"[^\"]*\"|\\'[^\\']*\\''\n    }, {\n      token : \"punctuation.operator.label-matcher\",\n      regex : \",\"\n    }, {\n      token : \"paren.rparen.label-matcher\",\n      regex : \"}\",\n      next  : \"start\"\n    } ],\n    \"start-label-list-matcher\" : [ {\n      token : \"paren.lparen.label-list-matcher\",\n      regex : \"[(]\"\n    }, {\n      token : \"entity.name.tag.label-list-matcher\",\n      regex : '[a-zA-Z_][a-zA-Z0-9_]*'\n    }, {\n      token : \"punctuation.operator.label-list-matcher\",\n      regex : \",\"\n    }, {\n      token : \"paren.rparen.label-list-matcher\",\n      regex : \"[)]\",\n      next  : \"start\"\n    } ]\n  };\n\n  this.normalizeRules();\n};\n\noop.inherits(PrometheusHighlightRules, TextHighlightRules);\n\nexports.PrometheusHighlightRules = PrometheusHighlightRules;\n});\n\nace.define(\"ace/mode/prometheus_completions\",[\"require\",\"exports\",\"module\",\"ace/token_iterator\", \"ace/lib/lang\"], function(require, exports, module) {\n\"use strict\";\n\nvar lang = require(\"../lib/lang\");\n\nvar prometheusKeyWords = [\n  \"by\", \"without\", \"keep_common\", \"offset\", \"bool\", \"and\", \"or\", \"unless\", \"ignoring\", \"on\", \"group_left\",\n  \"group_right\", \"count\", \"count_values\", \"min\", \"max\", \"avg\", \"sum\", \"stddev\", \"stdvar\", \"bottomk\", \"topk\", \"quantile\"\n];\n\nvar keyWordsCompletions = prometheusKeyWords.map(function(word) {\n  return {\n    caption: word,\n    value: word,\n    meta: \"keyword\",\n    score: Number.MAX_VALUE\n  }\n});\n\nvar prometheusFunctions = [\n  {\n    name: 'abs()', value: 'abs',\n    def: 'abs(v instant-vector)',\n    docText: 'Returns the input vector with all sample values converted to their absolute value.'\n  },\n  {\n    name: 'absent()', value: 'absent',\n    def: 'absent(v instant-vector)',\n    docText: 'Returns an empty vector if the vector passed to it has any elements and a 1-element vector with the value 1 if the vector passed to it has no elements. This is useful for alerting on when no time series exist for a given metric name and label combination.'\n  },\n  {\n    name: 'ceil()', value: 'ceil',\n    def: 'ceil(v instant-vector)',\n    docText: 'Rounds the sample values of all elements in `v` up to the nearest integer.'\n  },\n  {\n    name: 'changes()', value: 'changes',\n    def: 'changes(v range-vector)',\n    docText: 'For each input time series, `changes(v range-vector)` returns the number of times its value has changed within the provided time range as an instant vector.'\n  },\n  {\n    name: 'clamp_max()', value: 'clamp_max',\n    def: 'clamp_max(v instant-vector, max scalar)',\n    docText: 'Clamps the sample values of all elements in `v` to have an upper limit of `max`.'\n  },\n  {\n    name: 'clamp_min()', value: 'clamp_min',\n    def: 'clamp_min(v instant-vector, min scalar)',\n    docText: 'Clamps the sample values of all elements in `v` to have a lower limit of `min`.'\n  },\n  {\n    name: 'count_scalar()', value: 'count_scalar',\n    def: 'count_scalar(v instant-vector)',\n    docText: 'Returns the number of elements in a time series vector as a scalar. This is in contrast to the `count()` aggregation operator, which always returns a vector (an empty one if the input vector is empty) and allows grouping by labels via a `by` clause.'\n  },\n  {\n    name: 'day_of_month()', value: 'day_of_month',\n    def: 'day_of_month(v=vector(time()) instant-vector)',\n    docText: 'Returns the day of the month for each of the given times in UTC. Returned values are from 1 to 31.'\n  },\n  {\n    name: 'day_of_week()', value: 'day_of_week',\n    def: 'day_of_week(v=vector(time()) instant-vector)',\n    docText: 'Returns the day of the week for each of the given times in UTC. Returned values are from 0 to 6, where 0 means Sunday etc.'\n  },\n  {\n    name: 'days_in_month()', value: 'days_in_month',\n    def: 'days_in_month(v=vector(time()) instant-vector)',\n    docText: 'Returns number of days in the month for each of the given times in UTC. Returned values are from 28 to 31.'\n  },\n  {\n    name: 'delta()', value: 'delta',\n    def: 'delta(v range-vector)',\n    docText: 'Calculates the difference between the first and last value of each time series element in a range vector `v`, returning an instant vector with the given deltas and equivalent labels. The delta is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if the sample values are all integers.'\n  },\n  {\n    name: 'deriv()', value: 'deriv',\n    def: 'deriv(v range-vector)',\n    docText: 'Calculates the per-second derivative of the time series in a range vector `v`, using simple linear regression.'\n  },\n  {\n    name: 'drop_common_labels()', value: 'drop_common_labels',\n    def: 'drop_common_labels(instant-vector)',\n    docText: 'Drops all labels that have the same name and value across all series in the input vector.'\n  },\n  {\n    name: 'exp()', value: 'exp',\n    def: 'exp(v instant-vector)',\n    docText: 'Calculates the exponential function for all elements in `v`.\\nSpecial cases are:\\n* `Exp(+Inf) = +Inf` \\n* `Exp(NaN) = NaN`'\n  },\n  {\n    name: 'floor()', value: 'floor',\n    def: 'floor(v instant-vector)',\n    docText: 'Rounds the sample values of all elements in `v` down to the nearest integer.'\n  },\n  {\n    name: 'histogram_quantile()', value: 'histogram_quantile',\n    def: 'histogram_quantile(φ float, b instant-vector)',\n    docText: 'Calculates the φ-quantile (0 ≤ φ ≤ 1) from the buckets `b` of a histogram. The samples in `b` are the counts of observations in each bucket. Each sample must have a label `le` where the label value denotes the inclusive upper bound of the bucket. (Samples without such a label are silently ignored.) The histogram metric type automatically provides time series with the `_bucket` suffix and the appropriate labels.'\n  },\n  {\n    name: 'holt_winters()', value: 'holt_winters',\n    def: 'holt_winters(v range-vector, sf scalar, tf scalar)',\n    docText: 'Produces a smoothed value for time series based on the range in `v`. The lower the smoothing factor `sf`, the more importance is given to old data. The higher the trend factor `tf`, the more trends in the data is considered. Both `sf` and `tf` must be between 0 and 1.'\n  },\n  {\n    name: 'hour()', value: 'hour',\n    def: 'hour(v=vector(time()) instant-vector)',\n    docText: 'Returns the hour of the day for each of the given times in UTC. Returned values are from 0 to 23.'\n  },\n  {\n    name: 'idelta()', value: 'idelta',\n    def: 'idelta(v range-vector)',\n    docText: 'Calculates the difference between the last two samples in the range vector `v`, returning an instant vector with the given deltas and equivalent labels.'\n  },\n  {\n    name: 'increase()', value: 'increase',\n    def: 'increase(v range-vector)',\n    docText: 'Calculates the increase in the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. The increase is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if a counter increases only by integer increments.'\n  },\n  {\n    name: 'irate()', value: 'irate',\n    def: 'irate(v range-vector)',\n    docText: 'Calculates the per-second instant rate of increase of the time series in the range vector. This is based on the last two data points. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for.'\n  },\n  {\n    name: 'label_replace()', value: 'label_replace',\n    def: 'label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)',\n    docText: 'For each timeseries in `v`, `label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)`  matches the regular expression `regex` against the label `src_label`.  If it matches, then the timeseries is returned with the label `dst_label` replaced by the expansion of `replacement`. `$1` is replaced with the first matching subgroup, `$2` with the second etc. If the regular expression doesn\\'t match then the timeseries is returned unchanged.'\n  },\n  {\n    name: 'ln()', value: 'ln',\n    def: 'ln(v instant-vector)',\n    docText: 'calculates the natural logarithm for all elements in `v`.\\nSpecial cases are:\\n * `ln(+Inf) = +Inf`\\n * `ln(0) = -Inf`\\n * `ln(x < 0) = NaN`\\n * `ln(NaN) = NaN`'\n  },\n  {\n    name: 'log2()', value: 'log2',\n    def: 'log2(v instant-vector)',\n    docText: 'Calculates the binary logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.'\n  },\n  {\n    name: 'log10()', value: 'log10',\n    def: 'log10(v instant-vector)',\n    docText: 'Calculates the decimal logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.'\n  },\n  {\n    name: 'minute()', value: 'minute',\n    def: 'minute(v=vector(time()) instant-vector)',\n    docText: 'Returns the minute of the hour for each of the given times in UTC. Returned values are from 0 to 59.'\n  },\n  {\n    name: 'month()', value: 'month',\n    def: 'month(v=vector(time()) instant-vector)',\n    docText: 'Returns the month of the year for each of the given times in UTC. Returned values are from 1 to 12, where 1 means January etc.'\n  },\n  {\n    name: 'predict_linear()', value: 'predict_linear',\n    def: 'predict_linear(v range-vector, t scalar)',\n    docText: 'Predicts the value of time series `t` seconds from now, based on the range vector `v`, using simple linear regression.'\n  },\n  {\n    name: 'rate()', value: 'rate',\n    def: 'rate(v range-vector)',\n    docText: \"Calculates the per-second average rate of increase of the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. Also, the calculation extrapolates to the ends of the time range, allowing for missed scrapes or imperfect alignment of scrape cycles with the range's time period.\"\n  },\n  {\n    name: 'resets()', value: 'resets',\n    def: 'resets(v range-vector)',\n    docText: 'For each input time series, `resets(v range-vector)` returns the number of counter resets within the provided time range as an instant vector. Any decrease in the value between two consecutive samples is interpreted as a counter reset.'\n  },\n  {\n    name: 'round()', value: 'round',\n    def: 'round(v instant-vector, to_nearest=1 scalar)',\n    docText: 'Rounds the sample values of all elements in `v` to the nearest integer. Ties are resolved by rounding up. The optional `to_nearest` argument allows specifying the nearest multiple to which the sample values should be rounded. This multiple may also be a fraction.'\n  },\n  {\n    name: 'scalar()', value: 'scalar',\n    def: 'scalar(v instant-vector)',\n    docText: 'Given a single-element input vector, `scalar(v instant-vector)` returns the sample value of that single element as a scalar. If the input vector does not have exactly one element, `scalar` will return `NaN`.'\n  },\n  {\n    name: 'sort()', value: 'sort',\n    def: 'sort(v instant-vector)',\n    docText: 'Returns vector elements sorted by their sample values, in ascending order.'\n  },\n  {\n    name: 'sort_desc()', value: 'sort_desc',\n    def: 'sort_desc(v instant-vector)',\n    docText: 'Returns vector elements sorted by their sample values, in descending order.'\n  },\n  {\n    name: 'sqrt()', value: 'sqrt',\n    def: 'sqrt(v instant-vector)',\n    docText: 'Calculates the square root of all elements in `v`.'\n  },\n  {\n    name: 'time()', value: 'time',\n    def: 'time()',\n    docText: 'Returns the number of seconds since January 1, 1970 UTC. Note that this does not actually return the current time, but the time at which the expression is to be evaluated.'\n  },\n  {\n    name: 'vector()', value: 'vector',\n    def: 'vector(s scalar)',\n    docText: 'Returns the scalar `s` as a vector with no labels.'\n  },\n  {\n    name: 'year()', value: 'year',\n    def: 'year(v=vector(time()) instant-vector)',\n    docText: 'Returns the year for each of the given times in UTC.'\n  },\n  {\n    name: 'avg_over_time()', value: 'avg_over_time',\n    def: 'avg_over_time(range-vector)',\n    docText: 'The average value of all points in the specified interval.'\n  },\n  {\n    name: 'min_over_time()', value: 'min_over_time',\n    def: 'min_over_time(range-vector)',\n    docText: 'The minimum value of all points in the specified interval.'\n  },\n  {\n    name: 'max_over_time()', value: 'max_over_time',\n    def: 'max_over_time(range-vector)',\n    docText: 'The maximum value of all points in the specified interval.'\n  },\n  {\n    name: 'sum_over_time()', value: 'sum_over_time',\n    def: 'sum_over_time(range-vector)',\n    docText: 'The sum of all values in the specified interval.'\n  },\n  {\n    name: 'count_over_time()', value: 'count_over_time',\n    def: 'count_over_time(range-vector)',\n    docText: 'The count of all values in the specified interval.'\n  },\n  {\n    name: 'quantile_over_time()', value: 'quantile_over_time',\n    def: 'quantile_over_time(scalar, range-vector)',\n    docText: 'The φ-quantile (0 ≤ φ ≤ 1) of the values in the specified interval.'\n  },\n  {\n    name: 'stddev_over_time()', value: 'stddev_over_time',\n    def: 'stddev_over_time(range-vector)',\n    docText: 'The population standard deviation of the values in the specified interval.'\n  },\n  {\n    name: 'stdvar_over_time()', value: 'stdvar_over_time',\n    def: 'stdvar_over_time(range-vector)',\n    docText: 'The population standard variance of the values in the specified interval.'\n  },\n];\n\nfunction wrapText(str, len) {\n  len = len || 60;\n  var lines = [];\n  var space_index = 0;\n  var line_start = 0;\n  var next_line_end = len;\n  var line = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === ' ') {\n      space_index = i;\n    } else if (i >= next_line_end  && space_index != 0) {\n      line = str.slice(line_start, space_index);\n      lines.push(line);\n      line_start = space_index + 1;\n      next_line_end = i + len;\n      space_index = 0;\n    }\n  }\n  line = str.slice(line_start);\n  lines.push(line);\n  return lines.join(\"&nbsp<br>\");\n}\n\nfunction convertMarkDownTags(text) {\n  text = text.replace(/```(.+)```/, \"<pre>$1</pre>\");\n  text = text.replace(/`([^`]+)`/, \"<code>$1</code>\");\n  return text;\n}\n\nfunction convertToHTML(item) {\n  var docText = lang.escapeHTML(item.docText);\n  docText = convertMarkDownTags(wrapText(docText, 40));\n  return [\n    \"<b>\", lang.escapeHTML(item.def), \"</b>\", \"<hr></hr>\", docText, \"<br>&nbsp\"\n  ].join(\"\");\n}\n\nvar functionsCompletions = prometheusFunctions.map(function(item) {\n  return {\n    caption: item.name,\n    value: item.value,\n    docHTML: convertToHTML(item),\n    meta: \"function\",\n    score: Number.MAX_VALUE\n  };\n});\n\nvar PrometheusCompletions = function() {};\n\n(function() {\n  this.getCompletions = function(state, session, pos, prefix, callback) {\n    var token = session.getTokenAt(pos.row, pos.column);\n    if (token.type === 'entity.name.tag.label-matcher'\n      || token.type === 'string.quoted.label-matcher'\n      || token.type === 'entity.name.tag.label-list-matcher') {\n      return callback(null, []);\n    }\n\n    var completions = keyWordsCompletions.concat(functionsCompletions);\n    callback(null, completions);\n  };\n\n}).call(PrometheusCompletions.prototype);\n\nexports.PrometheusCompletions = PrometheusCompletions;\n});\n\nace.define(\"ace/mode/behaviour/prometheus\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/mode/behaviour/cstyle\",\"ace/token_iterator\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar CstyleBehaviour = require(\"./cstyle\").CstyleBehaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\nfunction getWrapped(selection, selected, opening, closing) {\n  var rowDiff = selection.end.row - selection.start.row;\n  return {\n    text: opening + selected + closing,\n    selection: [\n      0,\n      selection.start.column + 1,\n      rowDiff,\n      selection.end.column + (rowDiff ? 0 : 1)\n    ]\n  };\n};\n\nvar PrometheusBehaviour = function () {\n  this.inherit(CstyleBehaviour);\n\n  // Rewrite default CstyleBehaviour for {} braces\n  this.add(\"braces\", \"insertion\", function(state, action, editor, session, text) {\n    if (text == '{') {\n      var selection = editor.getSelectionRange();\n      var selected = session.doc.getTextRange(selection);\n      if (selected !== \"\" && editor.getWrapBehavioursEnabled()) {\n        return getWrapped(selection, selected, '{', '}');\n      } else if (CstyleBehaviour.isSaneInsertion(editor, session)) {\n        return {\n          text: '{}',\n          selection: [1, 1]\n        };\n      }\n    } else if (text == '}') {\n      var cursor = editor.getCursorPosition();\n      var line = session.doc.getLine(cursor.row);\n      var rightChar = line.substring(cursor.column, cursor.column + 1);\n      if (rightChar == '}') {\n        var matching = session.$findOpeningBracket('}', {column: cursor.column + 1, row: cursor.row});\n        if (matching !== null && CstyleBehaviour.isAutoInsertedClosing(cursor, line, text)) {\n          return {\n            text: '',\n            selection: [1, 1]\n          };\n        }\n      }\n    }\n  });\n\n  this.add(\"braces\", \"deletion\", function(state, action, editor, session, range) {\n    var selected = session.doc.getTextRange(range);\n    if (!range.isMultiLine() && selected == '{') {\n      var line = session.doc.getLine(range.start.row);\n      var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n      if (rightChar == '}') {\n        range.end.column++;\n        return range;\n      }\n    }\n  });\n\n}\noop.inherits(PrometheusBehaviour, CstyleBehaviour);\n\nexports.PrometheusBehaviour = PrometheusBehaviour;\n});\n\nace.define(\"ace/mode/prometheus\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prometheus_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PrometheusHighlightRules = require(\"./prometheus_highlight_rules\").PrometheusHighlightRules;\nvar PrometheusCompletions = require(\"./prometheus_completions\").PrometheusCompletions;\nvar PrometheusBehaviour = require(\"./behaviour/prometheus\").PrometheusBehaviour;\n\nvar Mode = function() {\n  this.HighlightRules = PrometheusHighlightRules;\n  this.$behaviour = new PrometheusBehaviour();\n  this.$completer = new PrometheusCompletions();\n  // replace keyWordCompleter\n  this.completer = this.$completer;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n  this.$id = \"ace/mode/prometheus\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n","import angular from 'angular';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\n\nexport class LinkSrv {\n  /** @ngInject */\n  constructor(private templateSrv, private timeSrv) {}\n\n  getLinkUrl(link) {\n    var url = this.templateSrv.replace(link.url || '');\n    var params = {};\n\n    if (link.keepTime) {\n      var range = this.timeSrv.timeRangeForUrl();\n      params['from'] = range.from;\n      params['to'] = range.to;\n    }\n\n    if (link.includeVars) {\n      this.templateSrv.fillVariableValuesForUrl(params);\n    }\n\n    return this.addParamsToUrl(url, params);\n  }\n\n  addParamsToUrl(url, params) {\n    var paramsArray = [];\n\n    _.each(params, function(value, key) {\n      if (value === null) {\n        return;\n      }\n      if (value === true) {\n        paramsArray.push(key);\n      } else if (_.isArray(value)) {\n        _.each(value, function(instance) {\n          paramsArray.push(key + '=' + encodeURIComponent(instance));\n        });\n      } else {\n        paramsArray.push(key + '=' + encodeURIComponent(value));\n      }\n    });\n\n    if (paramsArray.length === 0) {\n      return url;\n    }\n\n    return this.appendToQueryString(url, paramsArray.join('&'));\n  }\n\n  appendToQueryString(url, stringToAppend) {\n    if (!_.isUndefined(stringToAppend) && stringToAppend !== null && stringToAppend !== '') {\n      var pos = url.indexOf('?');\n      if (pos !== -1) {\n        if (url.length - pos > 1) {\n          url += '&';\n        }\n      } else {\n        url += '?';\n      }\n      url += stringToAppend;\n    }\n\n    return url;\n  }\n\n  getAnchorInfo(link) {\n    var info: any = {};\n    info.href = this.getLinkUrl(link);\n    info.title = this.templateSrv.replace(link.title || '');\n    return info;\n  }\n\n  getPanelLinkAnchorInfo(link, scopedVars) {\n    var info: any = {};\n    if (link.type === 'absolute') {\n      info.target = link.targetBlank ? '_blank' : '_self';\n      info.href = this.templateSrv.replace(link.url || '', scopedVars);\n      info.title = this.templateSrv.replace(link.title || '', scopedVars);\n    } else if (link.dashUri) {\n      info.href = 'dashboard/' + link.dashUri + '?';\n      info.title = this.templateSrv.replace(link.title || '', scopedVars);\n      info.target = link.targetBlank ? '_blank' : '';\n    } else {\n      info.title = this.templateSrv.replace(link.title || '', scopedVars);\n      var slug = kbn.slugifyForUrl(link.dashboard || '');\n      info.href = 'dashboard/db/' + slug + '?';\n    }\n\n    var params = {};\n\n    if (link.keepTime) {\n      var range = this.timeSrv.timeRangeForUrl();\n      params['from'] = range.from;\n      params['to'] = range.to;\n    }\n\n    if (link.includeVars) {\n      this.templateSrv.fillVariableValuesForUrl(params, scopedVars);\n    }\n\n    info.href = this.addParamsToUrl(info.href, params);\n\n    if (link.params) {\n      info.href = this.appendToQueryString(info.href, this.templateSrv.replace(link.params, scopedVars));\n    }\n\n    return info;\n  }\n}\n\nangular.module('grafana.services').service('linkSrv', LinkSrv);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport './link_srv';\n\nfunction panelLinksEditor() {\n  return {\n    scope: {\n      panel: '=',\n    },\n    restrict: 'E',\n    controller: 'PanelLinksEditorCtrl',\n    templateUrl: 'public/app/features/panellinks/module.html',\n    link: function() {},\n  };\n}\n\nexport class PanelLinksEditorCtrl {\n  /** @ngInject */\n  constructor($scope, backendSrv) {\n    $scope.panel.links = $scope.panel.links || [];\n\n    $scope.addLink = function() {\n      $scope.panel.links.push({\n        type: 'dashboard',\n      });\n    };\n\n    $scope.searchDashboards = function(queryStr, callback) {\n      backendSrv.search({ query: queryStr }).then(function(hits) {\n        var dashboards = _.map(hits, function(dash) {\n          return dash.title;\n        });\n\n        callback(dashboards);\n      });\n    };\n\n    $scope.dashboardChanged = function(link) {\n      backendSrv.search({ query: link.dashboard }).then(function(hits) {\n        var dashboard = _.find(hits, { title: link.dashboard });\n        if (dashboard) {\n          link.dashUri = dashboard.uri;\n          link.title = dashboard.title;\n        }\n      });\n    };\n\n    $scope.deleteLink = function(link) {\n      $scope.panel.links = _.without($scope.panel.links, link);\n    };\n  }\n}\n\nangular\n  .module('grafana.directives')\n  .directive('panelLinksEditor', panelLinksEditor)\n  .controller('PanelLinksEditorCtrl', PanelLinksEditorCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport var iconMap = {\n  'external link': 'fa-external-link',\n  dashboard: 'fa-th-large',\n  question: 'fa-question',\n  info: 'fa-info',\n  bolt: 'fa-bolt',\n  doc: 'fa-file-text-o',\n  cloud: 'fa-cloud',\n};\n\nexport class DashLinkEditorCtrl {\n  dashboard: any;\n  iconMap: any;\n  mode: any;\n  link: any;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    this.iconMap = iconMap;\n    this.dashboard.links = this.dashboard.links || [];\n    this.mode = 'list';\n\n    $scope.$on('$destroy', () => {\n      $rootScope.appEvent('dash-links-updated');\n    });\n  }\n\n  backToList() {\n    this.mode = 'list';\n  }\n\n  setupNew() {\n    this.mode = 'new';\n    this.link = { type: 'dashboards', icon: 'external link' };\n  }\n\n  addLink() {\n    this.dashboard.links.push(this.link);\n    this.mode = 'list';\n  }\n\n  editLink(link) {\n    this.link = link;\n    this.mode = 'edit';\n    console.log(this.link);\n  }\n\n  saveLink() {\n    this.backToList();\n  }\n\n  moveLink(index, dir) {\n    _.move(this.dashboard.links, index, index + dir);\n  }\n\n  deleteLink(index) {\n    this.dashboard.links.splice(index, 1);\n    this.dashboard.updateSubmenuVisibility();\n  }\n}\n\nfunction dashLinksEditor() {\n  return {\n    restrict: 'E',\n    controller: DashLinkEditorCtrl,\n    templateUrl: 'public/app/features/dashlinks/editor.html',\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('dashLinksEditor', dashLinksEditor);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport { iconMap } from './editor';\n\nfunction dashLinksContainer() {\n  return {\n    scope: {\n      links: '=',\n    },\n    restrict: 'E',\n    controller: 'DashLinksContainerCtrl',\n    template: '<dash-link ng-repeat=\"link in generatedLinks\" link=\"link\"></dash-link>',\n    link: function() {},\n  };\n}\n\n/** @ngInject */\nfunction dashLink($compile, $sanitize, linkSrv) {\n  return {\n    restrict: 'E',\n    link: function(scope, elem) {\n      var link = scope.link;\n      var template =\n        '<div class=\"gf-form\">' +\n        '<a class=\"pointer gf-form-label\" data-placement=\"bottom\"' +\n        (link.asDropdown ? ' ng-click=\"fillDropdown(link)\" data-toggle=\"dropdown\"' : '') +\n        '>' +\n        '<i></i> <span></span></a>';\n\n      if (link.asDropdown) {\n        template +=\n          '<ul class=\"dropdown-menu\" role=\"menu\">' +\n          '<li ng-repeat=\"dash in link.searchHits\">' +\n          '<a href=\"{{dash.url}}\" target=\"{{dash.target}}\">{{dash.title}}</a>' +\n          '</li>' +\n          '</ul>';\n      }\n\n      template += '</div>';\n\n      elem.html(template);\n      $compile(elem.contents())(scope);\n\n      function update() {\n        var linkInfo = linkSrv.getAnchorInfo(link);\n\n        const anchor = elem.find('a');\n        const span = elem.find('span');\n        span.text(linkInfo.title);\n\n        if (!link.asDropdown) {\n          anchor.attr('href', linkInfo.href);\n          sanitizeAnchor();\n        }\n        anchor.attr('data-placement', 'bottom');\n        // tooltip\n        anchor.tooltip({\n          title: $sanitize(scope.link.tooltip),\n          html: true,\n          container: 'body',\n        });\n      }\n\n      function sanitizeAnchor() {\n        const anchor = elem.find('a');\n        const anchorSanitized = $sanitize(anchor.parent().html());\n        anchor.parent().html(anchorSanitized);\n      }\n\n      elem.find('i').attr('class', 'fa fa-fw ' + scope.link.icon);\n      elem.find('a').attr('target', scope.link.target);\n\n      // fix for menus on the far right\n      if (link.asDropdown && scope.$last) {\n        elem.find('.dropdown-menu').addClass('pull-right');\n      }\n\n      update();\n      scope.$on('refresh', update);\n    },\n  };\n}\n\nexport class DashLinksContainerCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope, $q, backendSrv, dashboardSrv, linkSrv) {\n    var currentDashId = dashboardSrv.getCurrent().id;\n\n    function buildLinks(linkDef) {\n      if (linkDef.type === 'dashboards') {\n        if (!linkDef.tags) {\n          console.log('Dashboard link missing tag');\n          return $q.when([]);\n        }\n\n        if (linkDef.asDropdown) {\n          return $q.when([\n            {\n              title: linkDef.title,\n              tags: linkDef.tags,\n              keepTime: linkDef.keepTime,\n              includeVars: linkDef.includeVars,\n              target: linkDef.targetBlank ? '_blank' : '_self',\n              icon: 'fa fa-bars',\n              asDropdown: true,\n            },\n          ]);\n        }\n\n        return $scope.searchDashboards(linkDef, 7);\n      }\n\n      if (linkDef.type === 'link') {\n        return $q.when([\n          {\n            url: linkDef.url,\n            title: linkDef.title,\n            icon: iconMap[linkDef.icon],\n            tooltip: linkDef.tooltip,\n            target: linkDef.targetBlank ? '_blank' : '_self',\n            keepTime: linkDef.keepTime,\n            includeVars: linkDef.includeVars,\n          },\n        ]);\n      }\n\n      return $q.when([]);\n    }\n\n    function updateDashLinks() {\n      var promises = _.map($scope.links, buildLinks);\n\n      $q.all(promises).then(function(results) {\n        $scope.generatedLinks = _.flatten(results);\n      });\n    }\n\n    $scope.searchDashboards = function(link, limit) {\n      return backendSrv.search({ tag: link.tags, limit: limit }).then(function(results) {\n        return _.reduce(\n          results,\n          function(memo, dash) {\n            // do not add current dashboard\n            if (dash.id !== currentDashId) {\n              memo.push({\n                title: dash.title,\n                url: 'dashboard/' + dash.uri,\n                target: link.target,\n                icon: 'fa fa-th-large',\n                keepTime: link.keepTime,\n                includeVars: link.includeVars,\n              });\n            }\n            return memo;\n          },\n          []\n        );\n      });\n    };\n\n    $scope.fillDropdown = function(link) {\n      $scope.searchDashboards(link, 100).then(function(results) {\n        _.each(results, function(hit) {\n          hit.url = linkSrv.getLinkUrl(hit);\n        });\n        link.searchHits = results;\n      });\n    };\n\n    updateDashLinks();\n    $rootScope.onAppEvent('dash-links-updated', updateDashLinks, $scope);\n  }\n}\n\nangular.module('grafana.directives').directive('dashLinksContainer', dashLinksContainer);\nangular.module('grafana.directives').directive('dashLink', dashLink);\nangular.module('grafana.directives').controller('DashLinksContainerCtrl', DashLinksContainerCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\n\nexport class AnnotationsEditorCtrl {\n  mode: any;\n  datasources: any;\n  annotations: any;\n  currentAnnotation: any;\n  currentDatasource: any;\n  currentIsNew: any;\n\n  annotationDefaults: any = {\n    name: '',\n    datasource: null,\n    iconColor: 'rgba(255, 96, 96, 1)',\n    enable: true,\n    showIn: 0,\n    hide: false,\n  };\n\n  showOptions: any = [{ text: '所有面板', value: 0 }, { text: '指定面板', value: 1 }];\n\n  /** @ngInject */\n  constructor($scope, private datasourceSrv) {\n    $scope.ctrl = this;\n\n    this.mode = 'list';\n    this.datasources = datasourceSrv.getAnnotationSources();\n    this.annotations = $scope.dashboard.annotations.list;\n    this.reset();\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  datasourceChanged() {\n    return this.datasourceSrv.get(this.currentAnnotation.datasource).then(ds => {\n      this.currentDatasource = ds;\n    });\n  }\n\n  edit(annotation) {\n    this.currentAnnotation = annotation;\n    this.currentAnnotation.showIn = this.currentAnnotation.showIn || 0;\n    this.currentIsNew = false;\n    this.datasourceChanged();\n    this.mode = 'edit';\n    $('.tooltip.in').remove();\n  }\n\n  reset() {\n    this.currentAnnotation = angular.copy(this.annotationDefaults);\n    this.currentAnnotation.datasource = this.datasources[0].name;\n    this.currentIsNew = true;\n    this.datasourceChanged();\n  }\n\n  update() {\n    this.reset();\n    this.mode = 'list';\n  }\n\n  setupNew() {\n    this.mode = 'new';\n    this.reset();\n  }\n\n  backToList() {\n    this.mode = 'list';\n  }\n\n  move(index, dir) {\n    _.move(this.annotations, index, index + dir);\n  }\n\n  add() {\n    this.annotations.push(this.currentAnnotation);\n    this.reset();\n    this.mode = 'list';\n  }\n\n  removeAnnotation(annotation) {\n    var index = _.indexOf(this.annotations, annotation);\n    this.annotations.splice(index, 1);\n  }\n\n  onColorChange(newColor) {\n    this.currentAnnotation.iconColor = newColor;\n  }\n}\n\ncoreModule.controller('AnnotationsEditorCtrl', AnnotationsEditorCtrl);\n","import _ from 'lodash';\n\n/**\n * This function converts annotation events into set\n * of single events and regions (event consist of two)\n * @param annotations\n * @param options\n */\nexport function makeRegions(annotations, options) {\n  let [regionEvents, singleEvents] = _.partition(annotations, 'regionId');\n  let regions = getRegions(regionEvents, options.range);\n  annotations = _.concat(regions, singleEvents);\n  return annotations;\n}\n\nfunction getRegions(events, range) {\n  let region_events = _.filter(events, event => {\n    return event.regionId;\n  });\n  let regions = _.groupBy(region_events, 'regionId');\n  regions = _.compact(\n    _.map(regions, region_events => {\n      let region_obj = _.head(region_events);\n      if (region_events && region_events.length > 1) {\n        region_obj.timeEnd = region_events[1].time;\n        region_obj.isRegion = true;\n        return region_obj;\n      } else {\n        if (region_events && region_events.length) {\n          // Don't change proper region object\n          if (!region_obj.time || !region_obj.timeEnd) {\n            // This is cut region\n            if (isStartOfRegion(region_obj)) {\n              region_obj.timeEnd = range.to.valueOf() - 1;\n            } else {\n              // Start time = null\n              region_obj.timeEnd = region_obj.time;\n              region_obj.time = range.from.valueOf() + 1;\n            }\n            region_obj.isRegion = true;\n          }\n\n          return region_obj;\n        }\n      }\n    })\n  );\n\n  return regions;\n}\n\nfunction isStartOfRegion(event): boolean {\n  return event.id && event.id === event.regionId;\n}\n\nexport function dedupAnnotations(annotations) {\n  let dedup = [];\n\n  // Split events by annotationId property existence\n  let events = _.partition(annotations, 'id');\n\n  let eventsById = _.groupBy(events[0], 'id');\n  dedup = _.map(eventsById, eventGroup => {\n    if (eventGroup.length > 1 && !_.every(eventGroup, isPanelAlert)) {\n      // Get first non-panel alert\n      return _.find(eventGroup, event => {\n        return event.eventType !== 'panel-alert';\n      });\n    } else {\n      return _.head(eventGroup);\n    }\n  });\n\n  dedup = _.concat(dedup, events[1]);\n  return dedup;\n}\n\nfunction isPanelAlert(event) {\n  return event.eventType === 'panel-alert';\n}\n","import './editor_ctrl';\n\nimport angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { makeRegions, dedupAnnotations } from './events_processing';\n\nexport class AnnotationsSrv {\n  globalAnnotationsPromise: any;\n  alertStatesPromise: any;\n\n  /** @ngInject */\n  constructor(private $rootScope, private $q, private datasourceSrv, private backendSrv, private timeSrv) {\n    $rootScope.onAppEvent('refresh', this.clearCache.bind(this), $rootScope);\n    $rootScope.onAppEvent('dashboard-initialized', this.clearCache.bind(this), $rootScope);\n  }\n\n  clearCache() {\n    this.globalAnnotationsPromise = null;\n    this.alertStatesPromise = null;\n  }\n\n  getAnnotations(options) {\n    return this.$q\n      .all([this.getGlobalAnnotations(options), this.getAlertStates(options)])\n      .then(results => {\n        // combine the annotations and flatten results\n        var annotations = _.flattenDeep(results[0]);\n\n        // filter out annotations that do not belong to requesting panel\n        annotations = _.filter(annotations, item => {\n          // if event has panel id and query is of type dashboard then panel and requesting panel id must match\n          if (item.panelId && item.source.type === 'dashboard') {\n            return item.panelId === options.panel.id;\n          }\n          return true;\n        });\n\n        annotations = dedupAnnotations(annotations);\n        annotations = makeRegions(annotations, options);\n\n        // look for alert state for this panel\n        var alertState = _.find(results[1], { panelId: options.panel.id });\n\n        return {\n          annotations: annotations,\n          alertState: alertState,\n        };\n      })\n      .catch(err => {\n        if (!err.message && err.data && err.data.message) {\n          err.message = err.data.message;\n        }\n        console.log('AnnotationSrv.query error', err);\n        this.$rootScope.appEvent('alert-error', ['注释查询失败', err.message || err]);\n        return [];\n      });\n  }\n\n  getAlertStates(options) {\n    if (!options.dashboard.id) {\n      return this.$q.when([]);\n    }\n\n    // ignore if no alerts\n    if (options.panel && !options.panel.alert) {\n      return this.$q.when([]);\n    }\n\n    if (options.range.raw.to !== 'now') {\n      return this.$q.when([]);\n    }\n\n    if (this.alertStatesPromise) {\n      return this.alertStatesPromise;\n    }\n\n    this.alertStatesPromise = this.backendSrv.get('/api/alerts/states-for-dashboard', {\n      dashboardId: options.dashboard.id,\n    });\n    return this.alertStatesPromise;\n  }\n\n  getGlobalAnnotations(options) {\n    var dashboard = options.dashboard;\n\n    if (this.globalAnnotationsPromise) {\n      return this.globalAnnotationsPromise;\n    }\n\n    var range = this.timeSrv.timeRange();\n    var promises = [];\n\n    for (let annotation of dashboard.annotations.list) {\n      if (!annotation.enable) {\n        continue;\n      }\n\n      if (annotation.snapshotData) {\n        return this.translateQueryResult(annotation, annotation.snapshotData);\n      }\n\n      promises.push(\n        this.datasourceSrv\n          .get(annotation.datasource)\n          .then(datasource => {\n            // issue query against data source\n            return datasource.annotationQuery({\n              range: range,\n              rangeRaw: range.raw,\n              annotation: annotation,\n              dashboard: dashboard,\n            });\n          })\n          .then(results => {\n            // store response in annotation object if this is a snapshot call\n            if (dashboard.snapshot) {\n              annotation.snapshotData = angular.copy(results);\n            }\n            // translate result\n            return this.translateQueryResult(annotation, results);\n          })\n      );\n    }\n\n    this.globalAnnotationsPromise = this.$q.all(promises);\n    return this.globalAnnotationsPromise;\n  }\n\n  saveAnnotationEvent(annotation) {\n    this.globalAnnotationsPromise = null;\n    return this.backendSrv.post('/api/annotations', annotation);\n  }\n\n  updateAnnotationEvent(annotation) {\n    this.globalAnnotationsPromise = null;\n    return this.backendSrv.put(`/api/annotations/${annotation.id}`, annotation);\n  }\n\n  deleteAnnotationEvent(annotation) {\n    this.globalAnnotationsPromise = null;\n    let deleteUrl = `/api/annotations/${annotation.id}`;\n    if (annotation.isRegion) {\n      deleteUrl = `/api/annotations/region/${annotation.regionId}`;\n    }\n\n    return this.backendSrv.delete(deleteUrl);\n  }\n\n  translateQueryResult(annotation, results) {\n    // if annotation has snapshotData\n    // make clone and remove it\n    if (annotation.snapshotData) {\n      annotation = angular.copy(annotation);\n      delete annotation.snapshotData;\n    }\n\n    for (var item of results) {\n      item.source = annotation;\n    }\n    return results;\n  }\n}\n\ncoreModule.service('annotationsSrv', AnnotationsSrv);\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { coreModule } from 'app/core/core';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationEvent } from './event';\n\nexport class EventEditorCtrl {\n  panelCtrl: MetricsPanelCtrl;\n  event: AnnotationEvent;\n  timeRange: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated: string;\n\n  /** @ngInject **/\n  constructor(private annotationsSrv) {\n    this.event.panelId = this.panelCtrl.panel.id;\n    this.event.dashboardId = this.panelCtrl.dashboard.id;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time);\n  }\n\n  save() {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    let saveModel = _.cloneDeep(this.event);\n    saveModel.time = saveModel.time.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    if (saveModel.id) {\n      this.annotationsSrv\n        .updateAnnotationEvent(saveModel)\n        .then(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        })\n        .catch(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        });\n    } else {\n      this.annotationsSrv\n        .saveAnnotationEvent(saveModel)\n        .then(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        })\n        .catch(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        });\n    }\n  }\n\n  delete() {\n    return this.annotationsSrv\n      .deleteAnnotationEvent(this.event)\n      .then(() => {\n        this.panelCtrl.refresh();\n        this.close();\n      })\n      .catch(() => {\n        this.panelCtrl.refresh();\n        this.close();\n      });\n  }\n}\n\nfunction tryEpochToMoment(timestamp) {\n  if (timestamp && _.isNumber(timestamp)) {\n    let epoch = Number(timestamp);\n    return moment(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n","export class AnnotationEvent {\n  dashboardId: number;\n  panelId: number;\n  userId: number;\n  time: any;\n  timeEnd: any;\n  isRegion: boolean;\n  text: string;\n  type: string;\n  tags: string;\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport tinycolor from 'tinycolor2';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationEvent } from './event';\nimport {\n  OK_COLOR,\n  ALERTING_COLOR,\n  NO_DATA_COLOR,\n  DEFAULT_ANNOTATION_COLOR,\n  REGION_FILL_ALPHA,\n} from 'app/core/utils/colors';\n\nexport class EventManager {\n  event: AnnotationEvent;\n  editorOpen: boolean;\n\n  constructor(private panelCtrl: MetricsPanelCtrl) {}\n\n  editorClosed() {\n    this.event = null;\n    this.editorOpen = false;\n    this.panelCtrl.render();\n  }\n\n  editorOpened() {\n    this.editorOpen = true;\n  }\n\n  updateTime(range) {\n    if (!this.event) {\n      this.event = new AnnotationEvent();\n      this.event.dashboardId = this.panelCtrl.dashboard.id;\n      this.event.panelId = this.panelCtrl.panel.id;\n    }\n\n    // update time\n    this.event.time = moment(range.from);\n    this.event.isRegion = false;\n    if (range.to) {\n      this.event.timeEnd = moment(range.to);\n      this.event.isRegion = true;\n    }\n\n    this.panelCtrl.render();\n  }\n\n  editEvent(event, elem?) {\n    this.event = event;\n    this.panelCtrl.render();\n  }\n\n  addFlotEvents(annotations, flotOptions) {\n    if (!this.event && annotations.length === 0) {\n      return;\n    }\n\n    var types = {\n      $__alerting: {\n        color: ALERTING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__ok: {\n        color: OK_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__no_data: {\n        color: NO_DATA_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__editing: {\n        color: DEFAULT_ANNOTATION_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n    };\n\n    if (this.event) {\n      if (this.event.isRegion) {\n        annotations = [\n          {\n            isRegion: true,\n            min: this.event.time.valueOf(),\n            timeEnd: this.event.timeEnd.valueOf(),\n            text: this.event.text,\n            eventType: '$__editing',\n            editModel: this.event,\n          },\n        ];\n      } else {\n        annotations = [\n          {\n            min: this.event.time.valueOf(),\n            text: this.event.text,\n            editModel: this.event,\n            eventType: '$__editing',\n          },\n        ];\n      }\n    } else {\n      // annotations from query\n      for (var i = 0; i < annotations.length; i++) {\n        var item = annotations[i];\n\n        // add properties used by jquery flot events\n        item.min = item.time;\n        item.max = item.time;\n        item.eventType = item.source.name;\n\n        if (item.newState) {\n          item.eventType = '$__' + item.newState;\n          continue;\n        }\n\n        if (!types[item.source.name]) {\n          types[item.source.name] = {\n            color: item.source.iconColor,\n            position: 'BOTTOM',\n            markerSize: 5,\n          };\n        }\n      }\n    }\n\n    let regions = getRegions(annotations);\n    addRegionMarking(regions, flotOptions);\n\n    let eventSectionHeight = 20;\n    let eventSectionMargin = 7;\n    flotOptions.grid.eventSectionHeight = eventSectionMargin;\n    flotOptions.xaxis.eventSectionHeight = eventSectionHeight;\n\n    flotOptions.events = {\n      levels: _.keys(types).length + 1,\n      data: annotations,\n      types: types,\n      manager: this,\n    };\n  }\n}\n\nfunction getRegions(events) {\n  return _.filter(events, 'isRegion');\n}\n\nfunction addRegionMarking(regions, flotOptions) {\n  let markings = flotOptions.grid.markings;\n  let defaultColor = DEFAULT_ANNOTATION_COLOR;\n  let fillColor;\n\n  _.each(regions, region => {\n    if (region.source) {\n      fillColor = region.source.iconColor || defaultColor;\n    } else {\n      fillColor = defaultColor;\n    }\n\n    fillColor = addAlphaToRGB(fillColor, REGION_FILL_ALPHA);\n    markings.push({\n      xaxis: { from: region.min, to: region.timeEnd },\n      color: fillColor,\n    });\n  });\n}\n\nfunction addAlphaToRGB(colorString: string, alpha: number): string {\n  let color = tinycolor(colorString);\n  if (color.isValid()) {\n    color.setAlpha(alpha);\n    return color.toRgbString();\n  } else {\n    return colorString;\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport alertDef from '../alerting/alert_def';\n\n/** @ngInject **/\nexport function annotationTooltipDirective($sanitize, dashboardSrv, contextSrv, $compile) {\n  function sanitizeString(str) {\n    try {\n      return $sanitize(str);\n    } catch (err) {\n      console.log('Could not sanitize annotation string, html escaping instead');\n      return _.escape(str);\n    }\n  }\n\n  return {\n    restrict: 'E',\n    scope: {\n      event: '=',\n      onEdit: '&',\n    },\n    link: function(scope, element) {\n      var event = scope.event;\n      var title = event.title;\n      var text = event.text;\n      var dashboard = dashboardSrv.getCurrent();\n\n      var tooltip = '<div class=\"graph-annotation\">';\n      var titleStateClass = '';\n\n      if (event.alertId) {\n        var stateModel = alertDef.getStateDisplayModel(event.newState);\n        titleStateClass = stateModel.stateClass;\n        title = `<i class=\"icon-gf ${stateModel.iconClass}\"></i> ${stateModel.text}`;\n        text = alertDef.getAlertAnnotationInfo(event);\n        if (event.text) {\n          text = text + '<br />' + event.text;\n        }\n      } else if (title) {\n        text = title + '<br />' + (_.isString(text) ? text : '');\n        title = '';\n      }\n\n      var header = `<div class=\"graph-annotation__header\">`;\n      if (event.login) {\n        header += `<div class=\"graph-annotation__user\" bs-tooltip=\"'由${event.login}创建'\"><img src=\"${\n          event.avatarUrl\n        }\" /></div>`;\n      }\n      header += `\n          <span class=\"graph-annotation__title ${titleStateClass}\">${sanitizeString(title)}</span>\n          <span class=\"graph-annotation__time\">${dashboard.formatDate(event.min)}</span>\n      `;\n\n      // Show edit icon only for users with at least Editor role\n      if (event.id && dashboard.meta.canEdit) {\n        header += `\n          <span class=\"pointer graph-annotation__edit-icon\" ng-click=\"onEdit()\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </span>\n        `;\n      }\n\n      header += `</div>`;\n      tooltip += header;\n      tooltip += '<div class=\"graph-annotation__body\">';\n\n      if (text) {\n        tooltip += '<div>' + sanitizeString(text.replace(/\\n/g, '<br>')) + '</div>';\n      }\n\n      var tags = event.tags;\n\n      if (tags && tags.length) {\n        scope.tags = tags;\n        tooltip +=\n          '<span class=\"label label-tag small\" ng-repeat=\"tag in tags\" tag-color-from-name=\"tag\">{{tag}}</span><br/>';\n      }\n\n      tooltip += '</div>';\n      tooltip += '</div>';\n\n      var $tooltip = $(tooltip);\n      $tooltip.appendTo(element);\n\n      $compile(element.contents())(scope);\n    },\n  };\n}\n\ncoreModule.directive('annotationTooltip', annotationTooltipDirective);\n","import { AnnotationsSrv } from './annotations_srv';\nimport { eventEditor } from './event_editor';\nimport { EventManager } from './event_manager';\nimport { AnnotationEvent } from './event';\nimport { annotationTooltipDirective } from './annotation_tooltip';\n\nexport { AnnotationsSrv, eventEditor, EventManager, AnnotationEvent, annotationTooltipDirective };\n","import kbn from 'app/core/utils/kbn';\nimport { assignModelProperties } from 'app/core/utils/model_utils';\n\nexport interface Variable {\n  setValue(option);\n  updateOptions();\n  dependsOn(variable);\n  setValueFromUrl(urlValue);\n  getValueForUrl();\n  getSaveModel();\n}\n\nexport var variableTypes = {};\nexport { assignModelProperties };\n\nexport function containsVariable(...args: any[]) {\n  var variableName = args[args.length - 1];\n  var str = args[0] || '';\n\n  for (var i = 1; i < args.length - 1; i++) {\n    str += ' ' + args[i] || '';\n  }\n\n  variableName = kbn.regexEscape(variableName);\n  var findVarRegex = new RegExp('\\\\$(' + variableName + ')(?:\\\\W|$)|\\\\[\\\\[(' + variableName + ')\\\\]\\\\]', 'g');\n  var match = findVarRegex.exec(str);\n  return match !== null;\n}\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { variableTypes } from './variable';\nimport appEvents from 'app/core/app_events';\n\nexport class VariableEditorCtrl {\n  /** @ngInject **/\n  constructor($scope, datasourceSrv, variableSrv, templateSrv) {\n    $scope.variableTypes = variableTypes;\n    $scope.ctrl = {};\n    $scope.namePattern = /^(?!__).*$/;\n    $scope._ = _;\n    $scope.optionsLimit = 20;\n\n    $scope.refreshOptions = [\n      { value: 0, text: '从不' },\n      { value: 1, text: '仪表板加载时' },\n      { value: 2, text: '时间区间改变时' },\n    ];\n\n    $scope.sortOptions = [\n      { value: 0, text: '关闭' },\n      { value: 1, text: '按字母顺序排列(升序)' },\n      { value: 2, text: '按字母顺序排列(降序)' },\n      { value: 3, text: '按数值排列(升序)' },\n      { value: 4, text: '按数值排列(降序)' },\n      { value: 5, text: '按字母顺序排列(不区分大小写, 升序)' },\n      { value: 6, text: '按字母顺序排列(不区分大小写, 降序)' },\n    ];\n\n    $scope.hideOptions = [{ value: 0, text: '' }, { value: 1, text: '标签' }, { value: 2, text: '变量' }];\n\n    $scope.init = function() {\n      $scope.mode = 'list';\n\n      $scope.variables = variableSrv.variables;\n      $scope.reset();\n\n      $scope.$watch('mode', function(val) {\n        if (val === 'new') {\n          $scope.reset();\n        }\n      });\n    };\n\n    $scope.setMode = function(mode) {\n      $scope.mode = mode;\n    };\n\n    $scope.add = function() {\n      if ($scope.isValid()) {\n        variableSrv.addVariable($scope.current);\n        $scope.update();\n      }\n    };\n\n    $scope.isValid = function() {\n      if (!$scope.ctrl.form.$valid) {\n        return false;\n      }\n\n      if (!$scope.current.name.match(/^\\w+$/)) {\n        appEvents.emit('alert-warning', ['Validation', '变量名中只允许使用单词和数字字符']);\n        return false;\n      }\n\n      var sameName = _.find($scope.variables, { name: $scope.current.name });\n      if (sameName && sameName !== $scope.current) {\n        appEvents.emit('alert-warning', ['Validation', '已存在同名的变量']);\n        return false;\n      }\n\n      if (\n        $scope.current.type === 'query' &&\n        $scope.current.query.match(new RegExp('\\\\$' + $scope.current.name + '(/| |$)'))\n      ) {\n        appEvents.emit('alert-warning', [\n          'Validation',\n          '查询不能包含对自身的引用。 变量: $' + $scope.current.name,\n        ]);\n        return false;\n      }\n\n      return true;\n    };\n\n    $scope.validate = function() {\n      $scope.infoText = '';\n      if ($scope.current.type === 'adhoc' && $scope.current.datasource !== null) {\n        $scope.infoText = 'Adhoc过滤器会自动应用于所有以此数据源为目标的查询';\n        datasourceSrv.get($scope.current.datasource).then(ds => {\n          if (!ds.getTagKeys) {\n            $scope.infoText = '此数据源尚不支持adhoc过滤器。';\n          }\n        });\n      }\n    };\n\n    $scope.runQuery = function() {\n      $scope.optionsLimit = 20;\n      return variableSrv.updateOptions($scope.current).catch(err => {\n        if (err.data && err.data.message) {\n          err.message = err.data.message;\n        }\n        appEvents.emit('alert-error', ['Templating', '无法初始化模板变量: ' + err.message]);\n      });\n    };\n\n    $scope.edit = function(variable) {\n      $scope.current = variable;\n      $scope.currentIsNew = false;\n      $scope.mode = 'edit';\n      $scope.validate();\n    };\n\n    $scope.duplicate = function(variable) {\n      var clone = _.cloneDeep(variable.getSaveModel());\n      $scope.current = variableSrv.createVariableFromModel(clone);\n      $scope.current.name = 'copy_of_' + variable.name;\n      variableSrv.addVariable($scope.current);\n    };\n\n    $scope.update = function() {\n      if ($scope.isValid()) {\n        $scope.runQuery().then(function() {\n          $scope.reset();\n          $scope.mode = 'list';\n          templateSrv.updateTemplateData();\n        });\n      }\n    };\n\n    $scope.reset = function() {\n      $scope.currentIsNew = true;\n      $scope.current = variableSrv.createVariableFromModel({ type: 'query' });\n\n      // this is done here in case a new data source type variable was added\n      $scope.datasources = _.filter(datasourceSrv.getMetricSources(), function(ds) {\n        return !ds.meta.mixed && ds.value !== null;\n      });\n\n      $scope.datasourceTypes = _($scope.datasources)\n        .uniqBy('meta.id')\n        .map(function(ds) {\n          return { text: ds.meta.name, value: ds.meta.id };\n        })\n        .value();\n    };\n\n    $scope.typeChanged = function() {\n      var old = $scope.current;\n      $scope.current = variableSrv.createVariableFromModel({\n        type: $scope.current.type,\n      });\n      $scope.current.name = old.name;\n      $scope.current.hide = old.hide;\n      $scope.current.label = old.label;\n\n      var oldIndex = _.indexOf(this.variables, old);\n      if (oldIndex !== -1) {\n        this.variables[oldIndex] = $scope.current;\n      }\n\n      $scope.validate();\n    };\n\n    $scope.removeVariable = function(variable) {\n      variableSrv.removeVariable(variable);\n    };\n\n    $scope.showMoreOptions = function() {\n      $scope.optionsLimit += 20;\n    };\n  }\n}\n\ncoreModule.controller('VariableEditorCtrl', VariableEditorCtrl);\n","import kbn from 'app/core/utils/kbn';\nimport _ from 'lodash';\n\nfunction luceneEscape(value) {\n  return value.replace(/([\\!\\*\\+\\-\\=<>\\s\\&\\|\\(\\)\\[\\]\\{\\}\\^\\~\\?\\:\\\\/\"])/g, '\\\\$1');\n}\n\nexport class TemplateSrv {\n  variables: any[];\n\n  /*\n   * This regex matches 3 types of variable reference with an optional format specifier\n   * \\$(\\w+)                          $var1\n   * \\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]    [[var2]] or [[var2:fmt2]]\n   * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n   */\n  private regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?::(\\w+))?}/g;\n  private index = {};\n  private grafanaVariables = {};\n  private builtIns = {};\n\n  constructor() {\n    this.builtIns['__interval'] = { text: '1s', value: '1s' };\n    this.builtIns['__interval_ms'] = { text: '100', value: '100' };\n  }\n\n  init(variables) {\n    this.variables = variables;\n    this.updateTemplateData();\n  }\n\n  updateTemplateData() {\n    this.index = {};\n\n    for (var i = 0; i < this.variables.length; i++) {\n      var variable = this.variables[i];\n\n      if (!variable.current || (!variable.current.isNone && !variable.current.value)) {\n        continue;\n      }\n\n      this.index[variable.name] = variable;\n    }\n  }\n\n  variableInitialized(variable) {\n    this.index[variable.name] = variable;\n  }\n\n  getAdhocFilters(datasourceName) {\n    var filters = [];\n\n    for (var i = 0; i < this.variables.length; i++) {\n      var variable = this.variables[i];\n      if (variable.type !== 'adhoc') {\n        continue;\n      }\n\n      if (variable.datasource === datasourceName) {\n        filters = filters.concat(variable.filters);\n      }\n\n      if (variable.datasource.indexOf('$') === 0) {\n        if (this.replace(variable.datasource) === datasourceName) {\n          filters = filters.concat(variable.filters);\n        }\n      }\n    }\n\n    return filters;\n  }\n\n  luceneFormat(value) {\n    if (typeof value === 'string') {\n      return luceneEscape(value);\n    }\n    if (value instanceof Array && value.length === 0) {\n      return '__empty__';\n    }\n    var quotedValues = _.map(value, function(val) {\n      return '\"' + luceneEscape(val) + '\"';\n    });\n    return '(' + quotedValues.join(' OR ') + ')';\n  }\n\n  formatValue(value, format, variable) {\n    // for some scopedVars there is no variable\n    variable = variable || {};\n\n    if (typeof format === 'function') {\n      return format(value, variable, this.formatValue);\n    }\n\n    switch (format) {\n      case 'regex': {\n        if (typeof value === 'string') {\n          return kbn.regexEscape(value);\n        }\n\n        var escapedValues = _.map(value, kbn.regexEscape);\n        if (escapedValues.length === 1) {\n          return escapedValues[0];\n        }\n        return '(' + escapedValues.join('|') + ')';\n      }\n      case 'lucene': {\n        return this.luceneFormat(value);\n      }\n      case 'pipe': {\n        if (typeof value === 'string') {\n          return value;\n        }\n        return value.join('|');\n      }\n      case 'distributed': {\n        if (typeof value === 'string') {\n          return value;\n        }\n        return this.distributeVariable(value, variable.name);\n      }\n      case 'csv': {\n        if (_.isArray(value)) {\n          return value.join(',');\n        }\n        return value;\n      }\n      default: {\n        if (_.isArray(value)) {\n          return '{' + value.join(',') + '}';\n        }\n        return value;\n      }\n    }\n  }\n\n  setGrafanaVariable(name, value) {\n    this.grafanaVariables[name] = value;\n  }\n\n  getVariableName(expression) {\n    this.regex.lastIndex = 0;\n    var match = this.regex.exec(expression);\n    if (!match) {\n      return null;\n    }\n    return match[1] || match[2];\n  }\n\n  variableExists(expression) {\n    var name = this.getVariableName(expression);\n    return name && this.index[name] !== void 0;\n  }\n\n  highlightVariablesAsHtml(str) {\n    if (!str || !_.isString(str)) {\n      return str;\n    }\n\n    str = _.escape(str);\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, (match, var1, var2, fmt2, var3) => {\n      if (this.index[var1 || var2 || var3] || this.builtIns[var1 || var2 || var3]) {\n        return '<span class=\"template-variable\">' + match + '</span>';\n      }\n      return match;\n    });\n  }\n\n  getAllValue(variable) {\n    if (variable.allValue) {\n      return variable.allValue;\n    }\n    var values = [];\n    for (var i = 1; i < variable.options.length; i++) {\n      values.push(variable.options[i].value);\n    }\n    return values;\n  }\n\n  replace(target, scopedVars?, format?) {\n    if (!target) {\n      return target;\n    }\n\n    var variable, systemValue, value, fmt;\n    this.regex.lastIndex = 0;\n\n    return target.replace(this.regex, (match, var1, var2, fmt2, var3, fmt3) => {\n      variable = this.index[var1 || var2 || var3];\n      fmt = fmt2 || fmt3 || format;\n      if (scopedVars) {\n        value = scopedVars[var1 || var2 || var3];\n        if (value) {\n          return this.formatValue(value.value, fmt, variable);\n        }\n      }\n\n      if (!variable) {\n        return match;\n      }\n\n      systemValue = this.grafanaVariables[variable.current.value];\n      if (systemValue) {\n        return this.formatValue(systemValue, fmt, variable);\n      }\n\n      value = variable.current.value;\n      if (this.isAllValue(value)) {\n        value = this.getAllValue(variable);\n        // skip formatting of custom all values\n        if (variable.allValue) {\n          return value;\n        }\n      }\n\n      var res = this.formatValue(value, fmt, variable);\n      return res;\n    });\n  }\n\n  isAllValue(value) {\n    return value === '$__all' || (Array.isArray(value) && value[0] === '$__all');\n  }\n\n  replaceWithText(target, scopedVars) {\n    if (!target) {\n      return target;\n    }\n\n    var variable;\n    this.regex.lastIndex = 0;\n\n    return target.replace(this.regex, (match, var1, var2, fmt2, var3) => {\n      if (scopedVars) {\n        var option = scopedVars[var1 || var2 || var3];\n        if (option) {\n          return option.text;\n        }\n      }\n\n      variable = this.index[var1 || var2 || var3];\n      if (!variable) {\n        return match;\n      }\n\n      return this.grafanaVariables[variable.current.value] || variable.current.text;\n    });\n  }\n\n  fillVariableValuesForUrl(params, scopedVars) {\n    _.each(this.variables, function(variable) {\n      if (scopedVars && scopedVars[variable.name] !== void 0) {\n        if (scopedVars[variable.name].skipUrlSync) {\n          return;\n        }\n        params['var-' + variable.name] = scopedVars[variable.name].value;\n      } else {\n        if (variable.skipUrlSync) {\n          return;\n        }\n        params['var-' + variable.name] = variable.getValueForUrl();\n      }\n    });\n  }\n\n  distributeVariable(value, variable) {\n    value = _.map(value, function(val, index) {\n      if (index !== 0) {\n        return variable + '=' + val;\n      } else {\n        return val;\n      }\n    });\n    return value.join(',');\n  }\n}\n\nexport default new TemplateSrv();\n","import angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { variableTypes } from './variable';\n\nexport class VariableSrv {\n  dashboard: any;\n  variables: any;\n\n  /** @ngInject */\n  constructor(private $rootScope, private $q, private $location, private $injector, private templateSrv) {\n    // update time variant variables\n    $rootScope.$on('refresh', this.onDashboardRefresh.bind(this), $rootScope);\n    $rootScope.$on('template-variable-value-updated', this.updateUrlParamsWithCurrentVariables.bind(this), $rootScope);\n  }\n\n  init(dashboard) {\n    this.dashboard = dashboard;\n\n    // create working class models representing variables\n    this.variables = dashboard.templating.list = dashboard.templating.list.map(this.createVariableFromModel.bind(this));\n    this.templateSrv.init(this.variables);\n\n    // init variables\n    for (let variable of this.variables) {\n      variable.initLock = this.$q.defer();\n    }\n\n    var queryParams = this.$location.search();\n    return this.$q\n      .all(\n        this.variables.map(variable => {\n          return this.processVariable(variable, queryParams);\n        })\n      )\n      .then(() => {\n        this.templateSrv.updateTemplateData();\n      });\n  }\n\n  onDashboardRefresh(evt, payload) {\n    if (payload && payload.fromVariableValueUpdated) {\n      return Promise.resolve({});\n    }\n\n    var promises = this.variables.filter(variable => variable.refresh === 2).map(variable => {\n      var previousOptions = variable.options.slice();\n\n      return variable.updateOptions().then(() => {\n        if (angular.toJson(previousOptions) !== angular.toJson(variable.options)) {\n          this.$rootScope.$emit('template-variable-value-updated');\n        }\n      });\n    });\n\n    return this.$q.all(promises);\n  }\n\n  processVariable(variable, queryParams) {\n    var dependencies = [];\n\n    for (let otherVariable of this.variables) {\n      if (variable.dependsOn(otherVariable)) {\n        dependencies.push(otherVariable.initLock.promise);\n      }\n    }\n\n    return this.$q\n      .all(dependencies)\n      .then(() => {\n        var urlValue = queryParams['var-' + variable.name];\n        if (urlValue !== void 0) {\n          return variable.setValueFromUrl(urlValue).then(variable.initLock.resolve);\n        }\n\n        if (variable.refresh === 1 || variable.refresh === 2) {\n          return variable.updateOptions().then(variable.initLock.resolve);\n        }\n\n        variable.initLock.resolve();\n      })\n      .finally(() => {\n        this.templateSrv.variableInitialized(variable);\n        delete variable.initLock;\n      });\n  }\n\n  createVariableFromModel(model) {\n    var ctor = variableTypes[model.type].ctor;\n    if (!ctor) {\n      throw {\n        message: '无法找到变量构造函数 ' + model.type,\n      };\n    }\n\n    var variable = this.$injector.instantiate(ctor, { model: model });\n    return variable;\n  }\n\n  addVariable(variable) {\n    this.variables.push(variable);\n    this.templateSrv.updateTemplateData();\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  removeVariable(variable) {\n    var index = _.indexOf(this.variables, variable);\n    this.variables.splice(index, 1);\n    this.templateSrv.updateTemplateData();\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  updateOptions(variable) {\n    return variable.updateOptions();\n  }\n\n  variableUpdated(variable, emitChangeEvents?) {\n    // if there is a variable lock ignore cascading update because we are in a boot up scenario\n    if (variable.initLock) {\n      return this.$q.when();\n    }\n\n    // cascade updates to variables that use this variable\n    var promises = _.map(this.variables, otherVariable => {\n      if (otherVariable === variable) {\n        return;\n      }\n\n      if (otherVariable.dependsOn(variable)) {\n        return this.updateOptions(otherVariable);\n      }\n    });\n\n    return this.$q.all(promises).then(() => {\n      if (emitChangeEvents) {\n        this.$rootScope.$emit('template-variable-value-updated');\n        this.$rootScope.$broadcast('refresh', { fromVariableValueUpdated: true });\n      }\n    });\n  }\n\n  selectOptionsForCurrentValue(variable) {\n    var i, y, value, option;\n    var selected: any = [];\n\n    for (i = 0; i < variable.options.length; i++) {\n      option = variable.options[i];\n      option.selected = false;\n      if (_.isArray(variable.current.value)) {\n        for (y = 0; y < variable.current.value.length; y++) {\n          value = variable.current.value[y];\n          if (option.value === value) {\n            option.selected = true;\n            selected.push(option);\n          }\n        }\n      } else if (option.value === variable.current.value) {\n        option.selected = true;\n        selected.push(option);\n      }\n    }\n\n    return selected;\n  }\n\n  validateVariableSelectionState(variable) {\n    if (!variable.current) {\n      variable.current = {};\n    }\n\n    if (_.isArray(variable.current.value)) {\n      var selected = this.selectOptionsForCurrentValue(variable);\n\n      // if none pick first\n      if (selected.length === 0) {\n        selected = variable.options[0];\n      } else {\n        selected = {\n          value: _.map(selected, function(val) {\n            return val.value;\n          }),\n          text: _.map(selected, function(val) {\n            return val.text;\n          }).join(' + '),\n        };\n      }\n\n      return variable.setValue(selected);\n    } else {\n      var currentOption = _.find(variable.options, {\n        text: variable.current.text,\n      });\n      if (currentOption) {\n        return variable.setValue(currentOption);\n      } else {\n        if (!variable.options.length) {\n          return Promise.resolve();\n        }\n        return variable.setValue(variable.options[0]);\n      }\n    }\n  }\n\n  setOptionFromUrl(variable, urlValue) {\n    var promise = this.$q.when();\n\n    if (variable.refresh) {\n      promise = variable.updateOptions();\n    }\n\n    return promise.then(() => {\n      var option = _.find(variable.options, op => {\n        return op.text === urlValue || op.value === urlValue;\n      });\n\n      let defaultText = urlValue;\n      let defaultValue = urlValue;\n\n      if (!option && _.isArray(urlValue)) {\n        defaultText = [];\n\n        for (let n = 0; n < urlValue.length; n++) {\n          let t = _.find(variable.options, op => {\n            return op.value === urlValue[n];\n          });\n\n          if (t) {\n            defaultText.push(t.text);\n          }\n        }\n      }\n\n      option = option || { text: defaultText, value: defaultValue };\n      return variable.setValue(option);\n    });\n  }\n\n  setOptionAsCurrent(variable, option) {\n    variable.current = _.cloneDeep(option);\n\n    if (_.isArray(variable.current.text)) {\n      variable.current.text = variable.current.text.join(' + ');\n    }\n\n    this.selectOptionsForCurrentValue(variable);\n    return this.variableUpdated(variable);\n  }\n\n  updateUrlParamsWithCurrentVariables() {\n    // update url\n    var params = this.$location.search();\n\n    // remove variable params\n    _.each(params, function(value, key) {\n      if (key.indexOf('var-') === 0) {\n        delete params[key];\n      }\n    });\n\n    // add new values\n    this.templateSrv.fillVariableValuesForUrl(params);\n    // update url\n    this.$location.search(params);\n  }\n\n  setAdhocFilter(options) {\n    var variable = _.find(this.variables, {\n      type: 'adhoc',\n      datasource: options.datasource,\n    });\n    if (!variable) {\n      variable = this.createVariableFromModel({\n        name: 'Filters',\n        type: 'adhoc',\n        datasource: options.datasource,\n      });\n      this.addVariable(variable);\n    }\n\n    let filters = variable.filters;\n    let filter = _.find(filters, { key: options.key, value: options.value });\n\n    if (!filter) {\n      filter = { key: options.key, value: options.value };\n      filters.push(filter);\n    }\n\n    filter.operator = options.operator;\n    this.variableUpdated(variable, true);\n  }\n}\n\ncoreModule.service('variableSrv', VariableSrv);\n","import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\n\nexport class IntervalVariable implements Variable {\n  name: string;\n  auto_count: number;\n  auto_min: number;\n  options: any;\n  auto: boolean;\n  query: string;\n  refresh: number;\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'interval',\n    name: '',\n    hide: 0,\n    label: '',\n    refresh: 2,\n    options: [],\n    current: {},\n    query: '1m,10m,30m,1h,6h,12h,1d,7d,14d,30d',\n    auto: false,\n    auto_min: '10s',\n    auto_count: 30,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model, private timeSrv, private templateSrv, private variableSrv) {\n    assignModelProperties(this, model, this.defaults);\n    this.refresh = 2;\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  setValue(option) {\n    this.updateAutoValue();\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateAutoValue() {\n    if (!this.auto) {\n      return;\n    }\n\n    // add auto option if missing\n    if (this.options.length && this.options[0].text !== 'auto') {\n      this.options.unshift({\n        text: 'auto',\n        value: '$__auto_interval_' + this.name,\n      });\n    }\n\n    var res = kbn.calculateInterval(this.timeSrv.timeRange(), this.auto_count, this.auto_min);\n    this.templateSrv.setGrafanaVariable('$__auto_interval_' + this.name, res.interval);\n    // for backward compatibility, to be removed eventually\n    this.templateSrv.setGrafanaVariable('$__auto_interval', res.interval);\n  }\n\n  updateOptions() {\n    // extract options between quotes and/or comma\n    this.options = _.map(this.query.match(/([\"'])(.*?)\\1|\\w+/g), function(text) {\n      text = text.replace(/[\"']+/g, '');\n      return { text: text.trim(), value: text.trim() };\n    });\n\n    this.updateAutoValue();\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  dependsOn(variable) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue) {\n    this.updateAutoValue();\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n\nvariableTypes['interval'] = {\n  name: 'Interval',\n  ctor: IntervalVariable,\n  description: '定义时间间隔 (如 1m, 1h, 1d)',\n};\n","import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { Variable, containsVariable, assignModelProperties, variableTypes } from './variable';\n\nfunction getNoneOption() {\n  return { text: 'None', value: '', isNone: true };\n}\n\nexport class QueryVariable implements Variable {\n  datasource: any;\n  query: any;\n  regex: any;\n  sort: any;\n  options: any;\n  current: any;\n  refresh: number;\n  hide: number;\n  name: string;\n  multi: boolean;\n  includeAll: boolean;\n  useTags: boolean;\n  tagsQuery: string;\n  tagValuesQuery: string;\n  tags: any[];\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'query',\n    label: null,\n    query: '',\n    regex: '',\n    sort: 0,\n    datasource: null,\n    refresh: 0,\n    hide: 0,\n    name: '',\n    multi: false,\n    includeAll: false,\n    allValue: null,\n    options: [],\n    current: {},\n    tags: [],\n    useTags: false,\n    tagsQuery: '',\n    tagValuesQuery: '',\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model, private datasourceSrv, private templateSrv, private variableSrv, private timeSrv) {\n    // copy model properties to this instance\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  getSaveModel() {\n    // copy back model properties to model\n    assignModelProperties(this.model, this, this.defaults);\n\n    // remove options\n    if (this.refresh !== 0) {\n      this.model.options = [];\n    }\n\n    return this.model;\n  }\n\n  setValue(option) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  setValueFromUrl(urlValue) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    if (this.current.text === 'All') {\n      return 'All';\n    }\n    return this.current.value;\n  }\n\n  updateOptions() {\n    return this.datasourceSrv\n      .get(this.datasource)\n      .then(this.updateOptionsFromMetricFindQuery.bind(this))\n      .then(this.updateTags.bind(this))\n      .then(this.variableSrv.validateVariableSelectionState.bind(this.variableSrv, this));\n  }\n\n  updateTags(datasource) {\n    if (this.useTags) {\n      return this.metricFindQuery(datasource, this.tagsQuery).then(results => {\n        this.tags = [];\n        for (var i = 0; i < results.length; i++) {\n          this.tags.push(results[i].text);\n        }\n        return datasource;\n      });\n    } else {\n      delete this.tags;\n    }\n\n    return datasource;\n  }\n\n  getValuesForTag(tagKey) {\n    return this.datasourceSrv.get(this.datasource).then(datasource => {\n      var query = this.tagValuesQuery.replace('$tag', tagKey);\n      return this.metricFindQuery(datasource, query).then(function(results) {\n        return _.map(results, function(value) {\n          return value.text;\n        });\n      });\n    });\n  }\n\n  updateOptionsFromMetricFindQuery(datasource) {\n    return this.metricFindQuery(datasource, this.query).then(results => {\n      this.options = this.metricNamesToVariableValues(results);\n      if (this.includeAll) {\n        this.addAllOption();\n      }\n      if (!this.options.length) {\n        this.options.push(getNoneOption());\n      }\n      return datasource;\n    });\n  }\n\n  metricFindQuery(datasource, query) {\n    var options = { range: undefined, variable: this };\n\n    if (this.refresh === 2) {\n      options.range = this.timeSrv.timeRange();\n    }\n\n    return datasource.metricFindQuery(query, options);\n  }\n\n  addAllOption() {\n    this.options.unshift({ text: 'All', value: '$__all' });\n  }\n\n  metricNamesToVariableValues(metricNames) {\n    var regex, options, i, matches;\n    options = [];\n\n    if (this.regex) {\n      regex = kbn.stringToJsRegex(this.templateSrv.replace(this.regex, {}, 'regex'));\n    }\n    for (i = 0; i < metricNames.length; i++) {\n      var item = metricNames[i];\n      var text = item.text === undefined || item.text === null ? item.value : item.text;\n\n      var value = item.value === undefined || item.value === null ? item.text : item.value;\n\n      if (_.isNumber(value)) {\n        value = value.toString();\n      }\n\n      if (_.isNumber(text)) {\n        text = text.toString();\n      }\n\n      if (regex) {\n        matches = regex.exec(value);\n        if (!matches) {\n          continue;\n        }\n        if (matches.length > 1) {\n          value = matches[1];\n          text = matches[1];\n        }\n      }\n\n      options.push({ text: text, value: value });\n    }\n\n    options = _.uniqBy(options, 'value');\n    return this.sortVariableValues(options, this.sort);\n  }\n\n  sortVariableValues(options, sortOrder) {\n    if (sortOrder === 0) {\n      return options;\n    }\n\n    var sortType = Math.ceil(sortOrder / 2);\n    var reverseSort = sortOrder % 2 === 0;\n\n    if (sortType === 1) {\n      options = _.sortBy(options, 'text');\n    } else if (sortType === 2) {\n      options = _.sortBy(options, opt => {\n        var matches = opt.text.match(/.*?(\\d+).*/);\n        if (!matches || matches.length < 2) {\n          return -1;\n        } else {\n          return parseInt(matches[1], 10);\n        }\n      });\n    } else if (sortType === 3) {\n      options = _.sortBy(options, opt => {\n        return _.toLower(opt.text);\n      });\n    }\n\n    if (reverseSort) {\n      options = options.reverse();\n    }\n\n    return options;\n  }\n\n  dependsOn(variable) {\n    return containsVariable(this.query, this.datasource, variable.name);\n  }\n}\n\nvariableTypes['query'] = {\n  name: 'Query',\n  ctor: QueryVariable,\n  description: '从数据源查询中获取变量值',\n  supportsMulti: true,\n};\n","import kbn from 'app/core/utils/kbn';\nimport { Variable, containsVariable, assignModelProperties, variableTypes } from './variable';\n\nexport class DatasourceVariable implements Variable {\n  regex: any;\n  query: string;\n  options: any;\n  current: any;\n  refresh: any;\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'datasource',\n    name: '',\n    hide: 0,\n    label: '',\n    current: {},\n    regex: '',\n    options: [],\n    query: '',\n    refresh: 1,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model, private datasourceSrv, private variableSrv, private templateSrv) {\n    assignModelProperties(this, model, this.defaults);\n    this.refresh = 1;\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n\n    // don't persist options\n    this.model.options = [];\n    return this.model;\n  }\n\n  setValue(option) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateOptions() {\n    var options = [];\n    var sources = this.datasourceSrv.getMetricSources({ skipVariables: true });\n    var regex;\n\n    if (this.regex) {\n      regex = this.templateSrv.replace(this.regex, null, 'regex');\n      regex = kbn.stringToJsRegex(regex);\n    }\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      // must match on type\n      if (source.meta.id !== this.query) {\n        continue;\n      }\n\n      if (regex && !regex.exec(source.name)) {\n        continue;\n      }\n\n      options.push({ text: source.name, value: source.name });\n    }\n\n    if (options.length === 0) {\n      options.push({ text: '未找到任何数据源', value: '' });\n    }\n\n    this.options = options;\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  dependsOn(variable) {\n    if (this.regex) {\n      return containsVariable(this.regex, variable.name);\n    }\n    return false;\n  }\n\n  setValueFromUrl(urlValue) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n\nvariableTypes['datasource'] = {\n  name: 'Datasource',\n  ctor: DatasourceVariable,\n  description: '使您能够动态切换多个面板的数据源',\n};\n","import _ from 'lodash';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\n\nexport class CustomVariable implements Variable {\n  query: string;\n  options: any;\n  includeAll: boolean;\n  multi: boolean;\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'custom',\n    name: '',\n    label: '',\n    hide: 0,\n    options: [],\n    current: {},\n    query: '',\n    includeAll: false,\n    multi: false,\n    allValue: null,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model, private variableSrv) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  setValue(option) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  updateOptions() {\n    // extract options in comma separated string\n    this.options = _.map(this.query.split(/[,]+/), function(text) {\n      return { text: text.trim(), value: text.trim() };\n    });\n\n    if (this.includeAll) {\n      this.addAllOption();\n    }\n\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  addAllOption() {\n    this.options.unshift({ text: 'All', value: '$__all' });\n  }\n\n  dependsOn(variable) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    if (this.current.text === 'All') {\n      return 'All';\n    }\n    return this.current.value;\n  }\n}\n\nvariableTypes['custom'] = {\n  name: 'Custom',\n  ctor: CustomVariable,\n  description: '手动定义变量值',\n  supportsMulti: true,\n};\n","import { Variable, assignModelProperties, variableTypes } from './variable';\n\nexport class ConstantVariable implements Variable {\n  query: string;\n  options: any[];\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'constant',\n    name: '',\n    hide: 2,\n    label: '',\n    query: '',\n    current: {},\n    options: [],\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model, private variableSrv) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  setValue(option) {\n    this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateOptions() {\n    this.options = [{ text: this.query.trim(), value: this.query.trim() }];\n    this.setValue(this.options[0]);\n    return Promise.resolve();\n  }\n\n  dependsOn(variable) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n\nvariableTypes['constant'] = {\n  name: 'Constant',\n  ctor: ConstantVariable,\n  description: '使用一个因此的常, 用于定义你共享的仪表盘的指标前缀',\n};\n","import _ from 'lodash';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\n\nexport class AdhocVariable implements Variable {\n  filters: any[];\n  skipUrlSync: boolean;\n\n  defaults = {\n    type: 'adhoc',\n    name: '',\n    label: '',\n    hide: 0,\n    datasource: null,\n    filters: [],\n    skipUrlSync: false,\n  };\n\n  /** @ngInject **/\n  constructor(private model) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  setValue(option) {\n    return Promise.resolve();\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  updateOptions() {\n    return Promise.resolve();\n  }\n\n  dependsOn(variable) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue) {\n    if (!_.isArray(urlValue)) {\n      urlValue = [urlValue];\n    }\n\n    this.filters = urlValue.map(item => {\n      var values = item.split('|').map(value => {\n        return this.unescapeDelimiter(value);\n      });\n      return {\n        key: values[0],\n        operator: values[1],\n        value: values[2],\n      };\n    });\n\n    return Promise.resolve();\n  }\n\n  getValueForUrl() {\n    return this.filters.map(filter => {\n      return [filter.key, filter.operator, filter.value]\n        .map(value => {\n          return this.escapeDelimiter(value);\n        })\n        .join('|');\n    });\n  }\n\n  escapeDelimiter(value) {\n    return value.replace(/\\|/g, '__gfp__');\n  }\n\n  unescapeDelimiter(value) {\n    return value.replace(/__gfp__/g, '|');\n  }\n\n  setFilters(filters: any[]) {\n    this.filters = filters;\n  }\n}\n\nvariableTypes['adhoc'] = {\n  name: 'Ad hoc filters',\n  ctor: AdhocVariable,\n  description: '添加键/值对过滤器',\n};\n","import angular from 'angular';\nimport _ from 'lodash';\nimport Remarkable from 'remarkable';\n\nexport class PluginEditCtrl {\n  model: any;\n  pluginIcon: string;\n  pluginId: any;\n  includes: any;\n  readmeHtml: any;\n  includedDatasources: any;\n  tab: string;\n  navModel: any;\n  hasDashboards: any;\n  preUpdateHook: () => any;\n  postUpdateHook: () => any;\n\n  /** @ngInject */\n  constructor(private $scope, private $rootScope, private backendSrv, private $sce, private $routeParams, navModelSrv) {\n    this.pluginId = $routeParams.pluginId;\n    this.preUpdateHook = () => Promise.resolve();\n    this.postUpdateHook = () => Promise.resolve();\n\n    this.init();\n  }\n\n  setNavModel(model) {\n    let defaultTab = 'readme';\n\n    this.navModel = {\n      main: {\n        img: model.info.logos.large,\n        subTitle: model.info.author.name,\n        url: '',\n        text: model.name,\n        breadcrumbs: [{ title: '插件', url: 'plugins' }],\n        children: [\n          {\n            icon: 'fa fa-fw fa-file-text-o',\n            id: 'readme',\n            text: 'Readme',\n            url: `plugins/${this.model.id}/edit?tab=readme`,\n          },\n        ],\n      },\n    };\n\n    if (model.type === 'app') {\n      this.navModel.main.children.push({\n        icon: 'gicon gicon-cog',\n        id: 'config',\n        text: '配置',\n        url: `plugins/${this.model.id}/edit?tab=config`,\n      });\n\n      let hasDashboards = _.find(model.includes, { type: 'dashboard' });\n\n      if (hasDashboards) {\n        this.navModel.main.children.push({\n          icon: 'gicon gicon-dashboard',\n          id: 'dashboards',\n          text: '仪表盘',\n          url: `plugins/${this.model.id}/edit?tab=dashboards`,\n        });\n      }\n\n      defaultTab = 'config';\n    }\n\n    this.tab = this.$routeParams.tab || defaultTab;\n\n    for (let tab of this.navModel.main.children) {\n      if (tab.id === this.tab) {\n        tab.active = true;\n      }\n    }\n  }\n\n  init() {\n    return this.backendSrv.get(`/api/plugins/${this.pluginId}/settings`).then(result => {\n      this.model = result;\n      this.pluginIcon = this.getPluginIcon(this.model.type);\n\n      this.model.dependencies.plugins.forEach(plug => {\n        plug.icon = this.getPluginIcon(plug.type);\n      });\n\n      this.includes = _.map(result.includes, plug => {\n        plug.icon = this.getPluginIcon(plug.type);\n        return plug;\n      });\n\n      this.setNavModel(this.model);\n      return this.initReadme();\n    });\n  }\n\n  initReadme() {\n    return this.backendSrv.get(`/api/plugins/${this.pluginId}/markdown/readme`).then(res => {\n      var md = new Remarkable();\n      this.readmeHtml = this.$sce.trustAsHtml(md.render(res));\n    });\n  }\n\n  getPluginIcon(type) {\n    switch (type) {\n      case 'datasource':\n        return 'icon-gf icon-gf-datasources';\n      case 'panel':\n        return 'icon-gf icon-gf-panel';\n      case 'app':\n        return 'icon-gf icon-gf-apps';\n      case 'page':\n        return 'icon-gf icon-gf-endpoint-tiny';\n      case 'dashboard':\n        return 'icon-gf icon-gf-dashboard';\n      default:\n        return 'icon-gf icon-gf-apps';\n    }\n  }\n\n  update() {\n    this.preUpdateHook()\n      .then(() => {\n        var updateCmd = _.extend(\n          {\n            enabled: this.model.enabled,\n            pinned: this.model.pinned,\n            jsonData: this.model.jsonData,\n            secureJsonData: this.model.secureJsonData,\n          },\n          {}\n        );\n        return this.backendSrv.post(`/api/plugins/${this.pluginId}/settings`, updateCmd);\n      })\n      .then(this.postUpdateHook)\n      .then(res => {\n        window.location.href = window.location.href;\n      });\n  }\n\n  importDashboards() {\n    return Promise.resolve();\n  }\n\n  setPreUpdateHook(callback: () => any) {\n    this.preUpdateHook = callback;\n  }\n\n  setPostUpdateHook(callback: () => any) {\n    this.postUpdateHook = callback;\n  }\n\n  updateAvailable() {\n    var modalScope = this.$scope.$new(true);\n    modalScope.plugin = this.model;\n\n    this.$rootScope.appEvent('show-modal', {\n      src: 'public/app/features/plugins/partials/update_instructions.html',\n      scope: modalScope,\n    });\n  }\n\n  enable() {\n    this.model.enabled = true;\n    this.model.pinned = true;\n    this.update();\n  }\n\n  disable() {\n    this.model.enabled = false;\n    this.model.pinned = false;\n    this.update();\n  }\n}\n\nangular.module('grafana.controllers').controller('PluginEditCtrl', PluginEditCtrl);\n","import './editor_ctrl';\nimport coreModule from 'app/core/core_module';\n\nimport templateSrv from './template_srv';\nimport { VariableSrv } from './variable_srv';\nimport { IntervalVariable } from './interval_variable';\nimport { QueryVariable } from './query_variable';\nimport { DatasourceVariable } from './datasource_variable';\nimport { CustomVariable } from './custom_variable';\nimport { ConstantVariable } from './constant_variable';\nimport { AdhocVariable } from './adhoc_variable';\n\ncoreModule.factory('templateSrv', function() {\n  return templateSrv;\n});\n\nexport {\n  VariableSrv,\n  IntervalVariable,\n  QueryVariable,\n  DatasourceVariable,\n  CustomVariable,\n  ConstantVariable,\n  AdhocVariable,\n};\n","import angular from 'angular';\nimport _ from 'lodash';\n\nvar pluginInfoCache = {};\n\nexport class AppPageCtrl {\n  page: any;\n  pluginId: any;\n  appModel: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv, private $routeParams: any, private $rootScope, private navModelSrv) {\n    this.pluginId = $routeParams.pluginId;\n\n    if (pluginInfoCache[this.pluginId]) {\n      this.initPage(pluginInfoCache[this.pluginId]);\n    } else {\n      this.loadPluginInfo();\n    }\n  }\n\n  initPage(app) {\n    this.appModel = app;\n    this.page = _.find(app.includes, { slug: this.$routeParams.slug });\n\n    pluginInfoCache[this.pluginId] = app;\n\n    if (!this.page) {\n      this.$rootScope.appEvent('alert-error', ['App Page Not Found', '']);\n\n      this.navModel = this.navModelSrv.getNotFoundNav();\n      return;\n    }\n\n    let pluginNav = this.navModelSrv.getNav('plugin-page-' + app.id);\n\n    this.navModel = {\n      main: {\n        img: app.info.logos.large,\n        subTitle: app.name,\n        url: '',\n        text: this.page.name,\n        breadcrumbs: [{ title: app.name, url: pluginNav.main.url }],\n      },\n    };\n  }\n\n  loadPluginInfo() {\n    this.backendSrv.get(`/api/plugins/${this.pluginId}/settings`).then(app => {\n      this.initPage(app);\n    });\n  }\n}\n\nangular.module('grafana.controllers').controller('AppPageCtrl', AppPageCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class PluginListCtrl {\n  plugins: any[];\n  tabIndex: number;\n  navModel: any;\n  searchQuery: string;\n  allPlugins: any[];\n\n  /** @ngInject */\n  constructor(private backendSrv: any, $location, navModelSrv) {\n    this.tabIndex = 0;\n    this.navModel = navModelSrv.getNav('cfg', 'plugins', 0);\n\n    this.backendSrv.get('api/plugins', { embedded: 0 }).then(plugins => {\n      this.plugins = plugins;\n      this.allPlugins = plugins;\n    });\n  }\n\n  onQueryUpdated() {\n    let regex = new RegExp(this.searchQuery, 'ig');\n    this.plugins = _.filter(this.allPlugins, item => {\n      return regex.test(item.name) || regex.test(item.type);\n    });\n  }\n}\n\nangular.module('grafana.controllers').controller('PluginListCtrl', PluginListCtrl);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class DashImportListCtrl {\n  dashboards: any[];\n  plugin: any;\n  datasource: any;\n\n  /** @ngInject */\n  constructor($scope, private backendSrv, private $rootScope) {\n    this.dashboards = [];\n\n    backendSrv.get(`/api/plugins/${this.plugin.id}/dashboards`).then(dashboards => {\n      this.dashboards = dashboards;\n    });\n\n    appEvents.on('dashboard-list-import-all', this.importAll.bind(this), $scope);\n  }\n\n  importAll(payload) {\n    return this.importNext(0)\n      .then(() => {\n        payload.resolve('All dashboards imported');\n      })\n      .catch(err => {\n        payload.reject(err);\n      });\n  }\n\n  importNext(index) {\n    return this.import(this.dashboards[index], true).then(() => {\n      if (index + 1 < this.dashboards.length) {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            this.importNext(index + 1).then(() => {\n              resolve();\n            });\n          }, 500);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  }\n\n  import(dash, overwrite) {\n    var installCmd = {\n      pluginId: this.plugin.id,\n      path: dash.path,\n      overwrite: overwrite,\n      inputs: [],\n    };\n\n    if (this.datasource) {\n      installCmd.inputs.push({\n        name: '*',\n        type: 'datasource',\n        pluginId: this.datasource.type,\n        value: this.datasource.name,\n      });\n    }\n\n    return this.backendSrv.post(`/api/dashboards/import`, installCmd).then(res => {\n      this.$rootScope.appEvent('alert-success', ['仪表盘已导入', dash.title]);\n      _.extend(dash, res);\n    });\n  }\n\n  remove(dash) {\n    this.backendSrv.delete('/api/dashboards/' + dash.importedUri).then(() => {\n      this.$rootScope.appEvent('alert-success', ['仪表盘已删除', dash.title]);\n      dash.imported = false;\n    });\n  }\n}\n\nexport function dashboardImportList() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/plugins/import_list/import_list.html',\n    controller: DashImportListCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      plugin: '=',\n      datasource: '=',\n    },\n  };\n}\n\ncoreModule.directive('dashboardImportList', dashboardImportList);\n","import _ from 'lodash';\nimport { toJS } from 'mobx';\nimport config from 'app/core/config';\nimport { coreModule, appEvents } from 'app/core/core';\nimport { store } from 'app/stores/store';\n\nvar datasourceTypes = [];\n\nvar defaults = {\n  name: '',\n  type: 'graphite',\n  url: '',\n  access: 'proxy',\n  jsonData: {},\n  secureJsonFields: {},\n  secureJsonData: {},\n};\n\nvar datasourceCreated = false;\n\nexport class DataSourceEditCtrl {\n  isNew: boolean;\n  datasources: any[];\n  current: any;\n  types: any;\n  testing: any;\n  datasourceMeta: any;\n  editForm: any;\n  gettingStarted: boolean;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $q, private backendSrv, private $routeParams, private $location, private datasourceSrv) {\n    if (store.nav.main === null) {\n      store.nav.load('cfg', 'datasources');\n    }\n\n    this.navModel = toJS(store.nav);\n    this.datasources = [];\n\n    this.loadDatasourceTypes().then(() => {\n      if (this.$routeParams.id) {\n        this.getDatasourceById(this.$routeParams.id);\n      } else {\n        this.initNewDatasourceModel();\n      }\n    });\n  }\n\n  initNewDatasourceModel() {\n    this.isNew = true;\n    this.current = _.cloneDeep(defaults);\n\n    // We are coming from getting started\n    if (this.$location.search().gettingstarted) {\n      this.gettingStarted = true;\n      this.current.isDefault = true;\n    }\n\n    this.typeChanged();\n  }\n\n  loadDatasourceTypes() {\n    if (datasourceTypes.length > 0) {\n      this.types = datasourceTypes;\n      return this.$q.when(null);\n    }\n\n    return this.backendSrv.get('/api/plugins', { enabled: 1, type: 'datasource' }).then(plugins => {\n      datasourceTypes = plugins;\n      this.types = plugins;\n    });\n  }\n\n  getDatasourceById(id) {\n    this.backendSrv.get('/api/datasources/' + id).then(ds => {\n      this.isNew = false;\n      this.current = ds;\n\n      if (datasourceCreated) {\n        datasourceCreated = false;\n        this.testDatasource();\n      }\n\n      return this.typeChanged();\n    });\n  }\n\n  userChangedType() {\n    // reset model but keep name & default flag\n    this.current = _.defaults(\n      {\n        id: this.current.id,\n        name: this.current.name,\n        isDefault: this.current.isDefault,\n        type: this.current.type,\n      },\n      _.cloneDeep(defaults)\n    );\n    this.typeChanged();\n  }\n\n  updateNav() {\n    store.nav.initDatasourceEditNav(this.current, this.datasourceMeta, 'datasource-settings');\n    this.navModel = toJS(store.nav);\n  }\n\n  typeChanged() {\n    return this.backendSrv.get('/api/plugins/' + this.current.type + '/settings').then(pluginInfo => {\n      this.datasourceMeta = pluginInfo;\n      this.updateNav();\n    });\n  }\n\n  updateFrontendSettings() {\n    return this.backendSrv.get('/api/frontend/settings').then(settings => {\n      config.datasources = settings.datasources;\n      config.defaultDatasource = settings.defaultDatasource;\n      this.datasourceSrv.init();\n    });\n  }\n\n  testDatasource() {\n    this.datasourceSrv.get(this.current.name).then(datasource => {\n      if (!datasource.testDatasource) {\n        return;\n      }\n\n      this.testing = { done: false, status: 'error' };\n\n      // make test call in no backend cache context\n      this.backendSrv\n        .withNoBackendCache(() => {\n          return datasource\n            .testDatasource()\n            .then(result => {\n              this.testing.message = result.message;\n              this.testing.status = result.status;\n            })\n            .catch(err => {\n              if (err.statusText) {\n                this.testing.message = 'HTTP Error ' + err.statusText;\n              } else {\n                this.testing.message = err.message;\n              }\n            });\n        })\n        .finally(() => {\n          this.testing.done = true;\n        });\n    });\n  }\n\n  saveChanges() {\n    if (!this.editForm.$valid) {\n      return;\n    }\n\n    if (this.current.readOnly) {\n      return;\n    }\n\n    if (this.current.id) {\n      return this.backendSrv.put('/api/datasources/' + this.current.id, this.current).then(result => {\n        this.current = result.datasource;\n        this.updateNav();\n        this.updateFrontendSettings().then(() => {\n          this.testDatasource();\n        });\n      });\n    } else {\n      return this.backendSrv.post('/api/datasources', this.current).then(result => {\n        this.current = result.datasource;\n        this.updateFrontendSettings();\n\n        datasourceCreated = true;\n        this.$location.path('datasources/edit/' + result.id);\n      });\n    }\n  }\n\n  confirmDelete() {\n    this.backendSrv.delete('/api/datasources/' + this.current.id).then(() => {\n      this.$location.path('datasources');\n    });\n  }\n\n  delete(s) {\n    appEvents.emit('confirm-modal', {\n      title: '删除',\n      text: '您确定要删除此数据源吗?',\n      yesText: '删除',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.confirmDelete();\n      },\n    });\n  }\n}\n\ncoreModule.controller('DataSourceEditCtrl', DataSourceEditCtrl);\n\ncoreModule.directive('datasourceHttpSettings', function() {\n  return {\n    scope: {\n      current: '=',\n      suggestUrl: '@',\n      noDirectAccess: '@',\n    },\n    templateUrl: 'public/app/features/plugins/partials/ds_http_settings.html',\n    link: {\n      pre: function($scope, elem, attrs) {\n        // do not show access option if direct access is disabled\n        $scope.showAccessOption = $scope.noDirectAccess !== 'true';\n        $scope.showAccessHelp = false;\n        $scope.toggleAccessHelp = function() {\n          $scope.showAccessHelp = !$scope.showAccessHelp;\n        };\n\n        $scope.getSuggestUrls = function() {\n          return [$scope.suggestUrl];\n        };\n      },\n    },\n  };\n});\n","import { toJS } from 'mobx';\nimport { coreModule } from 'app/core/core';\nimport { store } from 'app/stores/store';\n\nexport class DataSourceDashboardsCtrl {\n  datasourceMeta: any;\n  navModel: any;\n  current: any;\n\n  /** @ngInject */\n  constructor(private backendSrv, private $routeParams) {\n    if (store.nav.main === null) {\n      store.nav.load('cfg', 'datasources');\n    }\n\n    this.navModel = toJS(store.nav);\n\n    if (this.$routeParams.id) {\n      this.getDatasourceById(this.$routeParams.id);\n    }\n  }\n\n  getDatasourceById(id) {\n    this.backendSrv\n      .get('/api/datasources/' + id)\n      .then(ds => {\n        this.current = ds;\n      })\n      .then(this.getPluginInfo.bind(this));\n  }\n\n  updateNav() {\n    store.nav.initDatasourceEditNav(this.current, this.datasourceMeta, 'datasource-dashboards');\n    this.navModel = toJS(store.nav);\n  }\n\n  getPluginInfo() {\n    return this.backendSrv.get('/api/plugins/' + this.current.type + '/settings').then(pluginInfo => {\n      this.datasourceMeta = pluginInfo;\n      this.updateNav();\n    });\n  }\n}\n\ncoreModule.controller('DataSourceDashboardsCtrl', DataSourceDashboardsCtrl);\n","import coreModule from '../../core/core_module';\nimport _ from 'lodash';\n\nexport class DataSourcesCtrl {\n  datasources: any;\n  unfiltered: any;\n  navModel: any;\n  searchQuery: string;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, private datasourceSrv, private navModelSrv) {\n    this.navModel = this.navModelSrv.getNav('cfg', 'datasources', 0);\n    backendSrv.get('/api/datasources').then(result => {\n      this.datasources = result;\n      this.unfiltered = result;\n    });\n  }\n\n  onQueryUpdated() {\n    let regex = new RegExp(this.searchQuery, 'ig');\n    this.datasources = _.filter(this.unfiltered, item => {\n      regex.lastIndex = 0;\n      return regex.test(item.name) || regex.test(item.type);\n    });\n  }\n\n  removeDataSourceConfirmed(ds) {\n    this.backendSrv\n      .delete('/api/datasources/' + ds.id)\n      .then(\n        () => {\n          this.$scope.appEvent('alert-success', ['Datasource deleted', '']);\n        },\n        () => {\n          this.$scope.appEvent('alert-error', ['Unable to delete datasource', '']);\n        }\n      )\n      .then(() => {\n        this.backendSrv.get('/api/datasources').then(result => {\n          this.datasources = result;\n        });\n        this.backendSrv.get('/api/frontend/settings').then(settings => {\n          this.datasourceSrv.init(settings.datasources);\n        });\n      });\n  }\n\n  removeDataSource(ds) {\n    this.$scope.appEvent('confirm-modal', {\n      title: '删除',\n      text: '确定要删除数据源: ' + ds.name + '?',\n      yesText: '删除',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.removeDataSourceConfirmed(ds);\n      },\n    });\n  }\n}\n\ncoreModule.controller('DataSourcesCtrl', DataSourcesCtrl);\n","import config from 'app/core/config';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { appEvents, profiler } from 'app/core/core';\nimport { PanelModel } from 'app/features/dashboard/panel_model';\nimport Remarkable from 'remarkable';\nimport { GRID_CELL_HEIGHT, GRID_CELL_VMARGIN, LS_PANEL_COPY_KEY } from 'app/core/constants';\nimport store from 'app/core/store';\n\nconst TITLE_HEIGHT = 27;\nconst PANEL_BORDER = 2;\n\nimport { Emitter } from 'app/core/core';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  dashboard: any;\n  editorTabIndex: number;\n  pluginName: string;\n  pluginId: string;\n  editorTabs: any;\n  $scope: any;\n  $injector: any;\n  $location: any;\n  $timeout: any;\n  fullscreen: boolean;\n  inspector: any;\n  editModeInitiated: boolean;\n  editMode: any;\n  height: any;\n  containerHeight: any;\n  events: Emitter;\n  timing: any;\n  loading: boolean;\n\n  constructor($scope, $injector) {\n    this.$injector = $injector;\n    this.$location = $injector.get('$location');\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabIndex = 0;\n    this.events = this.panel.events;\n    this.timing = {};\n\n    var plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on('refresh', () => this.refresh());\n    $scope.$on('component-did-mount', () => this.panelDidMount());\n\n    $scope.$on('$destroy', () => {\n      this.events.emit('panel-teardown');\n      this.events.removeAllListeners();\n    });\n  }\n\n  init() {\n    this.events.emit('panel-initialized');\n    this.publishAppEvent('panel-initialized', { scope: this.$scope });\n  }\n\n  panelDidMount() {\n    this.events.emit('component-did-mount');\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted(this.panel.id, this.timing);\n  }\n\n  refresh() {\n    this.events.emit('refresh', null);\n  }\n\n  publishAppEvent(evtName, evt) {\n    this.$scope.$root.appEvent(evtName, evt);\n  }\n\n  changeView(fullscreen, edit) {\n    this.publishAppEvent('panel-change-view', {\n      fullscreen: fullscreen,\n      edit: edit,\n      panelId: this.panel.id,\n    });\n  }\n\n  viewPanel() {\n    this.changeView(true, false);\n  }\n\n  editPanel() {\n    this.changeView(true, true);\n  }\n\n  exitFullscreen() {\n    this.changeView(false, false);\n  }\n\n  initEditMode() {\n    this.editorTabs = [];\n    this.addEditorTab('通用', 'public/app/partials/panelgeneral.html');\n    this.editModeInitiated = true;\n    this.events.emit('init-edit-mode', null);\n\n    var urlTab = (this.$injector.get('$routeParams').tab || '').toLowerCase();\n    if (urlTab) {\n      this.editorTabs.forEach((tab, i) => {\n        if (tab.title.toLowerCase() === urlTab) {\n          this.editorTabIndex = i;\n        }\n      });\n    }\n  }\n\n  changeTab(newIndex) {\n    this.editorTabIndex = newIndex;\n    var route = this.$injector.get('$route');\n    route.current.params.tab = this.editorTabs[newIndex].title.toLowerCase();\n    route.updateParams();\n  }\n\n  addEditorTab(title, directiveFn, index?) {\n    var editorTab = { title, directiveFn };\n\n    if (_.isString(directiveFn)) {\n      editorTab.directiveFn = function() {\n        return { templateUrl: directiveFn };\n      };\n    }\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  getMenu() {\n    let menu = [];\n    menu.push({\n      text: '查看',\n      click: 'ctrl.viewPanel();',\n      icon: 'fa fa-fw fa-eye',\n      shortcut: 'v',\n    });\n\n    if (this.dashboard.meta.canEdit) {\n      menu.push({\n        text: '编辑',\n        click: 'ctrl.editPanel();',\n        role: 'Editor',\n        icon: 'fa fa-fw fa-edit',\n        shortcut: 'e',\n      });\n    }\n\n    menu.push({\n      text: '分享',\n      click: 'ctrl.sharePanel();',\n      icon: 'fa fa-fw fa-share',\n      shortcut: 'p s',\n    });\n\n    // Additional items from sub-class\n    menu.push(...this.getAdditionalMenuItems());\n\n    let extendedMenu = this.getExtendedMenu();\n    menu.push({\n      text: '更多 ...',\n      click: '',\n      icon: 'fa fa-fw fa-cube',\n      submenu: extendedMenu,\n    });\n\n    if (this.dashboard.meta.canEdit) {\n      menu.push({ divider: true, role: 'Editor' });\n      menu.push({\n        text: '移除',\n        click: 'ctrl.removePanel();',\n        role: 'Editor',\n        icon: 'fa fa-fw fa-trash',\n        shortcut: 'p r',\n      });\n    }\n\n    return menu;\n  }\n\n  getExtendedMenu() {\n    let menu = [];\n    if (!this.fullscreen && this.dashboard.meta.canEdit) {\n      menu.push({\n        text: '创建副本',\n        click: 'ctrl.duplicate()',\n        role: 'Editor',\n        shortcut: 'p d',\n      });\n\n      menu.push({\n        text: '复制',\n        click: 'ctrl.copyPanel()',\n        role: 'Editor',\n      });\n    }\n\n    menu.push({\n      text: '面板 JSON',\n      click: 'ctrl.editPanelJson(); dismiss();',\n    });\n\n    this.events.emit('init-panel-actions', menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  getAdditionalMenuItems() {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.meta.fullscreen && !this.fullscreen;\n  }\n\n  calculatePanelHeight() {\n    if (this.fullscreen) {\n      var docHeight = $(window).height();\n      var editHeight = Math.floor(docHeight * 0.4);\n      var fullscreenHeight = Math.floor(docHeight * 0.8);\n      this.containerHeight = this.editMode ? editHeight : fullscreenHeight;\n    } else {\n      this.containerHeight = this.panel.gridPos.h * GRID_CELL_HEIGHT + (this.panel.gridPos.h - 1) * GRID_CELL_VMARGIN;\n    }\n\n    if (this.panel.soloMode) {\n      this.containerHeight = $(window).height();\n    }\n\n    this.height = this.containerHeight - (PANEL_BORDER + TITLE_HEIGHT);\n  }\n\n  render(payload?) {\n    this.timing.renderStart = new Date().getTime();\n    this.events.emit('render', payload);\n  }\n\n  duplicate() {\n    this.dashboard.duplicatePanel(this.panel);\n    this.$timeout(() => {\n      this.$scope.$root.$broadcast('render');\n    });\n  }\n\n  removePanel() {\n    this.publishAppEvent('panel-remove', {\n      panelId: this.panel.id,\n    });\n  }\n\n  editPanelJson() {\n    let editScope = this.$scope.$root.$new();\n    editScope.object = this.panel.getSaveModel();\n    editScope.updateHandler = this.replacePanel.bind(this);\n    editScope.enableCopy = true;\n\n    this.publishAppEvent('show-modal', {\n      src: 'public/app/partials/edit_json.html',\n      scope: editScope,\n    });\n  }\n\n  copyPanel() {\n    store.set(LS_PANEL_COPY_KEY, JSON.stringify(this.panel.getSaveModel()));\n    appEvents.emit('alert-success', ['面板已复制。 打开添加面板进行粘贴']);\n  }\n\n  replacePanel(newPanel, oldPanel) {\n    let dashboard = this.dashboard;\n    let index = _.findIndex(dashboard.panels, panel => {\n      return panel.id === oldPanel.id;\n    });\n\n    let deletedPanel = dashboard.panels.splice(index, 1);\n    this.dashboard.events.emit('panel-removed', deletedPanel);\n\n    newPanel = new PanelModel(newPanel);\n    newPanel.id = oldPanel.id;\n\n    dashboard.panels.splice(index, 0, newPanel);\n    dashboard.sortPanelsByGridPos();\n    dashboard.events.emit('panel-added', newPanel);\n  }\n\n  sharePanel() {\n    var shareScope = this.$scope.$new();\n    shareScope.panel = this.panel;\n    shareScope.dashboard = this.dashboard;\n\n    this.publishAppEvent('show-modal', {\n      src: 'public/app/features/dashboard/partials/shareModal.html',\n      scope: shareScope,\n    });\n  }\n\n  getInfoMode() {\n    if (this.error) {\n      return 'error';\n    }\n    if (!!this.panel.description) {\n      return 'info';\n    }\n    if (this.panel.links && this.panel.links.length) {\n      return 'links';\n    }\n    return '';\n  }\n\n  getInfoContent(options) {\n    var markdown = this.panel.description;\n\n    if (options.mode === 'tooltip') {\n      markdown = this.error || this.panel.description;\n    }\n\n    var linkSrv = this.$injector.get('linkSrv');\n    var sanitize = this.$injector.get('$sanitize');\n    var templateSrv = this.$injector.get('templateSrv');\n    var interpolatedMarkdown = templateSrv.replace(markdown, this.panel.scopedVars);\n    var html = '<div class=\"markdown-html\">';\n\n    html += new Remarkable().render(interpolatedMarkdown);\n\n    if (this.panel.links && this.panel.links.length > 0) {\n      html += '<ul>';\n      for (let link of this.panel.links) {\n        var info = linkSrv.getPanelLinkAnchorInfo(link, this.panel.scopedVars);\n        html +=\n          '<li><a class=\"panel-menu-link\" href=\"' +\n          info.href +\n          '\" target=\"' +\n          info.target +\n          '\">' +\n          info.title +\n          '</a></li>';\n      }\n      html += '</ul>';\n    }\n\n    html += '</div>';\n    return sanitize(html);\n  }\n\n  openInspector() {\n    var modalScope = this.$scope.$new();\n    modalScope.panel = this.panel;\n    modalScope.dashboard = this.dashboard;\n    modalScope.panelInfoHtml = this.getInfoContent({ mode: 'inspector' });\n\n    modalScope.inspector = $.extend(true, {}, this.inspector);\n    this.publishAppEvent('show-modal', {\n      src: 'public/app/features/dashboard/partials/inspector.html',\n      scope: modalScope,\n    });\n  }\n}\n","import { DashboardModel } from '../dashboard/dashboard_model';\nimport Remarkable from 'remarkable';\n\nexport class MetricsTabCtrl {\n  dsName: string;\n  panel: any;\n  panelCtrl: any;\n  datasources: any[];\n  datasourceInstance: any;\n  nextRefId: string;\n  dashboard: DashboardModel;\n  panelDsValue: any;\n  addQueryDropdown: any;\n  queryTroubleshooterOpen: boolean;\n  helpOpen: boolean;\n  optionsOpen: boolean;\n  hasQueryHelp: boolean;\n  helpHtml: string;\n  queryOptions: any;\n\n  /** @ngInject */\n  constructor($scope, private $sce, datasourceSrv, private backendSrv) {\n    this.panelCtrl = $scope.ctrl;\n    $scope.ctrl = this;\n\n    this.panel = this.panelCtrl.panel;\n    this.dashboard = this.panelCtrl.dashboard;\n    this.datasources = datasourceSrv.getMetricSources();\n    this.panelDsValue = this.panelCtrl.panel.datasource;\n\n    for (let ds of this.datasources) {\n      if (ds.value === this.panelDsValue) {\n        this.datasourceInstance = ds;\n      }\n    }\n\n    this.addQueryDropdown = { text: '添加查询', value: null, fake: true };\n\n    // update next ref id\n    this.panelCtrl.nextRefId = this.dashboard.getNextQueryLetter(this.panel);\n    this.updateDatasourceOptions();\n  }\n\n  updateDatasourceOptions() {\n    if (this.datasourceInstance) {\n      this.hasQueryHelp = this.datasourceInstance.meta.hasQueryHelp;\n      this.queryOptions = this.datasourceInstance.meta.queryOptions;\n    }\n  }\n\n  getOptions(includeBuiltin) {\n    return Promise.resolve(\n      this.datasources\n        .filter(value => {\n          return includeBuiltin || !value.meta.builtIn;\n        })\n        .map(ds => {\n          return { value: ds.value, text: ds.name, datasource: ds };\n        })\n    );\n  }\n\n  datasourceChanged(option) {\n    if (!option) {\n      return;\n    }\n\n    this.datasourceInstance = option.datasource;\n    this.panelCtrl.setDatasource(option.datasource);\n    this.updateDatasourceOptions();\n  }\n\n  addMixedQuery(option) {\n    if (!option) {\n      return;\n    }\n\n    this.panelCtrl.addQuery({\n      isNew: true,\n      datasource: option.datasource.name,\n    });\n    this.addQueryDropdown = { text: '添加查询', value: null, fake: true };\n  }\n\n  addQuery() {\n    this.panelCtrl.addQuery({ isNew: true });\n  }\n\n  toggleHelp() {\n    this.optionsOpen = false;\n    this.queryTroubleshooterOpen = false;\n    this.helpOpen = !this.helpOpen;\n\n    this.backendSrv.get(`/api/plugins/${this.datasourceInstance.meta.id}/markdown/query_help`).then(res => {\n      var md = new Remarkable();\n      this.helpHtml = this.$sce.trustAsHtml(md.render(res));\n    });\n  }\n\n  toggleOptions() {\n    this.helpOpen = false;\n    this.queryTroubleshooterOpen = false;\n    this.optionsOpen = !this.optionsOpen;\n  }\n\n  toggleQueryTroubleshooter() {\n    this.helpOpen = false;\n    this.optionsOpen = false;\n    this.queryTroubleshooterOpen = !this.queryTroubleshooterOpen;\n  }\n}\n\n/** @ngInject **/\nexport function metricsTabDirective() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/features/panel/partials/metrics_tab.html',\n    controller: MetricsTabCtrl,\n  };\n}\n","import $ from 'jquery';\nimport _ from 'lodash';\n\nimport config from 'app/core/config';\nimport kbn from 'app/core/utils/kbn';\nimport { PanelCtrl } from 'app/features/panel/panel_ctrl';\nimport * as rangeUtil from 'app/core/utils/rangeutil';\nimport * as dateMath from 'app/core/utils/datemath';\nimport { encodePathComponent } from 'app/core/utils/location_util';\n\nimport { metricsTabDirective } from './metrics_tab';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  scope: any;\n  datasource: any;\n  datasourceName: any;\n  $q: any;\n  $timeout: any;\n  contextSrv: any;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  timing: any;\n  range: any;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo: any;\n  skipDataOnInit: boolean;\n  dataStream: any;\n  dataSubscription: any;\n  dataList: any;\n  nextRefId: string;\n\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    // make metrics tab the default\n    this.editorTabIndex = 1;\n    this.$q = $injector.get('$q');\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.scope = $scope;\n    this.panel.datasource = this.panel.datasource || null;\n\n    if (!this.panel.targets) {\n      this.panel.targets = [{}];\n    }\n\n    this.events.on('refresh', this.onMetricsPanelRefresh.bind(this));\n    this.events.on('init-edit-mode', this.onInitMetricsPanelEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTearDown.bind(this));\n  }\n\n  private onPanelTearDown() {\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n      this.dataSubscription = null;\n    }\n  }\n\n  private onInitMetricsPanelEditMode() {\n    this.addEditorTab('度量指标', metricsTabDirective);\n    this.addEditorTab('时间范围', 'public/app/features/panel/partials/panelTime.html');\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      var data = this.panel.snapshotData;\n      // backward compatibility\n      if (!_.isArray(data)) {\n        data = data.data;\n      }\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit('data-snapshot-load', data);\n      });\n    }\n\n    // // ignore if we have data stream\n    if (this.dataStream) {\n      return;\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    this.setTimeQueryStart();\n    this.datasourceSrv\n      .get(this.panel.datasource)\n      .then(this.updateTimeRange.bind(this))\n      .then(this.issueQueries.bind(this))\n      .then(this.handleQueryResult.bind(this))\n      .catch(err => {\n        // if cancelled  keep loading set to true\n        if (err.cancelled) {\n          console.log('Panel request cancelled', err);\n          return;\n        }\n\n        this.loading = false;\n        this.error = err.message || 'Request Error';\n        this.inspector = { error: err };\n\n        if (err.data) {\n          if (err.data.message) {\n            this.error = err.data.message;\n          }\n          if (err.data.error) {\n            this.error = err.data.error;\n          }\n        }\n\n        this.events.emit('data-error', err);\n        console.log('Panel data error:', err);\n      });\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  updateTimeRange(datasource?) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n\n    this.applyPanelTimeOverrides();\n\n    if (this.panel.maxDataPoints) {\n      this.resolution = this.panel.maxDataPoints;\n    } else {\n      this.resolution = Math.ceil($(window).width() * (this.panel.gridPos.w / 24));\n    }\n\n    this.calculateInterval();\n\n    return this.datasource;\n  }\n\n  calculateInterval() {\n    var intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    var res = kbn.calculateInterval(this.range, this.resolution, intervalOverride);\n    this.interval = res.interval;\n    this.intervalMs = res.intervalMs;\n  }\n\n  applyPanelTimeOverrides() {\n    this.timeInfo = '';\n\n    // check panel time overrrides\n    if (this.panel.timeFrom) {\n      var timeFromInterpolated = this.templateSrv.replace(this.panel.timeFrom, this.panel.scopedVars);\n      var timeFromInfo = rangeUtil.describeTextRange(timeFromInterpolated);\n      if (timeFromInfo.invalid) {\n        this.timeInfo = 'invalid time override';\n        return;\n      }\n\n      if (_.isString(this.range.raw.from)) {\n        var timeFromDate = dateMath.parse(timeFromInfo.from);\n        this.timeInfo = timeFromInfo.display;\n        this.range.from = timeFromDate;\n        this.range.to = dateMath.parse(timeFromInfo.to);\n        this.range.raw.from = timeFromInfo.from;\n        this.range.raw.to = timeFromInfo.to;\n      }\n    }\n\n    if (this.panel.timeShift) {\n      var timeShiftInterpolated = this.templateSrv.replace(this.panel.timeShift, this.panel.scopedVars);\n      var timeShiftInfo = rangeUtil.describeTextRange(timeShiftInterpolated);\n      if (timeShiftInfo.invalid) {\n        this.timeInfo = 'invalid timeshift';\n        return;\n      }\n\n      var timeShift = '-' + timeShiftInterpolated;\n      this.timeInfo += ' timeshift ' + timeShift;\n      this.range.from = dateMath.parseDateMath(timeShift, this.range.from, false);\n      this.range.to = dateMath.parseDateMath(timeShift, this.range.to, true);\n      this.range.raw = { from: this.range.from, to: this.range.to };\n    }\n\n    if (this.panel.hideTimeOverride) {\n      this.timeInfo = '';\n    }\n  }\n\n  issueQueries(datasource) {\n    this.datasource = datasource;\n\n    if (!this.panel.targets || this.panel.targets.length === 0) {\n      return this.$q.when([]);\n    }\n\n    // make shallow copy of scoped vars,\n    // and add built in variables interval and interval_ms\n    var scopedVars = Object.assign({}, this.panel.scopedVars, {\n      __interval: { text: this.interval, value: this.interval },\n      __interval_ms: { text: this.intervalMs, value: this.intervalMs },\n    });\n\n    var metricsQuery = {\n      timezone: this.dashboard.getTimezone(),\n      panelId: this.panel.id,\n      dashboardId: this.dashboard.id,\n      range: this.range,\n      rangeRaw: this.range.raw,\n      interval: this.interval,\n      intervalMs: this.intervalMs,\n      targets: this.panel.targets,\n      maxDataPoints: this.resolution,\n      scopedVars: scopedVars,\n      cacheTimeout: this.panel.cacheTimeout,\n    };\n\n    return datasource.query(metricsQuery);\n  }\n\n  handleQueryResult(result) {\n    this.setTimeQueryEnd();\n    this.loading = false;\n\n    // check for if data source returns subject\n    if (result && result.subscribe) {\n      this.handleDataStream(result);\n      return;\n    }\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    this.events.emit('data-received', result.data);\n  }\n\n  handleDataStream(stream) {\n    // if we already have a connection\n    if (this.dataStream) {\n      console.log('two stream observables!');\n      return;\n    }\n\n    this.dataStream = stream;\n    this.dataSubscription = stream.subscribe({\n      next: data => {\n        console.log('dataSubject next!');\n        if (data.range) {\n          this.range = data.range;\n        }\n        this.events.emit('data-received', data.data);\n      },\n      error: error => {\n        this.events.emit('data-error', error);\n        console.log('panel: observer got error');\n      },\n      complete: () => {\n        console.log('panel: observer got complete');\n        this.dataStream = null;\n      },\n    });\n  }\n\n  setDatasource(datasource) {\n    // switching to mixed\n    if (datasource.meta.mixed) {\n      _.each(this.panel.targets, target => {\n        target.datasource = this.panel.datasource;\n        if (!target.datasource) {\n          target.datasource = config.defaultDatasource;\n        }\n      });\n    } else if (this.datasource && this.datasource.meta.mixed) {\n      _.each(this.panel.targets, target => {\n        delete target.datasource;\n      });\n    }\n\n    this.panel.datasource = datasource.value;\n    this.datasourceName = datasource.name;\n    this.datasource = null;\n    this.refresh();\n  }\n\n  getAdditionalMenuItems() {\n    const items = [];\n    if (config.exploreEnabled && this.contextSrv.isEditor && this.datasource && this.datasource.supportsExplore) {\n      items.push({\n        text: 'Explore',\n        click: 'ctrl.explore();',\n        icon: 'fa fa-fw fa-rocket',\n        shortcut: 'x',\n      });\n    }\n    return items;\n  }\n\n  explore() {\n    const range = this.timeSrv.timeRangeForUrl();\n    const state = {\n      ...this.datasource.getExploreState(this.panel),\n      range,\n    };\n    const exploreState = encodePathComponent(JSON.stringify(state));\n    this.$location.url(`/explore?state=${exploreState}`);\n  }\n\n  addQuery(target) {\n    target.refId = this.dashboard.getNextQueryLetter(this.panel);\n\n    this.panel.targets.push(target);\n    this.nextRefId = this.dashboard.getNextQueryLetter(this.panel);\n  }\n\n  removeQuery(target) {\n    var index = _.indexOf(this.panel.targets, target);\n    this.panel.targets.splice(index, 1);\n    this.nextRefId = this.dashboard.getNextQueryLetter(this.panel);\n    this.refresh();\n  }\n\n  moveQuery(target, direction) {\n    var index = _.indexOf(this.panel.targets, target);\n    _.move(this.panel.targets, index, index + direction);\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import _ from 'lodash';\n\nexport class QueryCtrl {\n  target: any;\n  datasource: any;\n  panelCtrl: any;\n  panel: any;\n  hasRawMode: boolean;\n  error: string;\n  isLastQuery: boolean;\n\n  constructor(public $scope, public $injector) {\n    this.panel = this.panelCtrl.panel;\n    this.isLastQuery = _.indexOf(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n}\n","export class ThresholdMapper {\n  static alertToGraphThresholds(panel) {\n    for (var i = 0; i < panel.alert.conditions.length; i++) {\n      let condition = panel.alert.conditions[i];\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      var evaluator = condition.evaluator;\n      var thresholds = (panel.thresholds = []);\n\n      switch (evaluator.type) {\n        case 'gt': {\n          let value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'gt' });\n          break;\n        }\n        case 'lt': {\n          let value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'lt' });\n          break;\n        }\n        case 'outside_range': {\n          let value1 = evaluator.params[0];\n          let value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'gt' });\n            thresholds.push({ value: value2, op: 'lt' });\n          } else {\n            thresholds.push({ value: value1, op: 'lt' });\n            thresholds.push({ value: value2, op: 'gt' });\n          }\n\n          break;\n        }\n        case 'within_range': {\n          let value1 = evaluator.params[0];\n          let value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'lt' });\n            thresholds.push({ value: value2, op: 'gt' });\n          } else {\n            thresholds.push({ value: value1, op: 'gt' });\n            thresholds.push({ value: value2, op: 'lt' });\n          }\n          break;\n        }\n      }\n      break;\n    }\n\n    for (var t of panel.thresholds) {\n      t.fill = true;\n      t.line = true;\n      t.colorMode = 'critical';\n    }\n\n    var updated = true;\n    return updated;\n  }\n}\n","import _ from 'lodash';\nimport { ThresholdMapper } from './threshold_mapper';\nimport { QueryPart } from 'app/core/components/query_part/query_part';\nimport alertDef from './alert_def';\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\n\nexport class AlertTabCtrl {\n  panel: any;\n  panelCtrl: any;\n  testing: boolean;\n  testResult: any;\n  subTabIndex: number;\n  conditionTypes: any;\n  alert: any;\n  conditionModels: any;\n  evalFunctions: any;\n  evalOperators: any;\n  noDataModes: any;\n  executionErrorModes: any;\n  addNotificationSegment;\n  notifications;\n  alertNotifications;\n  error: string;\n  appSubUrl: string;\n  alertHistory: any;\n\n  /** @ngInject */\n  constructor(\n    private $scope,\n    private backendSrv,\n    private dashboardSrv,\n    private uiSegmentSrv,\n    private $q,\n    private datasourceSrv\n  ) {\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n    this.subTabIndex = 0;\n    this.evalFunctions = alertDef.evalFunctions;\n    this.evalOperators = alertDef.evalOperators;\n    this.conditionTypes = alertDef.conditionTypes;\n    this.noDataModes = alertDef.noDataModes;\n    this.executionErrorModes = alertDef.executionErrorModes;\n    this.appSubUrl = config.appSubUrl;\n  }\n\n  $onInit() {\n    this.addNotificationSegment = this.uiSegmentSrv.newPlusButton();\n\n    // subscribe to graph threshold handle changes\n    var thresholdChangedEventHandler = this.graphThresholdChanged.bind(this);\n    this.panelCtrl.events.on('threshold-changed', thresholdChangedEventHandler);\n\n    // set panel alert edit mode\n    this.$scope.$on('$destroy', () => {\n      this.panelCtrl.events.off('threshold-changed', thresholdChangedEventHandler);\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n    });\n\n    // build notification model\n    this.notifications = [];\n    this.alertNotifications = [];\n    this.alertHistory = [];\n\n    return this.backendSrv.get('/api/alert-notifications').then(res => {\n      this.notifications = res;\n\n      this.initModel();\n      this.validateModel();\n    });\n  }\n\n  getAlertHistory() {\n    this.backendSrv\n      .get(`/api/annotations?dashboardId=${this.panelCtrl.dashboard.id}&panelId=${this.panel.id}&limit=50&type=alert`)\n      .then(res => {\n        this.alertHistory = _.map(res, ah => {\n          ah.time = this.dashboardSrv.getCurrent().formatDate(ah.time, 'MMM D, YYYY HH:mm:ss');\n          ah.stateModel = alertDef.getStateDisplayModel(ah.newState);\n          ah.info = alertDef.getAlertAnnotationInfo(ah);\n          return ah;\n        });\n      });\n  }\n\n  getNotificationIcon(type): string {\n    switch (type) {\n      case 'email':\n        return 'fa fa-envelope';\n      case 'slack':\n        return 'fa fa-slack';\n      case 'victorops':\n        return 'fa fa-pagelines';\n      case 'webhook':\n        return 'fa fa-cubes';\n      case 'pagerduty':\n        return 'fa fa-bullhorn';\n      case 'opsgenie':\n        return 'fa fa-bell';\n      case 'hipchat':\n        return 'fa fa-mail-forward';\n      case 'pushover':\n        return 'fa fa-mobile';\n      case 'kafka':\n        return 'fa fa-random';\n      case 'teams':\n        return 'fa fa-windows';\n    }\n    return 'fa fa-bell';\n  }\n\n  getNotifications() {\n    return Promise.resolve(\n      this.notifications.map(item => {\n        return this.uiSegmentSrv.newSegment(item.name);\n      })\n    );\n  }\n\n  changeTabIndex(newTabIndex) {\n    this.subTabIndex = newTabIndex;\n\n    if (this.subTabIndex === 2) {\n      this.getAlertHistory();\n    }\n  }\n\n  notificationAdded() {\n    var model = _.find(this.notifications, {\n      name: this.addNotificationSegment.value,\n    });\n    if (!model) {\n      return;\n    }\n\n    this.alertNotifications.push({\n      name: model.name,\n      iconClass: this.getNotificationIcon(model.type),\n      isDefault: false,\n    });\n    this.alert.notifications.push({ id: model.id });\n\n    // reset plus button\n    this.addNotificationSegment.value = this.uiSegmentSrv.newPlusButton().value;\n    this.addNotificationSegment.html = this.uiSegmentSrv.newPlusButton().html;\n  }\n\n  removeNotification(index) {\n    this.alert.notifications.splice(index, 1);\n    this.alertNotifications.splice(index, 1);\n  }\n\n  initModel() {\n    var alert = (this.alert = this.panel.alert);\n    if (!alert) {\n      return;\n    }\n\n    alert.conditions = alert.conditions || [];\n    if (alert.conditions.length === 0) {\n      alert.conditions.push(this.buildDefaultCondition());\n    }\n\n    alert.noDataState = alert.noDataState || 'no_data';\n    alert.executionErrorState = alert.executionErrorState || 'alerting';\n    alert.frequency = alert.frequency || '60s';\n    alert.handler = alert.handler || 1;\n    alert.notifications = alert.notifications || [];\n\n    var defaultName = this.panel.title + ' 报警';\n    alert.name = alert.name || defaultName;\n\n    this.conditionModels = _.reduce(\n      alert.conditions,\n      (memo, value) => {\n        memo.push(this.buildConditionModel(value));\n        return memo;\n      },\n      []\n    );\n\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n\n    for (let addedNotification of alert.notifications) {\n      var model = _.find(this.notifications, { id: addedNotification.id });\n      if (model && model.isDefault === false) {\n        model.iconClass = this.getNotificationIcon(model.type);\n        this.alertNotifications.push(model);\n      }\n    }\n\n    for (let notification of this.notifications) {\n      if (notification.isDefault) {\n        notification.iconClass = this.getNotificationIcon(notification.type);\n        notification.bgColor = '#00678b';\n        this.alertNotifications.push(notification);\n      }\n    }\n\n    this.panelCtrl.editingThresholds = true;\n    this.panelCtrl.render();\n  }\n\n  graphThresholdChanged(evt) {\n    for (var condition of this.alert.conditions) {\n      if (condition.type === 'query') {\n        condition.evaluator.params[evt.handleIndex] = evt.threshold.value;\n        this.evaluatorParamsChanged();\n        break;\n      }\n    }\n  }\n\n  buildDefaultCondition() {\n    return {\n      type: 'query',\n      query: { params: ['A', '5m', 'now'] },\n      reducer: { type: 'avg', params: [] },\n      evaluator: { type: 'gt', params: [null] },\n      operator: { type: 'and' },\n    };\n  }\n\n  validateModel() {\n    if (!this.alert) {\n      return;\n    }\n\n    let firstTarget;\n    let foundTarget = null;\n\n    for (var condition of this.alert.conditions) {\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      for (var target of this.panel.targets) {\n        if (!firstTarget) {\n          firstTarget = target;\n        }\n        if (condition.query.params[0] === target.refId) {\n          foundTarget = target;\n          break;\n        }\n      }\n\n      if (!foundTarget) {\n        if (firstTarget) {\n          condition.query.params[0] = firstTarget.refId;\n          foundTarget = firstTarget;\n        } else {\n          this.error = 'Could not find any metric queries';\n        }\n      }\n\n      var datasourceName = foundTarget.datasource || this.panel.datasource;\n      this.datasourceSrv.get(datasourceName).then(ds => {\n        if (!ds.meta.alerting) {\n          this.error = 'The datasource does not support alerting queries';\n        } else if (ds.targetContainsTemplate(foundTarget)) {\n          this.error = 'Template variables are not supported in alert queries';\n        } else {\n          this.error = '';\n        }\n      });\n    }\n  }\n\n  buildConditionModel(source) {\n    var cm: any = { source: source, type: source.type };\n\n    cm.queryPart = new QueryPart(source.query, alertDef.alertQueryDef);\n    cm.reducerPart = alertDef.createReducerPart(source.reducer);\n    cm.evaluator = source.evaluator;\n    cm.operator = source.operator;\n\n    return cm;\n  }\n\n  handleQueryPartEvent(conditionModel, evt) {\n    switch (evt.name) {\n      case 'action-remove-part': {\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([]);\n      }\n      case 'part-param-changed': {\n        this.validateModel();\n      }\n      case 'get-param-options': {\n        var result = this.panel.targets.map(target => {\n          return this.uiSegmentSrv.newSegment({ value: target.refId });\n        });\n\n        return this.$q.when(result);\n      }\n    }\n  }\n\n  handleReducerPartEvent(conditionModel, evt) {\n    switch (evt.name) {\n      case 'action': {\n        conditionModel.source.reducer.type = evt.action.value;\n        conditionModel.reducerPart = alertDef.createReducerPart(conditionModel.source.reducer);\n        break;\n      }\n      case 'get-part-actions': {\n        var result = [];\n        for (var type of alertDef.reducerTypes) {\n          if (type.value !== conditionModel.source.reducer.type) {\n            result.push(type);\n          }\n        }\n        return this.$q.when(result);\n      }\n    }\n  }\n\n  addCondition(type) {\n    var condition = this.buildDefaultCondition();\n    // add to persited model\n    this.alert.conditions.push(condition);\n    // add to view model\n    this.conditionModels.push(this.buildConditionModel(condition));\n  }\n\n  removeCondition(index) {\n    this.alert.conditions.splice(index, 1);\n    this.conditionModels.splice(index, 1);\n  }\n\n  delete() {\n    appEvents.emit('confirm-modal', {\n      title: '删除报警',\n      text: '确定希望删除这条报警规则?',\n      text2: '需要保存仪表盘使删除生效',\n      icon: 'fa-trash',\n      yesText: '删除',\n      onConfirm: () => {\n        delete this.panel.alert;\n        this.alert = null;\n        this.panel.thresholds = [];\n        this.conditionModels = [];\n        this.panelCtrl.alertState = null;\n        this.panelCtrl.render();\n      },\n    });\n  }\n\n  enable() {\n    this.panel.alert = {};\n    this.initModel();\n  }\n\n  evaluatorParamsChanged() {\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n    this.panelCtrl.render();\n  }\n\n  evaluatorTypeChanged(evaluator) {\n    // ensure params array is correct length\n    switch (evaluator.type) {\n      case 'lt':\n      case 'gt': {\n        evaluator.params = [evaluator.params[0]];\n        break;\n      }\n      case 'within_range':\n      case 'outside_range': {\n        evaluator.params = [evaluator.params[0], evaluator.params[1]];\n        break;\n      }\n      case 'no_value': {\n        evaluator.params = [];\n      }\n    }\n\n    this.evaluatorParamsChanged();\n  }\n\n  clearHistory() {\n    appEvents.emit('confirm-modal', {\n      title: '删除历史状态',\n      text: '您确定要删除此警报的所有历史状态和注释吗?',\n      icon: 'fa-trash',\n      yesText: '是',\n      onConfirm: () => {\n        this.backendSrv\n          .post('/api/annotations/mass-delete', {\n            dashboardId: this.panelCtrl.dashboard.id,\n            panelId: this.panel.id,\n          })\n          .then(res => {\n            this.alertHistory = [];\n            this.panelCtrl.refresh();\n          });\n      },\n    });\n  }\n\n  test() {\n    this.testing = true;\n    this.testResult = false;\n\n    var payload = {\n      dashboard: this.dashboardSrv.getCurrent().getSaveModelClone(),\n      panelId: this.panelCtrl.panel.id,\n    };\n\n    return this.backendSrv.post('/api/alerts/test', payload).then(res => {\n      this.testResult = res;\n      this.testing = false;\n    });\n  }\n}\n\n/** @ngInject */\nexport function alertTab() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/features/alerting/partials/alert_tab.html',\n    controller: AlertTabCtrl,\n  };\n}\n","import { PanelCtrl } from 'app/features/panel/panel_ctrl';\nimport { MetricsPanelCtrl } from 'app/features/panel/metrics_panel_ctrl';\nimport { QueryCtrl } from 'app/features/panel/query_ctrl';\nimport { alertTab } from 'app/features/alerting/alert_tab_ctrl';\nimport { loadPluginCss } from 'app/features/plugins/plugin_loader';\n\nexport { PanelCtrl, MetricsPanelCtrl, QueryCtrl, alertTab, loadPluginCss };\n","import { isBoolean, isNumber, sortedUniq, sortedIndexOf, unescape as htmlUnescaped } from 'lodash';\nimport moment from 'moment';\nimport { saveAs } from 'file-saver';\nimport { isNullOrUndefined } from 'util';\n\nconst DEFAULT_DATETIME_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\nconst POINT_TIME_INDEX = 1;\nconst POINT_VALUE_INDEX = 0;\n\nconst END_COLUMN = ';';\nconst END_ROW = '\\r\\n';\nconst QUOTE = '\"';\nconst EXPORT_FILENAME = 'grafana_data_export.csv';\n\nfunction csvEscaped(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.split(QUOTE).join(QUOTE + QUOTE);\n}\n\nconst domParser = new DOMParser();\nfunction htmlDecoded(text) {\n  if (!text) {\n    return text;\n  }\n\n  const regexp = /&[^;]+;/g;\n  function htmlDecoded(value) {\n    const parsedDom = domParser.parseFromString(value, 'text/html');\n    return parsedDom.body.textContent;\n  }\n  return text.replace(regexp, htmlDecoded).replace(regexp, htmlDecoded);\n}\n\nfunction formatSpecialHeader(useExcelHeader) {\n  return useExcelHeader ? `sep=${END_COLUMN}${END_ROW}` : '';\n}\n\nfunction formatRow(row, addEndRowDelimiter = true) {\n  let text = '';\n  for (let i = 0; i < row.length; i += 1) {\n    if (isBoolean(row[i]) || isNullOrUndefined(row[i])) {\n      text += row[i];\n    } else if (isNumber(row[i])) {\n      text += row[i].toLocaleString();\n    } else {\n      text += `${QUOTE}${csvEscaped(htmlUnescaped(htmlDecoded(row[i])))}${QUOTE}`;\n    }\n\n    if (i < row.length - 1) {\n      text += END_COLUMN;\n    }\n  }\n  return addEndRowDelimiter ? text + END_ROW : text;\n}\n\nexport function convertSeriesListToCsv(seriesList, dateTimeFormat = DEFAULT_DATETIME_FORMAT, excel = false) {\n  let text = formatSpecialHeader(excel) + formatRow(['Series', 'Time', 'Value']);\n  for (let seriesIndex = 0; seriesIndex < seriesList.length; seriesIndex += 1) {\n    for (let i = 0; i < seriesList[seriesIndex].datapoints.length; i += 1) {\n      text += formatRow(\n        [\n          seriesList[seriesIndex].alias,\n          moment(seriesList[seriesIndex].datapoints[i][POINT_TIME_INDEX]).format(dateTimeFormat),\n          seriesList[seriesIndex].datapoints[i][POINT_VALUE_INDEX],\n        ],\n        i < seriesList[seriesIndex].datapoints.length - 1 || seriesIndex < seriesList.length - 1\n      );\n    }\n  }\n  return text;\n}\n\nexport function exportSeriesListToCsv(seriesList, dateTimeFormat = DEFAULT_DATETIME_FORMAT, excel = false) {\n  let text = convertSeriesListToCsv(seriesList, dateTimeFormat, excel);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function convertSeriesListToCsvColumns(seriesList, dateTimeFormat = DEFAULT_DATETIME_FORMAT, excel = false) {\n  // add header\n  let text =\n    formatSpecialHeader(excel) +\n    formatRow(\n      ['Time'].concat(\n        seriesList.map(function(val) {\n          return val.alias;\n        })\n      )\n    );\n  // process data\n  seriesList = mergeSeriesByTime(seriesList);\n\n  // make text\n  for (let i = 0; i < seriesList[0].datapoints.length; i += 1) {\n    const timestamp = moment(seriesList[0].datapoints[i][POINT_TIME_INDEX]).format(dateTimeFormat);\n    text += formatRow(\n      [timestamp].concat(\n        seriesList.map(function(series) {\n          return series.datapoints[i][POINT_VALUE_INDEX];\n        })\n      ),\n      i < seriesList[0].datapoints.length - 1\n    );\n  }\n\n  return text;\n}\n\n/**\n * Collect all unique timestamps from series list and use it to fill\n * missing points by null.\n */\nfunction mergeSeriesByTime(seriesList) {\n  let timestamps = [];\n  for (let i = 0; i < seriesList.length; i++) {\n    let seriesPoints = seriesList[i].datapoints;\n    for (let j = 0; j < seriesPoints.length; j++) {\n      timestamps.push(seriesPoints[j][POINT_TIME_INDEX]);\n    }\n  }\n  timestamps = sortedUniq(timestamps.sort());\n\n  for (let i = 0; i < seriesList.length; i++) {\n    let seriesPoints = seriesList[i].datapoints;\n    let seriesTimestamps = seriesPoints.map(p => p[POINT_TIME_INDEX]);\n    let extendedSeries = [];\n    let pointIndex;\n    for (let j = 0; j < timestamps.length; j++) {\n      pointIndex = sortedIndexOf(seriesTimestamps, timestamps[j]);\n      if (pointIndex !== -1) {\n        extendedSeries.push(seriesPoints[pointIndex]);\n      } else {\n        extendedSeries.push([null, timestamps[j]]);\n      }\n    }\n    seriesList[i].datapoints = extendedSeries;\n  }\n  return seriesList;\n}\n\nexport function exportSeriesListToCsvColumns(seriesList, dateTimeFormat = DEFAULT_DATETIME_FORMAT, excel = false) {\n  let text = convertSeriesListToCsvColumns(seriesList, dateTimeFormat, excel);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function convertTableDataToCsv(table, excel = false) {\n  let text = formatSpecialHeader(excel);\n  // add headline\n  text += formatRow(table.columns.map(val => val.title || val.text));\n  // process data\n  for (let i = 0; i < table.rows.length; i += 1) {\n    text += formatRow(table.rows[i], i < table.rows.length - 1);\n  }\n  return text;\n}\n\nexport function exportTableDataToCsv(table, excel = false) {\n  let text = convertTableDataToCsv(table, excel);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function saveSaveBlob(payload, fname) {\n  let blob = new Blob([payload], { type: 'text/csv;charset=utf-8;header=present;' });\n  saveAs(blob, fname);\n}\n","// Copyright (c) 2014, Hugh Kennedy\n// Based on code from https://github.com/hughsk/flat/blob/master/index.js\n//\nexport default function flatten(target, opts): any {\n  opts = opts || {};\n\n  var delimiter = opts.delimiter || '.';\n  var maxDepth = opts.maxDepth || 3;\n  var currentDepth = 1;\n  var output = {};\n\n  function step(object, prev) {\n    Object.keys(object).forEach(function(key) {\n      var value = object[key];\n      var isarray = opts.safe && Array.isArray(value);\n      var type = Object.prototype.toString.call(value);\n      var isobject = type === '[object Object]';\n\n      var newKey = prev ? prev + delimiter + key : key;\n\n      if (!opts.maxDepth) {\n        maxDepth = currentDepth + 1;\n      }\n\n      if (!isarray && isobject && Object.keys(value).length && currentDepth < maxDepth) {\n        ++currentDepth;\n        return step(value, newKey);\n      }\n\n      output[newKey] = value;\n    });\n  }\n\n  step(target, null);\n\n  return output;\n}\n","import _ from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    let match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    let compared = new SemVersion(version);\n    return !(this.major < compared.major || this.minor < compared.minor || this.patch < compared.patch);\n  }\n\n  isValid(): boolean {\n    return _.isNumber(this.major);\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  let a_semver = new SemVersion(a);\n  return a_semver.isGtOrEq(b);\n}\n","import _ from 'lodash';\nimport { isVersionGtOrEq } from 'app/core/utils/version';\n\nvar index = {};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  index[funcDef.name] = funcDef;\n  if (funcDef.shortName) {\n    index[funcDef.shortName] = funcDef;\n  }\n}\n\nvar optionalSeriesRefArgs = [{ name: 'other', type: 'value_or_series', optional: true, multiple: true }];\n\naddFuncDef({\n  name: 'scaleToSeconds',\n  category: 'Transform',\n  params: [{ name: 'seconds', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'perSecond',\n  category: 'Transform',\n  params: [{ name: 'max value', type: 'int', optional: true }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'holtWintersForecast',\n  category: 'Calculate',\n});\n\naddFuncDef({\n  name: 'holtWintersConfidenceBands',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'holtWintersAberration',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'nPercentile',\n  category: 'Calculate',\n  params: [{ name: 'Nth percentile', type: 'int' }],\n  defaultParams: [95],\n});\n\naddFuncDef({\n  name: 'diffSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'stddevSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'divideSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'multiplySeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'asPercent',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'group',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A', '#B'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  shortName: 'sum',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'averageSeries',\n  shortName: 'avg',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'rangeOfSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'percentileOfSeries',\n  category: 'Combine',\n  params: [{ name: 'n', type: 'int' }, { name: 'interpolate', type: 'boolean', options: ['true', 'false'] }],\n  defaultParams: [95, 'false'],\n});\n\naddFuncDef({\n  name: 'sumSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'maxSeries',\n  shortName: 'max',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'minSeries',\n  shortName: 'min',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'averageSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'alias',\n  category: 'Alias',\n  params: [{ name: 'alias', type: 'string' }],\n  defaultParams: ['alias'],\n});\n\naddFuncDef({\n  name: 'aliasSub',\n  category: 'Alias',\n  params: [{ name: 'search', type: 'string' }, { name: 'replace', type: 'string' }],\n  defaultParams: ['', '\\\\1'],\n});\n\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'average', 'min', 'max'],\n    },\n  ],\n  defaultParams: ['max'],\n});\n\naddFuncDef({\n  name: 'cumulative',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'groupByNode',\n  category: 'Combine',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n  ],\n  defaultParams: [3, 'sum'],\n});\n\naddFuncDef({\n  name: 'aliasByNode',\n  category: 'Alias',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'substr',\n  category: 'Special',\n  params: [\n    {\n      name: 'start',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'stop',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: [0, 0],\n});\n\naddFuncDef({\n  name: 'sortByName',\n  category: 'Sorting',\n  params: [\n    {\n      name: 'natural',\n      type: 'boolean',\n      options: ['true', 'false'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['false'],\n});\n\naddFuncDef({\n  name: 'sortByMaxima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByMinima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByTotal',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'aliasByMetric',\n  category: 'Alias',\n});\n\naddFuncDef({\n  name: 'randomWalk',\n  fake: true,\n  category: 'Special',\n  params: [{ name: 'name', type: 'string' }],\n  defaultParams: ['randomWalk'],\n});\n\naddFuncDef({\n  name: 'countSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'constantLine',\n  category: 'Special',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'cactiStyle',\n  category: 'Special',\n});\n\naddFuncDef({\n  name: 'keepLastValue',\n  category: 'Transform',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'changed',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'integral',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'derivative',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'nonNegativeDerivative',\n  category: 'Transform',\n  params: [{ name: 'max value or 0', type: 'int', optional: true }],\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Transform',\n  params: [\n    {\n      name: 'amount',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n});\n\naddFuncDef({\n  name: 'timeStack',\n  category: 'Transform',\n  params: [\n    {\n      name: 'timeShiftUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n    { name: 'timeShiftStart', type: 'int' },\n    { name: 'timeShiftEnd', type: 'int' },\n  ],\n  defaultParams: ['1d', 0, 7],\n});\n\naddFuncDef({\n  name: 'summarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n    {\n      name: 'alignToFrom',\n      type: 'boolean',\n      optional: true,\n      options: ['false', 'true'],\n    },\n  ],\n  defaultParams: ['1h', 'sum', 'false'],\n});\n\naddFuncDef({\n  name: 'smartSummarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['1h', 'sum'],\n});\n\naddFuncDef({\n  name: 'absolute',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'hitcount',\n  category: 'Transform',\n  params: [{ name: 'interval', type: 'string' }],\n  defaultParams: ['10s'],\n});\n\naddFuncDef({\n  name: 'log',\n  category: 'Transform',\n  params: [{ name: 'base', type: 'int' }],\n  defaultParams: ['10'],\n});\n\naddFuncDef({\n  name: 'averageAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'averageBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'maximumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'maximumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'limit',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'mostDeviant',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exclude',\n  category: 'Filter Series',\n  params: [{ name: 'exclude', type: 'string' }],\n  defaultParams: ['exclude'],\n});\n\naddFuncDef({\n  name: 'highestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'highestMax',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'movingMedian',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: ['5'],\n});\n\naddFuncDef({\n  name: 'stdev',\n  category: 'Calculate',\n  params: [{ name: 'n', type: 'int' }, { name: 'tolerance', type: 'int' }],\n  defaultParams: [5, 0.1],\n});\n\naddFuncDef({\n  name: 'highestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAbovePercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowPercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'useSeriesAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }, { name: 'search', type: 'string' }, { name: 'replace', type: 'string' }],\n  defaultParams: [0, 'search', 'replace'],\n});\n\n////////////////////\n// Graphite 1.0.x //\n////////////////////\n\naddFuncDef({\n  name: 'aggregateLine',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['avg'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'averageOutsidePercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'delay',\n  category: 'Transform',\n  params: [{ name: 'steps', type: 'int' }],\n  defaultParams: [1],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'fallbackSeries',\n  category: 'Special',\n  params: [{ name: 'fallback', type: 'string' }],\n  defaultParams: ['constantLine(0)'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'grep',\n  category: 'Filter Series',\n  params: [{ name: 'grep', type: 'string' }],\n  defaultParams: ['grep'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'groupByNodes',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: ['sum', 3],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'integralByInterval',\n  category: 'Transform',\n  params: [\n    {\n      name: 'intervalUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'interpolate',\n  category: 'Transform',\n  params: [{ name: 'limit', type: 'int', optional: true }],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'invert',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'isNonNull',\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'linearRegression',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'startSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n    {\n      name: 'endSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'mapSeries',\n  shortName: 'map',\n  params: [{ name: 'node', type: 'int' }],\n  defaultParams: [3],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMin',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMax',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingSum',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'multiplySeriesWithWildcards',\n  category: 'Combine',\n  params: [\n    {\n      name: 'position',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [2],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'offsetToZero',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'pow',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'powSeries',\n  category: 'Transform',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'reduceSeries',\n  shortName: 'reduce',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['asPercent', 'diffSeries', 'divideSeries'],\n    },\n    {\n      name: 'reduceNode',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n    },\n    { name: 'reduceMatchers', type: 'string', multiple: true },\n  ],\n  defaultParams: ['asPercent', 2, 'used_bytes'],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeBetweenPercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeEmptySeries',\n  category: 'Filter Series',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'squareRoot',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'timeSlice',\n  category: 'Transform',\n  params: [\n    {\n      name: 'startSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    },\n    {\n      name: 'endSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['-1h'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'weightedAverage',\n  category: 'Combine',\n  params: [\n    { name: 'other', type: 'value_or_series', optional: true },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: ['#A', 4],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'seriesByTag',\n  category: 'Special',\n  params: [{ name: 'tagExpression', type: 'string', multiple: true }],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'groupByTags',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    { name: 'tag', type: 'string', multiple: true },\n  ],\n  defaultParams: ['sum', 'tag'],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'aliasByTags',\n  category: 'Alias',\n  params: [{ name: 'tag', type: 'string', multiple: true }],\n  defaultParams: ['tag'],\n  version: '1.1',\n});\n\nfunction isVersionRelatedFunction(obj, graphiteVersion) {\n  return !obj.version || isVersionGtOrEq(graphiteVersion, obj.version);\n}\n\nexport class FuncInstance {\n  def: any;\n  params: any;\n  text: any;\n  added: boolean;\n\n  constructor(funcDef, options) {\n    this.def = funcDef;\n    this.params = [];\n\n    if (options && options.withDefaultParams) {\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  render(metricExp) {\n    var str = this.def.name + '(';\n\n    var parameters = _.map(\n      this.params,\n      function(value, index) {\n        var paramType;\n        if (index < this.def.params.length) {\n          paramType = this.def.params[index].type;\n        } else if (_.get(_.last(this.def.params), 'multiple')) {\n          paramType = _.get(_.last(this.def.params), 'type');\n        }\n        if (paramType === 'value_or_series') {\n          return value;\n        }\n        if (paramType === 'boolean' && _.includes(['true', 'false'], value)) {\n          return value;\n        }\n        if (_.includes(['int', 'float', 'int_or_interval', 'node_or_tag', 'node'], paramType) && _.isFinite(+value)) {\n          return _.toString(+value);\n        }\n        return \"'\" + value + \"'\";\n      }.bind(this)\n    );\n\n    // don't send any blank parameters to graphite\n    while (parameters[parameters.length - 1] === '') {\n      parameters.pop();\n    }\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    if (this.def.params[index + 1] && this.def.params[index + 1].optional) {\n      return true;\n    }\n\n    if (index + 1 >= this.def.params.length && _.get(_.last(this.def.params), 'multiple')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(\n        strValue.split(','),\n        function(partVal, idx) {\n          this.updateParam(partVal.trim(), index + idx);\n        }.bind(this)\n      );\n      return;\n    }\n\n    if (strValue === '' && (index >= this.def.params.length || this.def.params[index].optional)) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    var text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nfunction createFuncInstance(funcDef, options?, idx?) {\n  if (_.isString(funcDef)) {\n    funcDef = getFuncDef(funcDef, idx);\n  }\n  return new FuncInstance(funcDef, options);\n}\n\nfunction getFuncDef(name, idx?) {\n  if (!(idx || index)[name]) {\n    throw { message: 'Method not found ' + name };\n  }\n  return (idx || index)[name];\n}\n\nfunction getFuncDefs(graphiteVersion, idx?) {\n  var funcs = {};\n  _.forEach(idx || index, function(funcDef) {\n    if (isVersionRelatedFunction(funcDef, graphiteVersion)) {\n      funcs[funcDef.name] = _.assign({}, funcDef, {\n        params: _.filter(funcDef.params, function(param) {\n          return isVersionRelatedFunction(param, graphiteVersion);\n        }),\n      });\n    }\n  });\n  return funcs;\n}\n\n// parse response from graphite /functions endpoint into internal format\nfunction parseFuncDefs(rawDefs) {\n  var funcDefs = {};\n\n  _.forEach(rawDefs || {}, (funcDef, funcName) => {\n    // skip graphite graph functions\n    if (funcDef.group === 'Graph') {\n      return;\n    }\n\n    var description = funcDef.description;\n    if (description) {\n      // tidy up some pydoc syntax that rst2html can't handle\n      description = description\n        .replace(/:py:func:`(.+)( <[^>]*>)?`/g, '``$1``')\n        .replace(/.. seealso:: /g, 'See also: ')\n        .replace(/.. code-block *:: *none/g, '.. code-block::');\n    }\n\n    var func = {\n      name: funcDef.name,\n      description: description,\n      category: funcDef.group,\n      params: [],\n      defaultParams: [],\n      fake: false,\n    };\n\n    // get rid of the first \"seriesList\" param\n    if (/^seriesLists?$/.test(_.get(funcDef, 'params[0].type', ''))) {\n      // handle functions that accept multiple seriesLists\n      // we leave the param in place but mark it optional, so users can add more series if they wish\n      if (funcDef.params[0].multiple) {\n        funcDef.params[0].required = false;\n        // otherwise chop off the first param, it'll be handled separately\n      } else {\n        funcDef.params.shift();\n      }\n      // tag function as fake\n    } else {\n      func.fake = true;\n    }\n\n    _.forEach(funcDef.params, rawParam => {\n      var param = {\n        name: rawParam.name,\n        type: 'string',\n        optional: !rawParam.required,\n        multiple: !!rawParam.multiple,\n        options: undefined,\n      };\n\n      if (rawParam.default !== undefined) {\n        func.defaultParams.push(_.toString(rawParam.default));\n      } else if (rawParam.suggestions) {\n        func.defaultParams.push(_.toString(rawParam.suggestions[0]));\n      } else {\n        func.defaultParams.push('');\n      }\n\n      if (rawParam.type === 'boolean') {\n        param.type = 'boolean';\n        param.options = ['true', 'false'];\n      } else if (rawParam.type === 'integer') {\n        param.type = 'int';\n      } else if (rawParam.type === 'float') {\n        param.type = 'float';\n      } else if (rawParam.type === 'node') {\n        param.type = 'node';\n        param.options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'nodeOrTag') {\n        param.type = 'node_or_tag';\n        param.options = ['name', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'intOrInterval') {\n        param.type = 'int_or_interval';\n      } else if (rawParam.type === 'seriesList') {\n        param.type = 'value_or_series';\n      }\n\n      if (rawParam.options) {\n        param.options = _.map(rawParam.options, _.toString);\n      } else if (rawParam.suggestions) {\n        param.options = _.map(rawParam.suggestions, _.toString);\n      }\n\n      func.params.push(param);\n    });\n\n    funcDefs[funcName] = func;\n  });\n\n  return funcDefs;\n}\n\nexport default {\n  createFuncInstance: createFuncInstance,\n  getFuncDef: getFuncDef,\n  getFuncDefs: getFuncDefs,\n  parseFuncDefs: parseFuncDefs,\n};\n","import _ from 'lodash';\nimport * as dateMath from 'app/core/utils/datemath';\nimport { isVersionGtOrEq, SemVersion } from 'app/core/utils/version';\nimport gfunc from './gfunc';\n\n/** @ngInject */\nexport function GraphiteDatasource(instanceSettings, $q, backendSrv, templateSrv) {\n  this.basicAuth = instanceSettings.basicAuth;\n  this.url = instanceSettings.url;\n  this.name = instanceSettings.name;\n  this.graphiteVersion = instanceSettings.jsonData.graphiteVersion || '0.9';\n  this.supportsTags = supportsTags(this.graphiteVersion);\n  this.cacheTimeout = instanceSettings.cacheTimeout;\n  this.withCredentials = instanceSettings.withCredentials;\n  this.render_method = instanceSettings.render_method || 'POST';\n  this.funcDefs = null;\n  this.funcDefsPromise = null;\n\n  this.getQueryOptionsInfo = function() {\n    return {\n      maxDataPoints: true,\n      cacheTimeout: true,\n      links: [\n        {\n          text: '帮助',\n          url: 'http://docs.grafana.org/features/datasources/graphite/#using-graphite-in-grafana',\n        },\n      ],\n    };\n  };\n\n  this.query = function(options) {\n    var graphOptions = {\n      from: this.translateTime(options.rangeRaw.from, false),\n      until: this.translateTime(options.rangeRaw.to, true),\n      targets: options.targets,\n      format: options.format,\n      cacheTimeout: options.cacheTimeout || this.cacheTimeout,\n      maxDataPoints: options.maxDataPoints,\n    };\n\n    var params = this.buildGraphiteParams(graphOptions, options.scopedVars);\n    if (params.length === 0) {\n      return $q.when({ data: [] });\n    }\n\n    var httpOptions: any = {\n      method: 'POST',\n      url: '/render',\n      data: params.join('&'),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    this.addTracingHeaders(httpOptions, options);\n\n    if (options.panelId) {\n      httpOptions.requestId = this.name + '.panelId.' + options.panelId;\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(this.convertDataPointsToMs);\n  };\n\n  this.addTracingHeaders = function(httpOptions, options) {\n    var proxyMode = !this.url.match(/^http/);\n    if (proxyMode) {\n      httpOptions.headers['X-Dashboard-Id'] = options.dashboardId;\n      httpOptions.headers['X-Panel-Id'] = options.panelId;\n    }\n  };\n\n  this.convertDataPointsToMs = function(result) {\n    if (!result || !result.data) {\n      return [];\n    }\n    for (var i = 0; i < result.data.length; i++) {\n      var series = result.data[i];\n      for (var y = 0; y < series.datapoints.length; y++) {\n        series.datapoints[y][1] *= 1000;\n      }\n    }\n    return result;\n  };\n\n  this.parseTags = function(tagString) {\n    let tags = [];\n    tags = tagString.split(',');\n    if (tags.length === 1) {\n      tags = tagString.split(' ');\n      if (tags[0] === '') {\n        tags = [];\n      }\n    }\n    return tags;\n  };\n\n  this.annotationQuery = function(options) {\n    // Graphite metric as annotation\n    if (options.annotation.target) {\n      var target = templateSrv.replace(options.annotation.target, {}, 'glob');\n      var graphiteQuery = {\n        rangeRaw: options.rangeRaw,\n        targets: [{ target: target }],\n        format: 'json',\n        maxDataPoints: 100,\n      };\n\n      return this.query(graphiteQuery).then(function(result) {\n        var list = [];\n\n        for (var i = 0; i < result.data.length; i++) {\n          var target = result.data[i];\n\n          for (var y = 0; y < target.datapoints.length; y++) {\n            var datapoint = target.datapoints[y];\n            if (!datapoint[0]) {\n              continue;\n            }\n\n            list.push({\n              annotation: options.annotation,\n              time: datapoint[1],\n              title: target.target,\n            });\n          }\n        }\n\n        return list;\n      });\n    } else {\n      // Graphite event as annotation\n      var tags = templateSrv.replace(options.annotation.tags);\n      return this.events({ range: options.rangeRaw, tags: tags }).then(results => {\n        var list = [];\n        for (var i = 0; i < results.data.length; i++) {\n          var e = results.data[i];\n\n          var tags = e.tags;\n          if (_.isString(e.tags)) {\n            tags = this.parseTags(e.tags);\n          }\n\n          list.push({\n            annotation: options.annotation,\n            time: e.when * 1000,\n            title: e.what,\n            tags: tags,\n            text: e.data,\n          });\n        }\n\n        return list;\n      });\n    }\n  };\n\n  this.events = function(options) {\n    try {\n      var tags = '';\n      if (options.tags) {\n        tags = '&tags=' + options.tags;\n      }\n      return this.doGraphiteRequest({\n        method: 'GET',\n        url:\n          '/events/get_data?from=' +\n          this.translateTime(options.range.from, false) +\n          '&until=' +\n          this.translateTime(options.range.to, true) +\n          tags,\n      });\n    } catch (err) {\n      return $q.reject(err);\n    }\n  };\n\n  this.targetContainsTemplate = function(target) {\n    return templateSrv.variableExists(target.target);\n  };\n\n  this.translateTime = function(date, roundUp) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now';\n      } else if (date.indexOf('now-') >= 0 && date.indexOf('/') === -1) {\n        date = date.substring(3);\n        date = date.replace('m', 'min');\n        date = date.replace('M', 'mon');\n        return date;\n      }\n      date = dateMath.parse(date, roundUp);\n    }\n\n    // graphite' s from filter is exclusive\n    // here we step back one minute in order\n    // to guarantee that we get all the data that\n    // exists for the specified range\n    if (roundUp) {\n      if (date.get('s')) {\n        date.add(1, 'm');\n      }\n    } else if (roundUp === false) {\n      if (date.get('s')) {\n        date.subtract(1, 'm');\n      }\n    }\n\n    return date.unix();\n  };\n\n  this.metricFindQuery = function(query, optionalOptions) {\n    let options = optionalOptions || {};\n    let interpolatedQuery = templateSrv.replace(query);\n\n    // special handling for tag_values(<tag>[,<expression>]*), this is used for template variables\n    let matches = interpolatedQuery.match(/^tag_values\\(([^,]+)((, *[^,]+)*)\\)$/);\n    if (matches) {\n      const expressions = [];\n      const exprRegex = /, *([^,]+)/g;\n      let match;\n      while ((match = exprRegex.exec(matches[2])) !== null) {\n        expressions.push(match[1]);\n      }\n      options.limit = 10000;\n      return this.getTagValuesAutoComplete(expressions, matches[1], undefined, options);\n    }\n\n    // special handling for tags(<expression>[,<expression>]*), this is used for template variables\n    matches = interpolatedQuery.match(/^tags\\(([^,]*)((, *[^,]+)*)\\)$/);\n    if (matches) {\n      const expressions = [];\n      if (matches[1]) {\n        expressions.push(matches[1]);\n        const exprRegex = /, *([^,]+)/g;\n        let match;\n        while ((match = exprRegex.exec(matches[2])) !== null) {\n          expressions.push(match[1]);\n        }\n      }\n      options.limit = 10000;\n      return this.getTagsAutoComplete(expressions, undefined, options);\n    }\n\n    let httpOptions: any = {\n      method: 'GET',\n      url: '/metrics/find',\n      params: {\n        query: interpolatedQuery,\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false);\n      httpOptions.params.until = this.translateTime(options.range.to, true);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(results => {\n      return _.map(results.data, metric => {\n        return {\n          text: metric.text,\n          expandable: metric.expandable ? true : false,\n        };\n      });\n    });\n  };\n\n  this.getTags = function(optionalOptions) {\n    let options = optionalOptions || {};\n\n    let httpOptions: any = {\n      method: 'GET',\n      url: '/tags',\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false);\n      httpOptions.params.until = this.translateTime(options.range.to, true);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(results => {\n      return _.map(results.data, tag => {\n        return {\n          text: tag.tag,\n          id: tag.id,\n        };\n      });\n    });\n  };\n\n  this.getTagValues = function(tag, optionalOptions) {\n    let options = optionalOptions || {};\n\n    let httpOptions: any = {\n      method: 'GET',\n      url: '/tags/' + templateSrv.replace(tag),\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false);\n      httpOptions.params.until = this.translateTime(options.range.to, true);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(results => {\n      if (results.data && results.data.values) {\n        return _.map(results.data.values, value => {\n          return {\n            text: value.value,\n            id: value.id,\n          };\n        });\n      } else {\n        return [];\n      }\n    });\n  };\n\n  this.getTagsAutoComplete = (expressions, tagPrefix, optionalOptions) => {\n    let options = optionalOptions || {};\n\n    let httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/tags',\n      params: {\n        expr: _.map(expressions, expression => templateSrv.replace((expression || '').trim())),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (tagPrefix) {\n      httpOptions.params.tagPrefix = tagPrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false);\n      httpOptions.params.until = this.translateTime(options.range.to, true);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(results => {\n      if (results.data) {\n        return _.map(results.data, tag => {\n          return { text: tag };\n        });\n      } else {\n        return [];\n      }\n    });\n  };\n\n  this.getTagValuesAutoComplete = (expressions, tag, valuePrefix, optionalOptions) => {\n    let options = optionalOptions || {};\n\n    let httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/values',\n      params: {\n        expr: _.map(expressions, expression => templateSrv.replace((expression || '').trim())),\n        tag: templateSrv.replace((tag || '').trim()),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (valuePrefix) {\n      httpOptions.params.valuePrefix = valuePrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false);\n      httpOptions.params.until = this.translateTime(options.range.to, true);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(results => {\n      if (results.data) {\n        return _.map(results.data, value => {\n          return { text: value };\n        });\n      } else {\n        return [];\n      }\n    });\n  };\n\n  this.getVersion = function(optionalOptions) {\n    let options = optionalOptions || {};\n\n    let httpOptions = {\n      method: 'GET',\n      url: '/version',\n      requestId: options.requestId,\n    };\n\n    return this.doGraphiteRequest(httpOptions)\n      .then(results => {\n        if (results.data) {\n          let semver = new SemVersion(results.data);\n          return semver.isValid() ? results.data : '';\n        }\n        return '';\n      })\n      .catch(() => {\n        return '';\n      });\n  };\n\n  this.createFuncInstance = function(funcDef, options?) {\n    return gfunc.createFuncInstance(funcDef, options, this.funcDefs);\n  };\n\n  this.getFuncDef = function(name) {\n    return gfunc.getFuncDef(name, this.funcDefs);\n  };\n\n  this.waitForFuncDefsLoaded = function() {\n    return this.getFuncDefs();\n  };\n\n  this.getFuncDefs = function() {\n    if (this.funcDefsPromise !== null) {\n      return this.funcDefsPromise;\n    }\n\n    if (!supportsFunctionIndex(this.graphiteVersion)) {\n      this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n      this.funcDefsPromise = Promise.resolve(this.funcDefs);\n      return this.funcDefsPromise;\n    }\n\n    let httpOptions = {\n      method: 'GET',\n      url: '/functions',\n    };\n\n    this.funcDefsPromise = this.doGraphiteRequest(httpOptions)\n      .then(results => {\n        if (results.status !== 200 || typeof results.data !== 'object') {\n          this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n        } else {\n          this.funcDefs = gfunc.parseFuncDefs(results.data);\n        }\n        return this.funcDefs;\n      })\n      .catch(err => {\n        console.log('Fetching graphite functions error', err);\n        this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n        return this.funcDefs;\n      });\n\n    return this.funcDefsPromise;\n  };\n\n  this.testDatasource = function() {\n    let query = {\n      panelId: 3,\n      rangeRaw: { from: 'now-1h', to: 'now' },\n      targets: [{ target: 'constantLine(100)' }],\n      maxDataPoints: 300,\n    };\n    return this.query(query).then(function() {\n      return { status: 'success', message: 'Data source is working' };\n    });\n  };\n\n  this.doGraphiteRequest = function(options) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = options.headers || {};\n      options.headers.Authorization = this.basicAuth;\n    }\n\n    options.url = this.url + options.url;\n    options.inspect = { type: 'graphite' };\n\n    return backendSrv.datasourceRequest(options);\n  };\n\n  this._seriesRefLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  this.buildGraphiteParams = function(options, scopedVars) {\n    var graphite_options = ['from', 'until', 'rawData', 'format', 'maxDataPoints', 'cacheTimeout'];\n    var clean_options = [],\n      targets = {};\n    var target, targetValue, i;\n    var regex = /\\#([A-Z])/g;\n    var intervalFormatFixRegex = /'(\\d+)m'/gi;\n    var hasTargets = false;\n\n    options['format'] = 'json';\n\n    function fixIntervalFormat(match) {\n      return match.replace('m', 'min').replace('M', 'mon');\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      if (!target.refId) {\n        target.refId = this._seriesRefLetters[i];\n      }\n\n      targetValue = templateSrv.replace(target.target, scopedVars);\n      targetValue = targetValue.replace(intervalFormatFixRegex, fixIntervalFormat);\n      targets[target.refId] = targetValue;\n    }\n\n    function nestedSeriesRegexReplacer(match, g1) {\n      return targets[g1] || match;\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      targetValue = targets[target.refId];\n      targetValue = targetValue.replace(regex, nestedSeriesRegexReplacer);\n      targets[target.refId] = targetValue;\n\n      if (!target.hide) {\n        hasTargets = true;\n        clean_options.push('target=' + encodeURIComponent(targetValue));\n      }\n    }\n\n    _.each(options, function(value, key) {\n      if (_.indexOf(graphite_options, key) === -1) {\n        return;\n      }\n      if (value) {\n        clean_options.push(key + '=' + encodeURIComponent(value));\n      }\n    });\n\n    if (!hasTargets) {\n      return [];\n    }\n\n    return clean_options;\n  };\n}\n\nfunction supportsTags(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n\nfunction supportsFunctionIndex(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport rst2html from 'rst2html';\nimport Drop from 'tether-drop';\n\n/** @ngInject */\nexport function graphiteAddFunc($compile) {\n  const inputTemplate =\n    '<input type=\"text\"' + ' class=\"gf-form-input\"' + ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const buttonTemplate =\n    '<a class=\"gf-form-label query-part dropdown-toggle\"' +\n    ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n    '<i class=\"fa fa-plus\"></i></a>';\n\n  return {\n    link: function($scope, elem) {\n      var ctrl = $scope.ctrl;\n\n      var $input = $(inputTemplate);\n      var $button = $(buttonTemplate);\n\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      ctrl.datasource.getFuncDefs().then(function(funcDefs) {\n        var allFunctions = _.map(funcDefs, 'name').sort();\n\n        $scope.functionMenu = createFunctionDropDownMenu(funcDefs);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function(value) {\n            var funcDef = ctrl.datasource.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) {\n                return '';\n              }\n            }\n\n            $scope.$apply(function() {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          },\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu won't\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      });\n\n      var drop;\n      var cleanUpDrop = function() {\n        if (drop) {\n          drop.destroy();\n          drop = null;\n        }\n      };\n\n      $(elem)\n        .on('mouseenter', 'ul.dropdown-menu li', function() {\n          cleanUpDrop();\n\n          var funcDef;\n          try {\n            funcDef = ctrl.datasource.getFuncDef($('a', this).text());\n          } catch (e) {\n            // ignore\n          }\n\n          if (funcDef && funcDef.description) {\n            var shortDesc = funcDef.description;\n            if (shortDesc.length > 500) {\n              shortDesc = shortDesc.substring(0, 497) + '...';\n            }\n\n            var contentElement = document.createElement('div');\n            contentElement.innerHTML = '<h4>' + funcDef.name + '</h4>' + rst2html(shortDesc);\n\n            drop = new Drop({\n              target: this,\n              content: contentElement,\n              classes: 'drop-popover',\n              openOn: 'always',\n              tetherOptions: {\n                attachment: 'bottom left',\n                targetAttachment: 'bottom right',\n              },\n            });\n          }\n        })\n        .on('mouseout', 'ul.dropdown-menu li', function() {\n          cleanUpDrop();\n        });\n\n      $scope.$on('$destroy', cleanUpDrop);\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('graphiteAddFunc', graphiteAddFunc);\n\nfunction createFunctionDropDownMenu(funcDefs) {\n  var categories = {};\n\n  _.forEach(funcDefs, function(funcDef) {\n    if (!funcDef.category) {\n      return;\n    }\n    if (!categories[funcDef.category]) {\n      categories[funcDef.category] = [];\n    }\n    categories[funcDef.category].push({\n      text: funcDef.name,\n      click: \"ctrl.addFunction('\" + funcDef.name + \"')\",\n    });\n  });\n\n  return _.sortBy(\n    _.map(categories, function(submenu, category) {\n      return {\n        text: category,\n        submenu: _.sortBy(submenu, 'text'),\n      };\n    }),\n    'text'\n  );\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport rst2html from 'rst2html';\n\n/** @ngInject */\nexport function graphiteFuncEditor($compile, templateSrv, popoverSrv) {\n  const funcSpanTemplate = '<a ng-click=\"\">{{func.def.name}}</a><span>(</span>';\n  const paramTemplate =\n    '<input type=\"text\" style=\"display:none\"' + ' class=\"input-small tight-form-func-param\"></input>';\n\n  const funcControlsTemplate = `\n    <div class=\"tight-form-func-controls\">\n      <span class=\"pointer fa fa-arrow-left\"></span>\n      <span class=\"pointer fa fa-question-circle\"></span>\n      <span class=\"pointer fa fa-remove\" ></span>\n      <span class=\"pointer fa fa-arrow-right\"></span>\n    </div>`;\n\n  return {\n    restrict: 'A',\n    link: function postLink($scope, elem) {\n      var $funcLink = $(funcSpanTemplate);\n      var $funcControls = $(funcControlsTemplate);\n      var ctrl = $scope.ctrl;\n      var func = $scope.func;\n      var scheduledRelink = false;\n      var paramCountAtLink = 0;\n      var cancelBlur = null;\n\n      function clickFuncParam(paramIndex) {\n        /*jshint validthis:true */\n\n        var $link = $(this);\n        var $comma = $link.prev('.comma');\n        var $input = $link.next();\n\n        $input.val(func.params[paramIndex]);\n\n        $comma.removeClass('query-part__last');\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        var typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function scheduledRelinkIfNeeded() {\n        if (paramCountAtLink === func.params.length) {\n          return;\n        }\n\n        if (!scheduledRelink) {\n          scheduledRelink = true;\n          setTimeout(function() {\n            relink();\n            scheduledRelink = false;\n          }, 200);\n        }\n      }\n\n      function paramDef(index) {\n        if (index < func.def.params.length) {\n          return func.def.params[index];\n        }\n        if (_.last(func.def.params).multiple) {\n          return _.assign({}, _.last(func.def.params), { optional: true });\n        }\n        return {};\n      }\n\n      function switchToLink(inputElem, paramIndex) {\n        /*jshint validthis:true */\n        var $input = $(inputElem);\n\n        clearTimeout(cancelBlur);\n        cancelBlur = null;\n\n        var $link = $input.prev();\n        var $comma = $link.prev('.comma');\n        var newValue = $input.val();\n\n        // remove optional empty params\n        if (newValue !== '' || paramDef(paramIndex).optional) {\n          func.updateParam(newValue, paramIndex);\n          $link.html(newValue ? templateSrv.highlightVariablesAsHtml(newValue) : '&nbsp;');\n        }\n\n        scheduledRelinkIfNeeded();\n\n        $scope.$apply(function() {\n          ctrl.targetChanged();\n        });\n\n        if ($link.hasClass('query-part__last') && newValue === '') {\n          $comma.addClass('query-part__last');\n        } else {\n          $link.removeClass('query-part__last');\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      // this = input element\n      function inputBlur(paramIndex) {\n        /*jshint validthis:true */\n        var inputElem = this;\n        // happens long before the click event on the typeahead options\n        // need to have long delay because the blur\n        cancelBlur = setTimeout(function() {\n          switchToLink(inputElem, paramIndex);\n        }, 200);\n      }\n\n      function inputKeyPress(paramIndex, e) {\n        /*jshint validthis:true */\n        if (e.which === 13) {\n          $(this).blur();\n        }\n      }\n\n      function inputKeyDown() {\n        /*jshint validthis:true */\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input, paramIndex) {\n        $input.attr('data-provide', 'typeahead');\n\n        var options = paramDef(paramIndex).options;\n        if (paramDef(paramIndex).type === 'int') {\n          options = _.map(options, function(val) {\n            return val.toString();\n          });\n        }\n\n        $input.typeahead({\n          source: options,\n          minLength: 0,\n          items: 20,\n          updater: function(value) {\n            $input.val(value);\n            switchToLink($input[0], paramIndex);\n            return value;\n          },\n        });\n\n        var typeahead = $input.data('typeahead');\n        typeahead.lookup = function() {\n          this.query = this.$element.val() || '';\n          return this.process(this.source);\n        };\n      }\n\n      function toggleFuncControls() {\n        var targetDiv = elem.closest('.tight-form');\n\n        if (elem.hasClass('show-function-controls')) {\n          elem.removeClass('show-function-controls');\n          targetDiv.removeClass('has-open-function');\n          $funcControls.hide();\n          return;\n        }\n\n        elem.addClass('show-function-controls');\n        targetDiv.addClass('has-open-function');\n\n        $funcControls.show();\n      }\n\n      function addElementsAndCompile() {\n        $funcControls.appendTo(elem);\n        $funcLink.appendTo(elem);\n\n        var defParams = _.clone(func.def.params);\n        var lastParam = _.last(func.def.params);\n\n        while (func.params.length >= defParams.length && lastParam && lastParam.multiple) {\n          defParams.push(_.assign({}, lastParam, { optional: true }));\n        }\n\n        _.each(defParams, function(param, index) {\n          if (param.optional && func.params.length < index) {\n            return false;\n          }\n\n          var paramValue = templateSrv.highlightVariablesAsHtml(func.params[index]);\n\n          var last = index >= func.params.length - 1 && param.optional && !paramValue;\n          if (last && param.multiple) {\n            paramValue = '+';\n          }\n\n          if (index > 0) {\n            $('<span class=\"comma' + (last ? ' query-part__last' : '') + '\">, </span>').appendTo(elem);\n          }\n\n          var $paramLink = $(\n            '<a ng-click=\"\" class=\"graphite-func-param-link' +\n              (last ? ' query-part__last' : '') +\n              '\">' +\n              (paramValue || '&nbsp;') +\n              '</a>'\n          );\n          var $input = $(paramTemplate);\n          $input.attr('placeholder', param.name);\n\n          paramCountAtLink++;\n\n          $paramLink.appendTo(elem);\n          $input.appendTo(elem);\n\n          $input.blur(_.partial(inputBlur, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(_.partial(inputKeyPress, index));\n          $paramLink.click(_.partial(clickFuncParam, index));\n\n          if (param.options) {\n            addTypeahead($input, index);\n          }\n\n          return true;\n        });\n\n        $('<span>)</span>').appendTo(elem);\n\n        $compile(elem.contents())($scope);\n      }\n\n      function ifJustAddedFocusFirstParam() {\n        if ($scope.func.added) {\n          $scope.func.added = false;\n          setTimeout(function() {\n            elem\n              .find('.graphite-func-param-link')\n              .first()\n              .click();\n          }, 10);\n        }\n      }\n\n      function registerFuncControlsToggle() {\n        $funcLink.click(toggleFuncControls);\n      }\n\n      function registerFuncControlsActions() {\n        $funcControls.click(function(e) {\n          var $target = $(e.target);\n          if ($target.hasClass('fa-remove')) {\n            toggleFuncControls();\n            $scope.$apply(function() {\n              ctrl.removeFunction($scope.func);\n            });\n            return;\n          }\n\n          if ($target.hasClass('fa-arrow-left')) {\n            $scope.$apply(function() {\n              _.move(ctrl.queryModel.functions, $scope.$index, $scope.$index - 1);\n              ctrl.targetChanged();\n            });\n            return;\n          }\n\n          if ($target.hasClass('fa-arrow-right')) {\n            $scope.$apply(function() {\n              _.move(ctrl.queryModel.functions, $scope.$index, $scope.$index + 1);\n              ctrl.targetChanged();\n            });\n            return;\n          }\n\n          if ($target.hasClass('fa-question-circle')) {\n            var funcDef = ctrl.datasource.getFuncDef(func.def.name);\n            if (funcDef && funcDef.description) {\n              popoverSrv.show({\n                element: e.target,\n                position: 'bottom left',\n                classNames: 'drop-popover drop-function-def',\n                template: `\n                  <div style=\"overflow:auto;max-height:30rem;\">\n                    <h4> ${funcDef.name} </h4>\n                    ${rst2html(funcDef.description)}\n                  </div>`,\n                openOn: 'click',\n              });\n            } else {\n              window.open(\n                'http://graphite.readthedocs.org/en/latest/functions.html#graphite.render.functions.' + func.def.name,\n                '_blank'\n              );\n            }\n            return;\n          }\n        });\n      }\n\n      function relink() {\n        elem.children().remove();\n\n        addElementsAndCompile();\n        ifJustAddedFocusFirstParam();\n        registerFuncControlsToggle();\n        registerFuncControlsActions();\n      }\n\n      relink();\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('graphiteFuncEditor', graphiteFuncEditor);\n","import _ from 'lodash';\n\n// This is auto generated from the unicode tables.\n// The tables are at:\n// http://www.fileformat.info/info/unicode/category/Lu/list.htm\n// http://www.fileformat.info/info/unicode/category/Ll/list.htm\n// http://www.fileformat.info/info/unicode/category/Lt/list.htm\n// http://www.fileformat.info/info/unicode/category/Lm/list.htm\n// http://www.fileformat.info/info/unicode/category/Lo/list.htm\n// http://www.fileformat.info/info/unicode/category/Nl/list.htm\n\nvar unicodeLetterTable = [\n  170,\n  170,\n  181,\n  181,\n  186,\n  186,\n  192,\n  214,\n  216,\n  246,\n  248,\n  705,\n  710,\n  721,\n  736,\n  740,\n  748,\n  748,\n  750,\n  750,\n  880,\n  884,\n  886,\n  887,\n  890,\n  893,\n  902,\n  902,\n  904,\n  906,\n  908,\n  908,\n  910,\n  929,\n  931,\n  1013,\n  1015,\n  1153,\n  1162,\n  1319,\n  1329,\n  1366,\n  1369,\n  1369,\n  1377,\n  1415,\n  1488,\n  1514,\n  1520,\n  1522,\n  1568,\n  1610,\n  1646,\n  1647,\n  1649,\n  1747,\n  1749,\n  1749,\n  1765,\n  1766,\n  1774,\n  1775,\n  1786,\n  1788,\n  1791,\n  1791,\n  1808,\n  1808,\n  1810,\n  1839,\n  1869,\n  1957,\n  1969,\n  1969,\n  1994,\n  2026,\n  2036,\n  2037,\n  2042,\n  2042,\n  2048,\n  2069,\n  2074,\n  2074,\n  2084,\n  2084,\n  2088,\n  2088,\n  2112,\n  2136,\n  2308,\n  2361,\n  2365,\n  2365,\n  2384,\n  2384,\n  2392,\n  2401,\n  2417,\n  2423,\n  2425,\n  2431,\n  2437,\n  2444,\n  2447,\n  2448,\n  2451,\n  2472,\n  2474,\n  2480,\n  2482,\n  2482,\n  2486,\n  2489,\n  2493,\n  2493,\n  2510,\n  2510,\n  2524,\n  2525,\n  2527,\n  2529,\n  2544,\n  2545,\n  2565,\n  2570,\n  2575,\n  2576,\n  2579,\n  2600,\n  2602,\n  2608,\n  2610,\n  2611,\n  2613,\n  2614,\n  2616,\n  2617,\n  2649,\n  2652,\n  2654,\n  2654,\n  2674,\n  2676,\n  2693,\n  2701,\n  2703,\n  2705,\n  2707,\n  2728,\n  2730,\n  2736,\n  2738,\n  2739,\n  2741,\n  2745,\n  2749,\n  2749,\n  2768,\n  2768,\n  2784,\n  2785,\n  2821,\n  2828,\n  2831,\n  2832,\n  2835,\n  2856,\n  2858,\n  2864,\n  2866,\n  2867,\n  2869,\n  2873,\n  2877,\n  2877,\n  2908,\n  2909,\n  2911,\n  2913,\n  2929,\n  2929,\n  2947,\n  2947,\n  2949,\n  2954,\n  2958,\n  2960,\n  2962,\n  2965,\n  2969,\n  2970,\n  2972,\n  2972,\n  2974,\n  2975,\n  2979,\n  2980,\n  2984,\n  2986,\n  2990,\n  3001,\n  3024,\n  3024,\n  3077,\n  3084,\n  3086,\n  3088,\n  3090,\n  3112,\n  3114,\n  3123,\n  3125,\n  3129,\n  3133,\n  3133,\n  3160,\n  3161,\n  3168,\n  3169,\n  3205,\n  3212,\n  3214,\n  3216,\n  3218,\n  3240,\n  3242,\n  3251,\n  3253,\n  3257,\n  3261,\n  3261,\n  3294,\n  3294,\n  3296,\n  3297,\n  3313,\n  3314,\n  3333,\n  3340,\n  3342,\n  3344,\n  3346,\n  3386,\n  3389,\n  3389,\n  3406,\n  3406,\n  3424,\n  3425,\n  3450,\n  3455,\n  3461,\n  3478,\n  3482,\n  3505,\n  3507,\n  3515,\n  3517,\n  3517,\n  3520,\n  3526,\n  3585,\n  3632,\n  3634,\n  3635,\n  3648,\n  3654,\n  3713,\n  3714,\n  3716,\n  3716,\n  3719,\n  3720,\n  3722,\n  3722,\n  3725,\n  3725,\n  3732,\n  3735,\n  3737,\n  3743,\n  3745,\n  3747,\n  3749,\n  3749,\n  3751,\n  3751,\n  3754,\n  3755,\n  3757,\n  3760,\n  3762,\n  3763,\n  3773,\n  3773,\n  3776,\n  3780,\n  3782,\n  3782,\n  3804,\n  3805,\n  3840,\n  3840,\n  3904,\n  3911,\n  3913,\n  3948,\n  3976,\n  3980,\n  4096,\n  4138,\n  4159,\n  4159,\n  4176,\n  4181,\n  4186,\n  4189,\n  4193,\n  4193,\n  4197,\n  4198,\n  4206,\n  4208,\n  4213,\n  4225,\n  4238,\n  4238,\n  4256,\n  4293,\n  4304,\n  4346,\n  4348,\n  4348,\n  4352,\n  4680,\n  4682,\n  4685,\n  4688,\n  4694,\n  4696,\n  4696,\n  4698,\n  4701,\n  4704,\n  4744,\n  4746,\n  4749,\n  4752,\n  4784,\n  4786,\n  4789,\n  4792,\n  4798,\n  4800,\n  4800,\n  4802,\n  4805,\n  4808,\n  4822,\n  4824,\n  4880,\n  4882,\n  4885,\n  4888,\n  4954,\n  4992,\n  5007,\n  5024,\n  5108,\n  5121,\n  5740,\n  5743,\n  5759,\n  5761,\n  5786,\n  5792,\n  5866,\n  5870,\n  5872,\n  5888,\n  5900,\n  5902,\n  5905,\n  5920,\n  5937,\n  5952,\n  5969,\n  5984,\n  5996,\n  5998,\n  6000,\n  6016,\n  6067,\n  6103,\n  6103,\n  6108,\n  6108,\n  6176,\n  6263,\n  6272,\n  6312,\n  6314,\n  6314,\n  6320,\n  6389,\n  6400,\n  6428,\n  6480,\n  6509,\n  6512,\n  6516,\n  6528,\n  6571,\n  6593,\n  6599,\n  6656,\n  6678,\n  6688,\n  6740,\n  6823,\n  6823,\n  6917,\n  6963,\n  6981,\n  6987,\n  7043,\n  7072,\n  7086,\n  7087,\n  7104,\n  7141,\n  7168,\n  7203,\n  7245,\n  7247,\n  7258,\n  7293,\n  7401,\n  7404,\n  7406,\n  7409,\n  7424,\n  7615,\n  7680,\n  7957,\n  7960,\n  7965,\n  7968,\n  8005,\n  8008,\n  8013,\n  8016,\n  8023,\n  8025,\n  8025,\n  8027,\n  8027,\n  8029,\n  8029,\n  8031,\n  8061,\n  8064,\n  8116,\n  8118,\n  8124,\n  8126,\n  8126,\n  8130,\n  8132,\n  8134,\n  8140,\n  8144,\n  8147,\n  8150,\n  8155,\n  8160,\n  8172,\n  8178,\n  8180,\n  8182,\n  8188,\n  8305,\n  8305,\n  8319,\n  8319,\n  8336,\n  8348,\n  8450,\n  8450,\n  8455,\n  8455,\n  8458,\n  8467,\n  8469,\n  8469,\n  8473,\n  8477,\n  8484,\n  8484,\n  8486,\n  8486,\n  8488,\n  8488,\n  8490,\n  8493,\n  8495,\n  8505,\n  8508,\n  8511,\n  8517,\n  8521,\n  8526,\n  8526,\n  8544,\n  8584,\n  11264,\n  11310,\n  11312,\n  11358,\n  11360,\n  11492,\n  11499,\n  11502,\n  11520,\n  11557,\n  11568,\n  11621,\n  11631,\n  11631,\n  11648,\n  11670,\n  11680,\n  11686,\n  11688,\n  11694,\n  11696,\n  11702,\n  11704,\n  11710,\n  11712,\n  11718,\n  11720,\n  11726,\n  11728,\n  11734,\n  11736,\n  11742,\n  11823,\n  11823,\n  12293,\n  12295,\n  12321,\n  12329,\n  12337,\n  12341,\n  12344,\n  12348,\n  12353,\n  12438,\n  12445,\n  12447,\n  12449,\n  12538,\n  12540,\n  12543,\n  12549,\n  12589,\n  12593,\n  12686,\n  12704,\n  12730,\n  12784,\n  12799,\n  13312,\n  13312,\n  19893,\n  19893,\n  19968,\n  19968,\n  40907,\n  40907,\n  40960,\n  42124,\n  42192,\n  42237,\n  42240,\n  42508,\n  42512,\n  42527,\n  42538,\n  42539,\n  42560,\n  42606,\n  42623,\n  42647,\n  42656,\n  42735,\n  42775,\n  42783,\n  42786,\n  42888,\n  42891,\n  42894,\n  42896,\n  42897,\n  42912,\n  42921,\n  43002,\n  43009,\n  43011,\n  43013,\n  43015,\n  43018,\n  43020,\n  43042,\n  43072,\n  43123,\n  43138,\n  43187,\n  43250,\n  43255,\n  43259,\n  43259,\n  43274,\n  43301,\n  43312,\n  43334,\n  43360,\n  43388,\n  43396,\n  43442,\n  43471,\n  43471,\n  43520,\n  43560,\n  43584,\n  43586,\n  43588,\n  43595,\n  43616,\n  43638,\n  43642,\n  43642,\n  43648,\n  43695,\n  43697,\n  43697,\n  43701,\n  43702,\n  43705,\n  43709,\n  43712,\n  43712,\n  43714,\n  43714,\n  43739,\n  43741,\n  43777,\n  43782,\n  43785,\n  43790,\n  43793,\n  43798,\n  43808,\n  43814,\n  43816,\n  43822,\n  43968,\n  44002,\n  44032,\n  44032,\n  55203,\n  55203,\n  55216,\n  55238,\n  55243,\n  55291,\n  63744,\n  64045,\n  64048,\n  64109,\n  64112,\n  64217,\n  64256,\n  64262,\n  64275,\n  64279,\n  64285,\n  64285,\n  64287,\n  64296,\n  64298,\n  64310,\n  64312,\n  64316,\n  64318,\n  64318,\n  64320,\n  64321,\n  64323,\n  64324,\n  64326,\n  64433,\n  64467,\n  64829,\n  64848,\n  64911,\n  64914,\n  64967,\n  65008,\n  65019,\n  65136,\n  65140,\n  65142,\n  65276,\n  65313,\n  65338,\n  65345,\n  65370,\n  65382,\n  65470,\n  65474,\n  65479,\n  65482,\n  65487,\n  65490,\n  65495,\n  65498,\n  65500,\n  65536,\n  65547,\n  65549,\n  65574,\n  65576,\n  65594,\n  65596,\n  65597,\n  65599,\n  65613,\n  65616,\n  65629,\n  65664,\n  65786,\n  65856,\n  65908,\n  66176,\n  66204,\n  66208,\n  66256,\n  66304,\n  66334,\n  66352,\n  66378,\n  66432,\n  66461,\n  66464,\n  66499,\n  66504,\n  66511,\n  66513,\n  66517,\n  66560,\n  66717,\n  67584,\n  67589,\n  67592,\n  67592,\n  67594,\n  67637,\n  67639,\n  67640,\n  67644,\n  67644,\n  67647,\n  67669,\n  67840,\n  67861,\n  67872,\n  67897,\n  68096,\n  68096,\n  68112,\n  68115,\n  68117,\n  68119,\n  68121,\n  68147,\n  68192,\n  68220,\n  68352,\n  68405,\n  68416,\n  68437,\n  68448,\n  68466,\n  68608,\n  68680,\n  69635,\n  69687,\n  69763,\n  69807,\n  73728,\n  74606,\n  74752,\n  74850,\n  77824,\n  78894,\n  92160,\n  92728,\n  110592,\n  110593,\n  119808,\n  119892,\n  119894,\n  119964,\n  119966,\n  119967,\n  119970,\n  119970,\n  119973,\n  119974,\n  119977,\n  119980,\n  119982,\n  119993,\n  119995,\n  119995,\n  119997,\n  120003,\n  120005,\n  120069,\n  120071,\n  120074,\n  120077,\n  120084,\n  120086,\n  120092,\n  120094,\n  120121,\n  120123,\n  120126,\n  120128,\n  120132,\n  120134,\n  120134,\n  120138,\n  120144,\n  120146,\n  120485,\n  120488,\n  120512,\n  120514,\n  120538,\n  120540,\n  120570,\n  120572,\n  120596,\n  120598,\n  120628,\n  120630,\n  120654,\n  120656,\n  120686,\n  120688,\n  120712,\n  120714,\n  120744,\n  120746,\n  120770,\n  120772,\n  120779,\n  131072,\n  131072,\n  173782,\n  173782,\n  173824,\n  173824,\n  177972,\n  177972,\n  177984,\n  177984,\n  178205,\n  178205,\n  194560,\n  195101,\n];\n\nvar identifierStartTable = [];\n\nfor (var i = 0; i < 128; i++) {\n  identifierStartTable[i] =\n    (i >= 48 && i <= 57) || // 0-9\n    i === 36 || // $\n    i === 126 || // ~\n    i === 124 || // |\n    (i >= 65 && i <= 90) || // A-Z\n    i === 95 || // _\n    i === 45 || // -\n    i === 42 || // *\n    i === 58 || // :\n    i === 91 || // templateStart [\n    i === 93 || // templateEnd ]\n    i === 63 || // ?\n    i === 37 || // %\n    i === 35 || // #\n    i === 61 || // =\n    (i >= 97 && i <= 122); // a-z\n}\n\nvar identifierPartTable = identifierStartTable;\n\nexport function Lexer(expression) {\n  this.input = expression;\n  this.char = 1;\n  this.from = 1;\n}\n\nLexer.prototype = {\n  peek: function(i) {\n    return this.input.charAt(i || 0);\n  },\n\n  skip: function(i) {\n    i = i || 1;\n    this.char += i;\n    this.input = this.input.slice(i);\n  },\n\n  tokenize: function() {\n    var list = [];\n    var token;\n    while ((token = this.next())) {\n      list.push(token);\n    }\n    return list;\n  },\n\n  next: function() {\n    this.from = this.char;\n\n    // Move to the next non-space character.\n    if (/\\s/.test(this.peek())) {\n      while (/\\s/.test(this.peek())) {\n        this.from += 1;\n        this.skip();\n      }\n\n      if (this.peek() === '') {\n        // EOL\n        return null;\n      }\n    }\n\n    var match = this.scanStringLiteral();\n    if (match) {\n      return match;\n    }\n\n    match = this.scanPunctuator() || this.scanNumericLiteral() || this.scanIdentifier() || this.scanTemplateSequence();\n\n    if (match) {\n      this.skip(match.value.length);\n      return match;\n    }\n\n    // No token could be matched, give up.\n    return null;\n  },\n\n  scanTemplateSequence: function() {\n    if (this.peek() === '[' && this.peek(1) === '[') {\n      return {\n        type: 'templateStart',\n        value: '[[',\n        pos: this.char,\n      };\n    }\n\n    if (this.peek() === ']' && this.peek(1) === ']') {\n      return {\n        type: 'templateEnd',\n        value: '[[',\n        pos: this.char,\n      };\n    }\n\n    return null;\n  },\n\n  /*\n   * Extract a JavaScript identifier out of the next sequence of\n   * characters or return 'null' if its not possible. In addition,\n   * to Identifier this method can also produce BooleanLiteral\n   * (true/false) and NullLiteral (null).\n   */\n  scanIdentifier: function() {\n    var id = '';\n    var index = 0;\n    var type, char;\n\n    // Detects any character in the Unicode categories \"Uppercase\n    // letter (Lu)\", \"Lowercase letter (Ll)\", \"Titlecase letter\n    // (Lt)\", \"Modifier letter (Lm)\", \"Other letter (Lo)\", or\n    // \"Letter number (Nl)\".\n    //\n    // Both approach and unicodeLetterTable were borrowed from\n    // Google's Traceur.\n\n    function isUnicodeLetter(code) {\n      for (var i = 0; i < unicodeLetterTable.length; ) {\n        if (code < unicodeLetterTable[i++]) {\n          return false;\n        }\n\n        if (code <= unicodeLetterTable[i++]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    function isHexDigit(str) {\n      return /^[0-9a-fA-F]$/.test(str);\n    }\n\n    var readUnicodeEscapeSequence = _.bind(function() {\n      /*jshint validthis:true */\n      index += 1;\n\n      if (this.peek(index) !== 'u') {\n        return null;\n      }\n\n      var ch1 = this.peek(index + 1);\n      var ch2 = this.peek(index + 2);\n      var ch3 = this.peek(index + 3);\n      var ch4 = this.peek(index + 4);\n      var code;\n\n      if (isHexDigit(ch1) && isHexDigit(ch2) && isHexDigit(ch3) && isHexDigit(ch4)) {\n        code = parseInt(ch1 + ch2 + ch3 + ch4, 16);\n\n        if (isUnicodeLetter(code)) {\n          index += 5;\n          return '\\\\u' + ch1 + ch2 + ch3 + ch4;\n        }\n\n        return null;\n      }\n\n      return null;\n    }, this);\n\n    var getIdentifierStart = _.bind(function() {\n      /*jshint validthis:true */\n      var chr = this.peek(index);\n      var code = chr.charCodeAt(0);\n\n      if (chr === '*') {\n        index += 1;\n        return chr;\n      }\n\n      if (code === 92) {\n        return readUnicodeEscapeSequence();\n      }\n\n      if (code < 128) {\n        if (identifierStartTable[code]) {\n          index += 1;\n          return chr;\n        }\n\n        return null;\n      }\n\n      if (isUnicodeLetter(code)) {\n        index += 1;\n        return chr;\n      }\n\n      return null;\n    }, this);\n\n    var getIdentifierPart = _.bind(function() {\n      /*jshint validthis:true */\n      var chr = this.peek(index);\n      var code = chr.charCodeAt(0);\n\n      if (code === 92) {\n        return readUnicodeEscapeSequence();\n      }\n\n      if (code < 128) {\n        if (identifierPartTable[code]) {\n          index += 1;\n          return chr;\n        }\n\n        return null;\n      }\n\n      if (isUnicodeLetter(code)) {\n        index += 1;\n        return chr;\n      }\n\n      return null;\n    }, this);\n\n    char = getIdentifierStart();\n    if (char === null) {\n      return null;\n    }\n\n    id = char;\n    for (;;) {\n      char = getIdentifierPart();\n\n      if (char === null) {\n        break;\n      }\n\n      id += char;\n    }\n\n    switch (id) {\n      case 'true': {\n        type = 'bool';\n        break;\n      }\n      case 'false': {\n        type = 'bool';\n        break;\n      }\n      default:\n        type = 'identifier';\n    }\n\n    return {\n      type: type,\n      value: id,\n      pos: this.char,\n    };\n  },\n\n  /*\n   * Extract a numeric literal out of the next sequence of\n   * characters or return 'null' if its not possible. This method\n   * supports all numeric literals described in section 7.8.3\n   * of the EcmaScript 5 specification.\n   *\n   * This method's implementation was heavily influenced by the\n   * scanNumericLiteral function in the Esprima parser's source code.\n   */\n  scanNumericLiteral: function(): any {\n    var index = 0;\n    var value = '';\n    var length = this.input.length;\n    var char = this.peek(index);\n    var bad;\n\n    function isDecimalDigit(str) {\n      return /^[0-9]$/.test(str);\n    }\n\n    function isOctalDigit(str) {\n      return /^[0-7]$/.test(str);\n    }\n\n    function isHexDigit(str) {\n      return /^[0-9a-fA-F]$/.test(str);\n    }\n\n    function isIdentifierStart(ch) {\n      return ch === '$' || ch === '_' || ch === '\\\\' || (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n    }\n\n    // handle negative num literals\n    if (char === '-') {\n      value += char;\n      index += 1;\n      char = this.peek(index);\n    }\n\n    // Numbers must start either with a decimal digit or a point.\n    if (char !== '.' && !isDecimalDigit(char)) {\n      return null;\n    }\n\n    if (char !== '.') {\n      value += this.peek(index);\n      index += 1;\n      char = this.peek(index);\n\n      if (value === '0') {\n        // Base-16 numbers.\n        if (char === 'x' || char === 'X') {\n          index += 1;\n          value += char;\n\n          while (index < length) {\n            char = this.peek(index);\n            if (!isHexDigit(char)) {\n              break;\n            }\n            value += char;\n            index += 1;\n          }\n\n          if (value.length <= 2) {\n            // 0x\n            return {\n              type: 'number',\n              value: value,\n              isMalformed: true,\n              pos: this.char,\n            };\n          }\n\n          if (index < length) {\n            char = this.peek(index);\n            if (isIdentifierStart(char)) {\n              return null;\n            }\n          }\n\n          return {\n            type: 'number',\n            value: value,\n            base: 16,\n            isMalformed: false,\n            pos: this.char,\n          };\n        }\n\n        // Base-8 numbers.\n        if (isOctalDigit(char)) {\n          index += 1;\n          value += char;\n          bad = false;\n\n          while (index < length) {\n            char = this.peek(index);\n\n            // Numbers like '019' (note the 9) are not valid octals\n            // but we still parse them and mark as malformed.\n\n            if (isDecimalDigit(char)) {\n              bad = true;\n            }\n            if (!isOctalDigit(char)) {\n              // if the char is a non punctuator then its not a valid number\n              if (!this.isPunctuator(char)) {\n                return null;\n              }\n              break;\n            }\n            value += char;\n            index += 1;\n          }\n\n          if (index < length) {\n            char = this.peek(index);\n            if (isIdentifierStart(char)) {\n              return null;\n            }\n          }\n\n          return {\n            type: 'number',\n            value: value,\n            base: 8,\n            isMalformed: bad,\n          };\n        }\n\n        // Decimal numbers that start with '0' such as '09' are illegal\n        // but we still parse them and return as malformed.\n\n        if (isDecimalDigit(char)) {\n          index += 1;\n          value += char;\n        }\n      }\n\n      while (index < length) {\n        char = this.peek(index);\n        if (!isDecimalDigit(char)) {\n          break;\n        }\n        value += char;\n        index += 1;\n      }\n    }\n\n    // Decimal digits.\n\n    if (char === '.') {\n      value += char;\n      index += 1;\n\n      while (index < length) {\n        char = this.peek(index);\n        if (!isDecimalDigit(char)) {\n          break;\n        }\n        value += char;\n        index += 1;\n      }\n    }\n\n    // Exponent part.\n\n    if (char === 'e' || char === 'E') {\n      value += char;\n      index += 1;\n      char = this.peek(index);\n\n      if (char === '+' || char === '-') {\n        value += this.peek(index);\n        index += 1;\n      }\n\n      char = this.peek(index);\n      if (isDecimalDigit(char)) {\n        value += char;\n        index += 1;\n\n        while (index < length) {\n          char = this.peek(index);\n          if (!isDecimalDigit(char)) {\n            break;\n          }\n          value += char;\n          index += 1;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    if (index < length) {\n      char = this.peek(index);\n      if (!this.isPunctuator(char)) {\n        return null;\n      }\n    }\n\n    return {\n      type: 'number',\n      value: value,\n      base: 10,\n      pos: this.char,\n      isMalformed: !isFinite(+value),\n    };\n  },\n\n  isPunctuator: function(ch1) {\n    switch (ch1) {\n      case '.':\n      case '(':\n      case ')':\n      case ',':\n      case '{':\n      case '}':\n        return true;\n    }\n\n    return false;\n  },\n\n  scanPunctuator: function() {\n    var ch1 = this.peek();\n\n    if (this.isPunctuator(ch1)) {\n      return {\n        type: ch1,\n        value: ch1,\n        pos: this.char,\n      };\n    }\n\n    return null;\n  },\n\n  /*\n   * Extract a string out of the next sequence of characters and/or\n   * lines or return 'null' if its not possible. Since strings can\n   * span across multiple lines this method has to move the char\n   * pointer.\n   *\n   * This method recognizes pseudo-multiline JavaScript strings:\n   *\n   *   var str = \"hello\\\n   *   world\";\n   */\n  scanStringLiteral: function() {\n    /*jshint loopfunc:true */\n    var quote = this.peek();\n\n    // String must start with a quote.\n    if (quote !== '\"' && quote !== \"'\") {\n      return null;\n    }\n\n    var value = '';\n\n    this.skip();\n\n    while (this.peek() !== quote) {\n      if (this.peek() === '') {\n        // End Of Line\n        return {\n          type: 'string',\n          value: value,\n          isUnclosed: true,\n          quote: quote,\n          pos: this.char,\n        };\n      }\n\n      var char = this.peek();\n      var jump = 1; // A length of a jump, after we're done\n      // parsing this character.\n\n      value += char;\n      this.skip(jump);\n    }\n\n    this.skip();\n    return {\n      type: 'string',\n      value: value,\n      isUnclosed: false,\n      quote: quote,\n      pos: this.char,\n    };\n  },\n};\n","import { Lexer } from './lexer';\n\nexport function Parser(expression) {\n  this.expression = expression;\n  this.lexer = new Lexer(expression);\n  this.tokens = this.lexer.tokenize();\n  this.index = 0;\n}\n\nParser.prototype = {\n  getAst: function() {\n    return this.start();\n  },\n\n  start: function() {\n    try {\n      return this.functionCall() || this.metricExpression();\n    } catch (e) {\n      return {\n        type: 'error',\n        message: e.message,\n        pos: e.pos,\n      };\n    }\n  },\n\n  curlyBraceSegment: function() {\n    if (this.match('identifier', '{') || this.match('{')) {\n      var curlySegment = '';\n\n      while (!this.match('') && !this.match('}')) {\n        curlySegment += this.consumeToken().value;\n      }\n\n      if (!this.match('}')) {\n        this.errorMark(\"Expected closing '}'\");\n      }\n\n      curlySegment += this.consumeToken().value;\n\n      // if curly segment is directly followed by identifier\n      // include it in the segment\n      if (this.match('identifier')) {\n        curlySegment += this.consumeToken().value;\n      }\n\n      return {\n        type: 'segment',\n        value: curlySegment,\n      };\n    } else {\n      return null;\n    }\n  },\n\n  metricSegment: function() {\n    var curly = this.curlyBraceSegment();\n    if (curly) {\n      return curly;\n    }\n\n    if (this.match('identifier') || this.match('number')) {\n      // hack to handle float numbers in metric segments\n      var parts = this.consumeToken().value.split('.');\n      if (parts.length === 2) {\n        this.tokens.splice(this.index, 0, { type: '.' });\n        this.tokens.splice(this.index + 1, 0, {\n          type: 'number',\n          value: parts[1],\n        });\n      }\n\n      return {\n        type: 'segment',\n        value: parts[0],\n      };\n    }\n\n    if (!this.match('templateStart')) {\n      this.errorMark('Expected metric identifier');\n    }\n\n    this.consumeToken();\n\n    if (!this.match('identifier')) {\n      this.errorMark('Expected identifier after templateStart');\n    }\n\n    var node = {\n      type: 'template',\n      value: this.consumeToken().value,\n    };\n\n    if (!this.match('templateEnd')) {\n      this.errorMark('Expected templateEnd');\n    }\n\n    this.consumeToken();\n    return node;\n  },\n\n  metricExpression: function() {\n    if (!this.match('templateStart') && !this.match('identifier') && !this.match('number') && !this.match('{')) {\n      return null;\n    }\n\n    var node = {\n      type: 'metric',\n      segments: [],\n    };\n\n    node.segments.push(this.metricSegment());\n\n    while (this.match('.')) {\n      this.consumeToken();\n\n      var segment = this.metricSegment();\n      if (!segment) {\n        this.errorMark('Expected metric identifier');\n      }\n\n      node.segments.push(segment);\n    }\n\n    return node;\n  },\n\n  functionCall: function() {\n    if (!this.match('identifier', '(')) {\n      return null;\n    }\n\n    var node: any = {\n      type: 'function',\n      name: this.consumeToken().value,\n    };\n\n    // consume left parenthesis\n    this.consumeToken();\n\n    node.params = this.functionParameters();\n\n    if (!this.match(')')) {\n      this.errorMark('Expected closing parenthesis');\n    }\n\n    this.consumeToken();\n\n    return node;\n  },\n\n  boolExpression: function() {\n    if (!this.match('bool')) {\n      return null;\n    }\n\n    return {\n      type: 'bool',\n      value: this.consumeToken().value === 'true',\n    };\n  },\n\n  functionParameters: function() {\n    if (this.match(')') || this.match('')) {\n      return [];\n    }\n\n    var param =\n      this.functionCall() ||\n      this.numericLiteral() ||\n      this.seriesRefExpression() ||\n      this.boolExpression() ||\n      this.metricExpression() ||\n      this.stringLiteral();\n\n    if (!this.match(',')) {\n      return [param];\n    }\n\n    this.consumeToken();\n    return [param].concat(this.functionParameters());\n  },\n\n  seriesRefExpression: function() {\n    if (!this.match('identifier')) {\n      return null;\n    }\n\n    var value = this.tokens[this.index].value;\n    if (!value.match(/\\#[A-Z]/)) {\n      return null;\n    }\n\n    var token = this.consumeToken();\n\n    return {\n      type: 'series-ref',\n      value: token.value,\n    };\n  },\n\n  numericLiteral: function() {\n    if (!this.match('number')) {\n      return null;\n    }\n\n    return {\n      type: 'number',\n      value: parseFloat(this.consumeToken().value),\n    };\n  },\n\n  stringLiteral: function() {\n    if (!this.match('string')) {\n      return null;\n    }\n\n    var token = this.consumeToken();\n    if (token.isUnclosed) {\n      throw { message: 'Unclosed string parameter', pos: token.pos };\n    }\n\n    return {\n      type: 'string',\n      value: token.value,\n    };\n  },\n\n  errorMark: function(text) {\n    var currentToken = this.tokens[this.index];\n    var type = currentToken ? currentToken.type : 'end of string';\n    throw {\n      message: text + ' instead found ' + type,\n      pos: currentToken ? currentToken.pos : this.lexer.char,\n    };\n  },\n\n  // returns token value and incre\n  consumeToken: function() {\n    this.index++;\n    return this.tokens[this.index - 1];\n  },\n\n  matchToken: function(type, index) {\n    var token = this.tokens[this.index + index];\n    return (token === undefined && type === '') || (token && token.type === type);\n  },\n\n  match: function(token1, token2) {\n    return this.matchToken(token1, 0) && (!token2 || this.matchToken(token2, 1));\n  },\n};\n","import _ from 'lodash';\nimport { Parser } from './parser';\n\nexport default class GraphiteQuery {\n  datasource: any;\n  target: any;\n  functions: any[];\n  segments: any[];\n  tags: any[];\n  error: any;\n  seriesByTagUsed: boolean;\n  checkOtherSegmentsIndex: number;\n  removeTagValue: string;\n  templateSrv: any;\n  scopedVars: any;\n\n  /** @ngInject */\n  constructor(datasource, target, templateSrv?, scopedVars?) {\n    this.datasource = datasource;\n    this.target = target;\n    this.parseTarget();\n\n    this.removeTagValue = '-- remove tag --';\n  }\n\n  parseTarget() {\n    this.functions = [];\n    this.segments = [];\n    this.tags = [];\n    this.error = null;\n\n    if (this.target.textEditor) {\n      return;\n    }\n\n    var parser = new Parser(this.target.target);\n    var astNode = parser.getAst();\n    if (astNode === null) {\n      this.checkOtherSegmentsIndex = 0;\n      return;\n    }\n\n    if (astNode.type === 'error') {\n      this.error = astNode.message + ' at position: ' + astNode.pos;\n      this.target.textEditor = true;\n      return;\n    }\n\n    try {\n      this.parseTargetRecursive(astNode, null);\n    } catch (err) {\n      console.log('error parsing target:', err.message);\n      this.error = err.message;\n      this.target.textEditor = true;\n    }\n\n    this.checkOtherSegmentsIndex = this.segments.length - 1;\n    this.checkForSeriesByTag();\n  }\n\n  checkForSeriesByTag() {\n    let seriesByTagFunc = _.find(this.functions, func => func.def.name === 'seriesByTag');\n    if (seriesByTagFunc) {\n      this.seriesByTagUsed = true;\n      seriesByTagFunc.hidden = true;\n      let tags = this.splitSeriesByTagParams(seriesByTagFunc);\n      this.tags = tags;\n    }\n  }\n\n  getSegmentPathUpTo(index) {\n    var arr = this.segments.slice(0, index);\n\n    return _.reduce(\n      arr,\n      function(result, segment) {\n        return result ? result + '.' + segment.value : segment.value;\n      },\n      ''\n    );\n  }\n\n  parseTargetRecursive(astNode, func) {\n    if (astNode === null) {\n      return null;\n    }\n\n    switch (astNode.type) {\n      case 'function':\n        var innerFunc = this.datasource.createFuncInstance(astNode.name, {\n          withDefaultParams: false,\n        });\n        _.each(astNode.params, param => {\n          this.parseTargetRecursive(param, innerFunc);\n        });\n\n        innerFunc.updateText();\n        this.functions.push(innerFunc);\n        break;\n      case 'series-ref':\n        if (this.segments.length > 0) {\n          this.addFunctionParameter(func, astNode.value);\n        } else {\n          this.segments.push(astNode);\n        }\n        break;\n      case 'bool':\n      case 'string':\n      case 'number':\n        this.addFunctionParameter(func, astNode.value);\n        break;\n      case 'metric':\n        if (this.segments.length > 0) {\n          this.addFunctionParameter(func, _.join(_.map(astNode.segments, 'value'), '.'));\n        } else {\n          this.segments = astNode.segments;\n        }\n        break;\n    }\n  }\n\n  updateSegmentValue(segment, index) {\n    this.segments[index].value = segment.value;\n  }\n\n  addSelectMetricSegment() {\n    this.segments.push({ value: 'select metric' });\n  }\n\n  addFunction(newFunc) {\n    this.functions.push(newFunc);\n    this.moveAliasFuncLast();\n  }\n\n  moveAliasFuncLast() {\n    var aliasFunc = _.find(this.functions, function(func) {\n      return func.def.name.startsWith('alias');\n    });\n\n    if (aliasFunc) {\n      this.functions = _.without(this.functions, aliasFunc);\n      this.functions.push(aliasFunc);\n    }\n  }\n\n  addFunctionParameter(func, value) {\n    if (func.params.length >= func.def.params.length && !_.get(_.last(func.def.params), 'multiple', false)) {\n      throw { message: 'too many parameters for function ' + func.def.name };\n    }\n    func.params.push(value);\n  }\n\n  removeFunction(func) {\n    this.functions = _.without(this.functions, func);\n  }\n\n  updateModelTarget(targets) {\n    // render query\n    if (!this.target.textEditor) {\n      var metricPath = this.getSegmentPathUpTo(this.segments.length).replace(/\\.select metric$/, '');\n      this.target.target = _.reduce(this.functions, wrapFunction, metricPath);\n    }\n\n    this.updateRenderedTarget(this.target, targets);\n\n    // loop through other queries and update targetFull as needed\n    for (const target of targets || []) {\n      if (target.refId !== this.target.refId) {\n        this.updateRenderedTarget(target, targets);\n      }\n    }\n  }\n\n  updateRenderedTarget(target, targets) {\n    // render nested query\n    var targetsByRefId = _.keyBy(targets, 'refId');\n\n    // no references to self\n    delete targetsByRefId[target.refId];\n\n    var nestedSeriesRefRegex = /\\#([A-Z])/g;\n    var targetWithNestedQueries = target.target;\n\n    // Use ref count to track circular references\n    function countTargetRefs(targetsByRefId, refId) {\n      let refCount = 0;\n      _.each(targetsByRefId, (t, id) => {\n        if (id !== refId) {\n          let match = nestedSeriesRefRegex.exec(t.target);\n          let count = match && match.length ? match.length - 1 : 0;\n          refCount += count;\n        }\n      });\n      targetsByRefId[refId].refCount = refCount;\n    }\n    _.each(targetsByRefId, (t, id) => {\n      countTargetRefs(targetsByRefId, id);\n    });\n\n    // Keep interpolating until there are no query references\n    // The reason for the loop is that the referenced query might contain another reference to another query\n    while (targetWithNestedQueries.match(nestedSeriesRefRegex)) {\n      var updated = targetWithNestedQueries.replace(nestedSeriesRefRegex, (match, g1) => {\n        var t = targetsByRefId[g1];\n        if (!t) {\n          return match;\n        }\n\n        // no circular references\n        if (t.refCount === 0) {\n          delete targetsByRefId[g1];\n        }\n        t.refCount--;\n\n        return t.target;\n      });\n\n      if (updated === targetWithNestedQueries) {\n        break;\n      }\n\n      targetWithNestedQueries = updated;\n    }\n\n    delete target.targetFull;\n    if (target.target !== targetWithNestedQueries) {\n      target.targetFull = targetWithNestedQueries;\n    }\n  }\n\n  splitSeriesByTagParams(func) {\n    const tagPattern = /([^\\!=~]+)(\\!?=~?)(.*)/;\n    return _.flatten(\n      _.map(func.params, (param: string) => {\n        let matches = tagPattern.exec(param);\n        if (matches) {\n          let tag = matches.slice(1);\n          if (tag.length === 3) {\n            return {\n              key: tag[0],\n              operator: tag[1],\n              value: tag[2],\n            };\n          }\n        }\n        return [];\n      })\n    );\n  }\n\n  getSeriesByTagFuncIndex() {\n    return _.findIndex(this.functions, func => func.def.name === 'seriesByTag');\n  }\n\n  getSeriesByTagFunc() {\n    let seriesByTagFuncIndex = this.getSeriesByTagFuncIndex();\n    if (seriesByTagFuncIndex >= 0) {\n      return this.functions[seriesByTagFuncIndex];\n    } else {\n      return undefined;\n    }\n  }\n\n  addTag(tag) {\n    let newTagParam = renderTagString(tag);\n    this.getSeriesByTagFunc().params.push(newTagParam);\n    this.tags.push(tag);\n  }\n\n  removeTag(index) {\n    this.getSeriesByTagFunc().params.splice(index, 1);\n    this.tags.splice(index, 1);\n  }\n\n  updateTag(tag, tagIndex) {\n    this.error = null;\n\n    if (tag.key === this.removeTagValue) {\n      this.removeTag(tagIndex);\n      return;\n    }\n\n    let newTagParam = renderTagString(tag);\n    this.getSeriesByTagFunc().params[tagIndex] = newTagParam;\n    this.tags[tagIndex] = tag;\n  }\n\n  renderTagExpressions(excludeIndex = -1) {\n    return _.compact(\n      _.map(this.tags, (tagExpr, index) => {\n        // Don't render tag that we want to lookup\n        if (index !== excludeIndex) {\n          return tagExpr.key + tagExpr.operator + tagExpr.value;\n        }\n      })\n    );\n  }\n}\n\nfunction wrapFunction(target, func) {\n  return func.render(target);\n}\n\nfunction renderTagString(tag) {\n  return tag.key + tag.operator + tag.value;\n}\n","import './add_graphite_func';\nimport './func_editor';\n\nimport _ from 'lodash';\nimport GraphiteQuery from './graphite_query';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\n\nconst GRAPHITE_TAG_OPERATORS = ['=', '!=', '=~', '!=~'];\nconst TAG_PREFIX = 'tag: ';\n\nexport class GraphiteQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  queryModel: GraphiteQuery;\n  segments: any[];\n  addTagSegments: any[];\n  removeTagValue: string;\n  supportsTags: boolean;\n  paused: boolean;\n\n  /** @ngInject **/\n  constructor($scope, $injector, private uiSegmentSrv, private templateSrv, $timeout) {\n    super($scope, $injector);\n    this.supportsTags = this.datasource.supportsTags;\n    this.paused = false;\n    this.target.target = this.target.target || '';\n\n    this.datasource.waitForFuncDefsLoaded().then(() => {\n      this.queryModel = new GraphiteQuery(this.datasource, this.target, templateSrv);\n      this.buildSegments();\n    });\n\n    this.removeTagValue = '-- remove tag --';\n  }\n\n  parseTarget() {\n    this.queryModel.parseTarget();\n    this.buildSegments();\n  }\n\n  toggleEditorMode() {\n    this.target.textEditor = !this.target.textEditor;\n    this.parseTarget();\n  }\n\n  buildSegments() {\n    this.segments = _.map(this.queryModel.segments, segment => {\n      return this.uiSegmentSrv.newSegment(segment);\n    });\n\n    let checkOtherSegmentsIndex = this.queryModel.checkOtherSegmentsIndex || 0;\n    this.checkOtherSegments(checkOtherSegmentsIndex);\n\n    if (this.queryModel.seriesByTagUsed) {\n      this.fixTagSegments();\n    }\n  }\n\n  addSelectMetricSegment() {\n    this.queryModel.addSelectMetricSegment();\n    this.segments.push(this.uiSegmentSrv.newSelectMetric());\n  }\n\n  checkOtherSegments(fromIndex) {\n    if (this.queryModel.segments.length === 1 && this.queryModel.segments[0].type === 'series-ref') {\n      return;\n    }\n\n    if (fromIndex === 0) {\n      this.addSelectMetricSegment();\n      return;\n    }\n\n    var path = this.queryModel.getSegmentPathUpTo(fromIndex + 1);\n    if (path === '') {\n      return Promise.resolve();\n    }\n\n    return this.datasource\n      .metricFindQuery(path)\n      .then(segments => {\n        if (segments.length === 0) {\n          if (path !== '') {\n            this.queryModel.segments = this.queryModel.segments.splice(0, fromIndex);\n            this.segments = this.segments.splice(0, fromIndex);\n            this.addSelectMetricSegment();\n          }\n        } else if (segments[0].expandable) {\n          if (this.segments.length === fromIndex) {\n            this.addSelectMetricSegment();\n          } else {\n            return this.checkOtherSegments(fromIndex + 1);\n          }\n        }\n      })\n      .catch(err => {\n        appEvents.emit('alert-error', ['Error', err]);\n      });\n  }\n\n  setSegmentFocus(segmentIndex) {\n    _.each(this.segments, (segment, index) => {\n      segment.focus = segmentIndex === index;\n    });\n  }\n\n  getAltSegments(index, prefix) {\n    var query = prefix && prefix.length > 0 ? '*' + prefix + '*' : '*';\n    if (index > 0) {\n      query = this.queryModel.getSegmentPathUpTo(index) + '.' + query;\n    }\n    var options = {\n      range: this.panelCtrl.range,\n      requestId: 'get-alt-segments',\n    };\n\n    return this.datasource\n      .metricFindQuery(query, options)\n      .then(segments => {\n        var altSegments = _.map(segments, segment => {\n          return this.uiSegmentSrv.newSegment({\n            value: segment.text,\n            expandable: segment.expandable,\n          });\n        });\n\n        if (index > 0 && altSegments.length === 0) {\n          return altSegments;\n        }\n\n        // add query references\n        if (index === 0) {\n          _.eachRight(this.panelCtrl.panel.targets, target => {\n            if (target.refId === this.queryModel.target.refId) {\n              return;\n            }\n\n            altSegments.unshift(\n              this.uiSegmentSrv.newSegment({\n                type: 'series-ref',\n                value: '#' + target.refId,\n                expandable: false,\n              })\n            );\n          });\n        }\n\n        // add template variables\n        _.eachRight(this.templateSrv.variables, variable => {\n          altSegments.unshift(\n            this.uiSegmentSrv.newSegment({\n              type: 'template',\n              value: '$' + variable.name,\n              expandable: true,\n            })\n          );\n        });\n\n        // add wildcard option\n        altSegments.unshift(this.uiSegmentSrv.newSegment('*'));\n\n        if (this.supportsTags && index === 0) {\n          this.removeTaggedEntry(altSegments);\n          return this.addAltTagSegments(prefix, altSegments);\n        } else {\n          return altSegments;\n        }\n      })\n      .catch(err => {\n        return [];\n      });\n  }\n\n  addAltTagSegments(prefix, altSegments) {\n    return this.getTagsAsSegments(prefix).then(tagSegments => {\n      tagSegments = _.map(tagSegments, segment => {\n        segment.value = TAG_PREFIX + segment.value;\n        return segment;\n      });\n      return altSegments.concat(...tagSegments);\n    });\n  }\n\n  removeTaggedEntry(altSegments) {\n    altSegments = _.remove(altSegments, s => s.value === '_tagged');\n  }\n\n  segmentValueChanged(segment, segmentIndex) {\n    this.error = null;\n    this.queryModel.updateSegmentValue(segment, segmentIndex);\n\n    if (this.queryModel.functions.length > 0 && this.queryModel.functions[0].def.fake) {\n      this.queryModel.functions = [];\n    }\n\n    if (segment.type === 'tag') {\n      let tag = removeTagPrefix(segment.value);\n      this.pause();\n      this.addSeriesByTagFunc(tag);\n      return;\n    }\n\n    if (segment.expandable) {\n      return this.checkOtherSegments(segmentIndex + 1).then(() => {\n        this.setSegmentFocus(segmentIndex + 1);\n        this.targetChanged();\n      });\n    } else {\n      this.spliceSegments(segmentIndex + 1);\n    }\n\n    this.setSegmentFocus(segmentIndex + 1);\n    this.targetChanged();\n  }\n\n  spliceSegments(index) {\n    this.segments = this.segments.splice(0, index);\n    this.queryModel.segments = this.queryModel.segments.splice(0, index);\n  }\n\n  emptySegments() {\n    this.queryModel.segments = [];\n    this.segments = [];\n  }\n\n  targetTextChanged() {\n    this.updateModelTarget();\n    this.refresh();\n  }\n\n  updateModelTarget() {\n    this.queryModel.updateModelTarget(this.panelCtrl.panel.targets);\n  }\n\n  targetChanged() {\n    if (this.queryModel.error) {\n      return;\n    }\n\n    var oldTarget = this.queryModel.target.target;\n    this.updateModelTarget();\n\n    if (this.queryModel.target !== oldTarget && !this.paused) {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  addFunction(funcDef) {\n    var newFunc = this.datasource.createFuncInstance(funcDef, {\n      withDefaultParams: true,\n    });\n    newFunc.added = true;\n    this.queryModel.addFunction(newFunc);\n    this.smartlyHandleNewAliasByNode(newFunc);\n\n    if (this.segments.length === 1 && this.segments[0].fake) {\n      this.emptySegments();\n    }\n\n    if (!newFunc.params.length && newFunc.added) {\n      this.targetChanged();\n    }\n\n    if (newFunc.def.name === 'seriesByTag') {\n      this.parseTarget();\n    }\n  }\n\n  removeFunction(func) {\n    this.queryModel.removeFunction(func);\n    this.targetChanged();\n  }\n\n  addSeriesByTagFunc(tag) {\n    let newFunc = this.datasource.createFuncInstance('seriesByTag', {\n      withDefaultParams: false,\n    });\n    let tagParam = `${tag}=`;\n    newFunc.params = [tagParam];\n    this.queryModel.addFunction(newFunc);\n    newFunc.added = true;\n\n    this.emptySegments();\n    this.targetChanged();\n    this.parseTarget();\n  }\n\n  smartlyHandleNewAliasByNode(func) {\n    if (func.def.name !== 'aliasByNode') {\n      return;\n    }\n\n    for (var i = 0; i < this.segments.length; i++) {\n      if (this.segments[i].value.indexOf('*') >= 0) {\n        func.params[0] = i;\n        func.added = false;\n        this.targetChanged();\n        return;\n      }\n    }\n  }\n\n  getAllTags() {\n    return this.datasource.getTags().then(values => {\n      let altTags = _.map(values, 'text');\n      altTags.splice(0, 0, this.removeTagValue);\n      return mapToDropdownOptions(altTags);\n    });\n  }\n\n  getTags(index, tagPrefix) {\n    let tagExpressions = this.queryModel.renderTagExpressions(index);\n    return this.datasource.getTagsAutoComplete(tagExpressions, tagPrefix).then(values => {\n      let altTags = _.map(values, 'text');\n      altTags.splice(0, 0, this.removeTagValue);\n      return mapToDropdownOptions(altTags);\n    });\n  }\n\n  getTagsAsSegments(tagPrefix) {\n    let tagExpressions = this.queryModel.renderTagExpressions();\n    return this.datasource.getTagsAutoComplete(tagExpressions, tagPrefix).then(values => {\n      return _.map(values, val => {\n        return this.uiSegmentSrv.newSegment({\n          value: val.text,\n          type: 'tag',\n          expandable: false,\n        });\n      });\n    });\n  }\n\n  getTagOperators() {\n    return mapToDropdownOptions(GRAPHITE_TAG_OPERATORS);\n  }\n\n  getAllTagValues(tag) {\n    let tagKey = tag.key;\n    return this.datasource.getTagValues(tagKey).then(values => {\n      let altValues = _.map(values, 'text');\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  getTagValues(tag, index, valuePrefix) {\n    let tagExpressions = this.queryModel.renderTagExpressions(index);\n    let tagKey = tag.key;\n    return this.datasource.getTagValuesAutoComplete(tagExpressions, tagKey, valuePrefix).then(values => {\n      let altValues = _.map(values, 'text');\n      // Add template variables as additional values\n      _.eachRight(this.templateSrv.variables, variable => {\n        altValues.push('${' + variable.name + ':regex}');\n      });\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  tagChanged(tag, tagIndex) {\n    this.queryModel.updateTag(tag, tagIndex);\n    this.targetChanged();\n  }\n\n  addNewTag(segment) {\n    let newTagKey = segment.value;\n    let newTag = { key: newTagKey, operator: '=', value: '' };\n    this.queryModel.addTag(newTag);\n    this.targetChanged();\n    this.fixTagSegments();\n  }\n\n  removeTag(index) {\n    this.queryModel.removeTag(index);\n    this.targetChanged();\n  }\n\n  fixTagSegments() {\n    // Adding tag with the same name as just removed works incorrectly if single segment is used (instead of array)\n    this.addTagSegments = [this.uiSegmentSrv.newPlusButton()];\n  }\n\n  showDelimiter(index) {\n    return index !== this.queryModel.tags.length - 1;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  unpause() {\n    this.paused = false;\n    this.panelCtrl.refresh();\n  }\n}\n\nfunction mapToDropdownOptions(results) {\n  return _.map(results, value => {\n    return { text: value, value: value };\n  });\n}\n\nfunction removeTagPrefix(value: string): string {\n  return value.replace(TAG_PREFIX, '');\n}\n","import { GraphiteDatasource } from './datasource';\nimport { GraphiteQueryCtrl } from './query_ctrl';\nimport { GraphiteConfigCtrl } from './config_ctrl';\n\nclass AnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  GraphiteDatasource as Datasource,\n  GraphiteQueryCtrl as QueryCtrl,\n  GraphiteConfigCtrl as ConfigCtrl,\n  AnnotationsQueryCtrl,\n};\n","export class GraphiteConfigCtrl {\n  static templateUrl = 'public/app/plugins/datasource/graphite/partials/config.html';\n  datasourceSrv: any;\n  current: any;\n\n  /** @ngInject */\n  constructor($scope, datasourceSrv) {\n    this.datasourceSrv = datasourceSrv;\n    this.current.jsonData = this.current.jsonData || {};\n    this.current.jsonData.graphiteVersion = this.current.jsonData.graphiteVersion || '0.9';\n    this.autoDetectGraphiteVersion();\n  }\n\n  autoDetectGraphiteVersion() {\n    if (!this.current.id) {\n      return;\n    }\n\n    this.datasourceSrv\n      .loadDatasource(this.current.name)\n      .then(ds => {\n        return ds.getVersion();\n      })\n      .then(version => {\n        this.graphiteVersions.push({ name: version, value: version });\n        this.current.jsonData.graphiteVersion = version;\n      });\n  }\n\n  graphiteVersions = [\n    { name: '0.9.x', value: '0.9' },\n    { name: '1.0.x', value: '1.0' },\n    { name: '1.1.x', value: '1.1' },\n  ];\n}\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class CloudWatchQueryParameter {\n  constructor() {\n    return {\n      templateUrl: 'public/app/plugins/datasource/cloudwatch/partials/query.parameter.html',\n      controller: 'CloudWatchQueryParameterCtrl',\n      restrict: 'E',\n      scope: {\n        target: '=',\n        datasource: '=',\n        onChange: '&',\n      },\n    };\n  }\n}\n\nexport class CloudWatchQueryParameterCtrl {\n  /** @ngInject */\n  constructor($scope, templateSrv, uiSegmentSrv, datasourceSrv, $q) {\n    $scope.init = function() {\n      var target = $scope.target;\n      target.namespace = target.namespace || '';\n      target.metricName = target.metricName || '';\n      target.statistics = target.statistics || ['Average'];\n      target.dimensions = target.dimensions || {};\n      target.period = target.period || '';\n      target.region = target.region || 'default';\n      target.id = target.id || '';\n      target.expression = target.expression || '';\n      target.returnData = target.returnData || false;\n      target.highResolution = target.highResolution || false;\n\n      $scope.regionSegment = uiSegmentSrv.getSegmentForValue($scope.target.region, 'select region');\n      $scope.namespaceSegment = uiSegmentSrv.getSegmentForValue($scope.target.namespace, 'select namespace');\n      $scope.metricSegment = uiSegmentSrv.getSegmentForValue($scope.target.metricName, 'select metric');\n\n      $scope.dimSegments = _.reduce(\n        $scope.target.dimensions,\n        function(memo, value, key) {\n          memo.push(uiSegmentSrv.newKey(key));\n          memo.push(uiSegmentSrv.newOperator('='));\n          memo.push(uiSegmentSrv.newKeyValue(value));\n          return memo;\n        },\n        []\n      );\n\n      $scope.statSegments = _.map($scope.target.statistics, function(stat) {\n        return uiSegmentSrv.getSegmentForValue(stat);\n      });\n\n      $scope.ensurePlusButton($scope.statSegments);\n      $scope.ensurePlusButton($scope.dimSegments);\n      $scope.removeDimSegment = uiSegmentSrv.newSegment({\n        fake: true,\n        value: '-- remove dimension --',\n      });\n      $scope.removeStatSegment = uiSegmentSrv.newSegment({\n        fake: true,\n        value: '-- remove stat --',\n      });\n\n      if (_.isEmpty($scope.target.region)) {\n        $scope.target.region = 'default';\n      }\n\n      if (!$scope.onChange) {\n        $scope.onChange = function() {};\n      }\n    };\n\n    $scope.getStatSegments = function() {\n      return $q.when(\n        _.flatten([\n          angular.copy($scope.removeStatSegment),\n          _.map($scope.datasource.standardStatistics, function(s) {\n            return uiSegmentSrv.getSegmentForValue(s);\n          }),\n          uiSegmentSrv.getSegmentForValue('pNN.NN'),\n        ])\n      );\n    };\n\n    $scope.statSegmentChanged = function(segment, index) {\n      if (segment.value === $scope.removeStatSegment.value) {\n        $scope.statSegments.splice(index, 1);\n      } else {\n        segment.type = 'value';\n      }\n\n      $scope.target.statistics = _.reduce(\n        $scope.statSegments,\n        function(memo, seg) {\n          if (!seg.fake) {\n            memo.push(seg.value);\n          }\n          return memo;\n        },\n        []\n      );\n\n      $scope.ensurePlusButton($scope.statSegments);\n      $scope.onChange();\n    };\n\n    $scope.ensurePlusButton = function(segments) {\n      var count = segments.length;\n      var lastSegment = segments[Math.max(count - 1, 0)];\n\n      if (!lastSegment || lastSegment.type !== 'plus-button') {\n        segments.push(uiSegmentSrv.newPlusButton());\n      }\n    };\n\n    $scope.getDimSegments = function(segment, $index) {\n      if (segment.type === 'operator') {\n        return $q.when([]);\n      }\n\n      var target = $scope.target;\n      var query = $q.when([]);\n\n      if (segment.type === 'key' || segment.type === 'plus-button') {\n        query = $scope.datasource.getDimensionKeys($scope.target.namespace, $scope.target.region);\n      } else if (segment.type === 'value') {\n        var dimensionKey = $scope.dimSegments[$index - 2].value;\n        query = $scope.datasource.getDimensionValues(\n          target.region,\n          target.namespace,\n          target.metricName,\n          dimensionKey,\n          target.dimensions\n        );\n      }\n\n      return query.then($scope.transformToSegments(true)).then(function(results) {\n        if (segment.type === 'key') {\n          results.splice(0, 0, angular.copy($scope.removeDimSegment));\n        }\n        return results;\n      });\n    };\n\n    $scope.dimSegmentChanged = function(segment, index) {\n      $scope.dimSegments[index] = segment;\n\n      if (segment.value === $scope.removeDimSegment.value) {\n        $scope.dimSegments.splice(index, 3);\n      } else if (segment.type === 'plus-button') {\n        $scope.dimSegments.push(uiSegmentSrv.newOperator('='));\n        $scope.dimSegments.push(uiSegmentSrv.newFake('select dimension value', 'value', 'query-segment-value'));\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n\n      $scope.syncDimSegmentsWithModel();\n      $scope.ensurePlusButton($scope.dimSegments);\n      $scope.onChange();\n    };\n\n    $scope.syncDimSegmentsWithModel = function() {\n      var dims = {};\n      var length = $scope.dimSegments.length;\n\n      for (var i = 0; i < length - 2; i += 3) {\n        var keySegment = $scope.dimSegments[i];\n        var valueSegment = $scope.dimSegments[i + 2];\n        if (!valueSegment.fake) {\n          dims[keySegment.value] = valueSegment.value;\n        }\n      }\n\n      $scope.target.dimensions = dims;\n    };\n\n    $scope.getRegions = function() {\n      return $scope.datasource\n        .metricFindQuery('regions()')\n        .then(function(results) {\n          results.unshift({ text: 'default' });\n          return results;\n        })\n        .then($scope.transformToSegments(true));\n    };\n\n    $scope.getNamespaces = function() {\n      return $scope.datasource.metricFindQuery('namespaces()').then($scope.transformToSegments(true));\n    };\n\n    $scope.getMetrics = function() {\n      return $scope.datasource\n        .metricFindQuery('metrics(' + $scope.target.namespace + ',' + $scope.target.region + ')')\n        .then($scope.transformToSegments(true));\n    };\n\n    $scope.regionChanged = function() {\n      $scope.target.region = $scope.regionSegment.value;\n      $scope.onChange();\n    };\n\n    $scope.namespaceChanged = function() {\n      $scope.target.namespace = $scope.namespaceSegment.value;\n      $scope.onChange();\n    };\n\n    $scope.metricChanged = function() {\n      $scope.target.metricName = $scope.metricSegment.value;\n      $scope.onChange();\n    };\n\n    $scope.transformToSegments = function(addTemplateVars) {\n      return function(results) {\n        var segments = _.map(results, function(segment) {\n          return uiSegmentSrv.newSegment({\n            value: segment.text,\n            expandable: segment.expandable,\n          });\n        });\n\n        if (addTemplateVars) {\n          _.each(templateSrv.variables, function(variable) {\n            segments.unshift(\n              uiSegmentSrv.newSegment({\n                type: 'template',\n                value: '$' + variable.name,\n                expandable: true,\n              })\n            );\n          });\n        }\n\n        return segments;\n      };\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').directive('cloudwatchQueryParameter', CloudWatchQueryParameter);\nangular.module('grafana.controllers').controller('CloudWatchQueryParameterCtrl', CloudWatchQueryParameterCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport * as dateMath from 'app/core/utils/datemath';\nimport kbn from 'app/core/utils/kbn';\nimport * as templatingVariable from 'app/features/templating/variable';\n// import * as moment from 'moment';\n\nexport default class CloudWatchDatasource {\n  type: any;\n  name: any;\n  supportMetrics: any;\n  proxyUrl: any;\n  defaultRegion: any;\n  instanceSettings: any;\n  standardStatistics: any;\n  /** @ngInject */\n  constructor(instanceSettings, private $q, private backendSrv, private templateSrv, private timeSrv) {\n    this.type = 'cloudwatch';\n    this.name = instanceSettings.name;\n    this.supportMetrics = true;\n    this.proxyUrl = instanceSettings.url;\n    this.defaultRegion = instanceSettings.jsonData.defaultRegion;\n    this.instanceSettings = instanceSettings;\n    this.standardStatistics = ['Average', 'Maximum', 'Minimum', 'Sum', 'SampleCount'];\n  }\n\n  query(options) {\n    options = angular.copy(options);\n    options.targets = this.expandTemplateVariable(options.targets, options.scopedVars, this.templateSrv);\n\n    var queries = _.filter(options.targets, item => {\n      return (\n        (item.id !== '' || item.hide !== true) &&\n        ((!!item.region && !!item.namespace && !!item.metricName && !_.isEmpty(item.statistics)) ||\n          item.expression.length > 0)\n      );\n    }).map(item => {\n      item.region = this.templateSrv.replace(this.getActualRegion(item.region), options.scopedVars);\n      item.namespace = this.templateSrv.replace(item.namespace, options.scopedVars);\n      item.metricName = this.templateSrv.replace(item.metricName, options.scopedVars);\n      item.dimensions = this.convertDimensionFormat(item.dimensions, options.scopedVars);\n      item.period = String(this.getPeriod(item, options)); // use string format for period in graph query, and alerting\n      item.id = this.templateSrv.replace(item.id, options.scopedVars);\n      item.expression = this.templateSrv.replace(item.expression, options.scopedVars);\n      item.returnData = typeof item.hide === 'undefined' ? true : !item.hide;\n\n      // valid ExtendedStatistics is like p90.00, check the pattern\n      let hasInvalidStatistics = item.statistics.some(s => {\n        return s.indexOf('p') === 0 && !/p\\d{2}\\.\\d{2}/.test(s);\n      });\n      if (hasInvalidStatistics) {\n        throw { message: 'Invalid extended statistics' };\n      }\n\n      return _.extend(\n        {\n          refId: item.refId,\n          intervalMs: options.intervalMs,\n          maxDataPoints: options.maxDataPoints,\n          datasourceId: this.instanceSettings.id,\n          type: 'timeSeriesQuery',\n        },\n        item\n      );\n    });\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n      var d = this.$q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var request = {\n      from: options.range.from.valueOf().toString(),\n      to: options.range.to.valueOf().toString(),\n      queries: queries,\n    };\n\n    return this.performTimeSeriesQuery(request);\n  }\n\n  getPeriod(target, options, now?) {\n    var start = this.convertToCloudWatchTime(options.range.from, false);\n    var end = this.convertToCloudWatchTime(options.range.to, true);\n    now = Math.round((now || Date.now()) / 1000);\n\n    var period;\n    var range = end - start;\n\n    var hourSec = 60 * 60;\n    var daySec = hourSec * 24;\n    var periodUnit = 60;\n    if (!target.period) {\n      if (now - start <= daySec * 15) {\n        // until 15 days ago\n        if (target.namespace === 'AWS/EC2') {\n          periodUnit = period = 300;\n        } else {\n          periodUnit = period = 60;\n        }\n      } else if (now - start <= daySec * 63) {\n        // until 63 days ago\n        periodUnit = period = 60 * 5;\n      } else if (now - start <= daySec * 455) {\n        // until 455 days ago\n        periodUnit = period = 60 * 60;\n      } else {\n        // over 455 days, should return error, but try to long period\n        periodUnit = period = 60 * 60;\n      }\n    } else {\n      if (/^\\d+$/.test(target.period)) {\n        period = parseInt(target.period, 10);\n      } else {\n        period = kbn.interval_to_seconds(this.templateSrv.replace(target.period, options.scopedVars));\n      }\n    }\n    if (period < 1) {\n      period = 1;\n    }\n    if (!target.highResolution && range / period >= 1440) {\n      period = Math.ceil(range / 1440 / periodUnit) * periodUnit;\n    }\n\n    return period;\n  }\n\n  performTimeSeriesQuery(request) {\n    return this.awsRequest('/api/tsdb/query', request).then(res => {\n      var data = [];\n\n      if (res.results) {\n        _.forEach(res.results, queryRes => {\n          _.forEach(queryRes.series, series => {\n            data.push({ target: series.name, datapoints: series.points });\n          });\n        });\n      }\n\n      return { data: data };\n    });\n  }\n\n  transformSuggestDataFromTable(suggestData) {\n    return _.map(suggestData.results['metricFindQuery'].tables[0].rows, v => {\n      return {\n        text: v[0],\n        value: v[1],\n      };\n    });\n  }\n\n  doMetricQueryRequest(subtype, parameters) {\n    var range = this.timeSrv.timeRange();\n    return this.awsRequest('/api/tsdb/query', {\n      from: range.from.valueOf().toString(),\n      to: range.to.valueOf().toString(),\n      queries: [\n        _.extend(\n          {\n            refId: 'metricFindQuery',\n            intervalMs: 1, // dummy\n            maxDataPoints: 1, // dummy\n            datasourceId: this.instanceSettings.id,\n            type: 'metricFindQuery',\n            subtype: subtype,\n          },\n          parameters\n        ),\n      ],\n    }).then(r => {\n      return this.transformSuggestDataFromTable(r);\n    });\n  }\n\n  getRegions() {\n    return this.doMetricQueryRequest('regions', null);\n  }\n\n  getNamespaces() {\n    return this.doMetricQueryRequest('namespaces', null);\n  }\n\n  getMetrics(namespace, region) {\n    return this.doMetricQueryRequest('metrics', {\n      region: this.templateSrv.replace(this.getActualRegion(region)),\n      namespace: this.templateSrv.replace(namespace),\n    });\n  }\n\n  getDimensionKeys(namespace, region) {\n    return this.doMetricQueryRequest('dimension_keys', {\n      region: this.templateSrv.replace(this.getActualRegion(region)),\n      namespace: this.templateSrv.replace(namespace),\n    });\n  }\n\n  getDimensionValues(region, namespace, metricName, dimensionKey, filterDimensions) {\n    return this.doMetricQueryRequest('dimension_values', {\n      region: this.templateSrv.replace(this.getActualRegion(region)),\n      namespace: this.templateSrv.replace(namespace),\n      metricName: this.templateSrv.replace(metricName),\n      dimensionKey: this.templateSrv.replace(dimensionKey),\n      dimensions: this.convertDimensionFormat(filterDimensions, {}),\n    });\n  }\n\n  getEbsVolumeIds(region, instanceId) {\n    return this.doMetricQueryRequest('ebs_volume_ids', {\n      region: this.templateSrv.replace(this.getActualRegion(region)),\n      instanceId: this.templateSrv.replace(instanceId),\n    });\n  }\n\n  getEc2InstanceAttribute(region, attributeName, filters) {\n    return this.doMetricQueryRequest('ec2_instance_attribute', {\n      region: this.templateSrv.replace(this.getActualRegion(region)),\n      attributeName: this.templateSrv.replace(attributeName),\n      filters: filters,\n    });\n  }\n\n  metricFindQuery(query) {\n    var region;\n    var namespace;\n    var metricName;\n    var filterJson;\n\n    var regionQuery = query.match(/^regions\\(\\)/);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    var namespaceQuery = query.match(/^namespaces\\(\\)/);\n    if (namespaceQuery) {\n      return this.getNamespaces();\n    }\n\n    var metricNameQuery = query.match(/^metrics\\(([^\\)]+?)(,\\s?([^,]+?))?\\)/);\n    if (metricNameQuery) {\n      namespace = metricNameQuery[1];\n      region = metricNameQuery[3];\n      return this.getMetrics(namespace, region);\n    }\n\n    var dimensionKeysQuery = query.match(/^dimension_keys\\(([^\\)]+?)(,\\s?([^,]+?))?\\)/);\n    if (dimensionKeysQuery) {\n      namespace = dimensionKeysQuery[1];\n      region = dimensionKeysQuery[3];\n      return this.getDimensionKeys(namespace, region);\n    }\n\n    var dimensionValuesQuery = query.match(\n      /^dimension_values\\(([^,]+?),\\s?([^,]+?),\\s?([^,]+?),\\s?([^,]+?)(,\\s?(.+))?\\)/\n    );\n    if (dimensionValuesQuery) {\n      region = dimensionValuesQuery[1];\n      namespace = dimensionValuesQuery[2];\n      metricName = dimensionValuesQuery[3];\n      var dimensionKey = dimensionValuesQuery[4];\n      filterJson = {};\n      if (dimensionValuesQuery[6]) {\n        filterJson = JSON.parse(this.templateSrv.replace(dimensionValuesQuery[6]));\n      }\n\n      return this.getDimensionValues(region, namespace, metricName, dimensionKey, filterJson);\n    }\n\n    var ebsVolumeIdsQuery = query.match(/^ebs_volume_ids\\(([^,]+?),\\s?([^,]+?)\\)/);\n    if (ebsVolumeIdsQuery) {\n      region = ebsVolumeIdsQuery[1];\n      var instanceId = ebsVolumeIdsQuery[2];\n      return this.getEbsVolumeIds(region, instanceId);\n    }\n\n    var ec2InstanceAttributeQuery = query.match(/^ec2_instance_attribute\\(([^,]+?),\\s?([^,]+?),\\s?(.+?)\\)/);\n    if (ec2InstanceAttributeQuery) {\n      region = ec2InstanceAttributeQuery[1];\n      var targetAttributeName = ec2InstanceAttributeQuery[2];\n      filterJson = JSON.parse(this.templateSrv.replace(ec2InstanceAttributeQuery[3]));\n      return this.getEc2InstanceAttribute(region, targetAttributeName, filterJson);\n    }\n\n    return this.$q.when([]);\n  }\n\n  annotationQuery(options) {\n    var annotation = options.annotation;\n    var statistics = _.map(annotation.statistics, s => {\n      return this.templateSrv.replace(s);\n    });\n    var defaultPeriod = annotation.prefixMatching ? '' : '300';\n    var period = annotation.period || defaultPeriod;\n    period = parseInt(period, 10);\n    var parameters = {\n      prefixMatching: annotation.prefixMatching,\n      region: this.templateSrv.replace(this.getActualRegion(annotation.region)),\n      namespace: this.templateSrv.replace(annotation.namespace),\n      metricName: this.templateSrv.replace(annotation.metricName),\n      dimensions: this.convertDimensionFormat(annotation.dimensions, {}),\n      statistics: statistics,\n      period: period,\n      actionPrefix: annotation.actionPrefix || '',\n      alarmNamePrefix: annotation.alarmNamePrefix || '',\n    };\n\n    return this.awsRequest('/api/tsdb/query', {\n      from: options.range.from.valueOf().toString(),\n      to: options.range.to.valueOf().toString(),\n      queries: [\n        _.extend(\n          {\n            refId: 'annotationQuery',\n            intervalMs: 1, // dummy\n            maxDataPoints: 1, // dummy\n            datasourceId: this.instanceSettings.id,\n            type: 'annotationQuery',\n          },\n          parameters\n        ),\n      ],\n    }).then(r => {\n      return _.map(r.results['annotationQuery'].tables[0].rows, v => {\n        return {\n          annotation: annotation,\n          time: Date.parse(v[0]),\n          title: v[1],\n          tags: [v[2]],\n          text: v[3],\n        };\n      });\n    });\n  }\n\n  targetContainsTemplate(target) {\n    return (\n      this.templateSrv.variableExists(target.region) ||\n      this.templateSrv.variableExists(target.namespace) ||\n      this.templateSrv.variableExists(target.metricName) ||\n      _.find(target.dimensions, (v, k) => {\n        return this.templateSrv.variableExists(k) || this.templateSrv.variableExists(v);\n      })\n    );\n  }\n\n  testDatasource() {\n    /* use billing metrics for test */\n    var region = this.defaultRegion;\n    var namespace = 'AWS/Billing';\n    var metricName = 'EstimatedCharges';\n    var dimensions = {};\n\n    return this.getDimensionValues(region, namespace, metricName, 'ServiceName', dimensions).then(\n      () => {\n        return { status: 'success', message: 'Data source is working' };\n      },\n      err => {\n        return { status: 'error', message: err.message };\n      }\n    );\n  }\n\n  awsRequest(url, data) {\n    var options = {\n      method: 'POST',\n      url: url,\n      data: data,\n    };\n\n    return this.backendSrv.datasourceRequest(options).then(result => {\n      return result.data;\n    });\n  }\n\n  getDefaultRegion() {\n    return this.defaultRegion;\n  }\n\n  getActualRegion(region) {\n    if (region === 'default' || _.isEmpty(region)) {\n      return this.getDefaultRegion();\n    }\n    return region;\n  }\n\n  getExpandedVariables(target, dimensionKey, variable, templateSrv) {\n    /* if the all checkbox is marked we should add all values to the targets */\n    var allSelected = _.find(variable.options, { selected: true, text: 'All' });\n    var selectedVariables = _.filter(variable.options, v => {\n      if (allSelected) {\n        return v.text !== 'All';\n      } else {\n        return v.selected;\n      }\n    });\n    var currentVariables = !_.isArray(variable.current.value)\n      ? [variable.current]\n      : variable.current.value.map(v => {\n          return {\n            text: v,\n            value: v,\n          };\n        });\n    let useSelectedVariables =\n      selectedVariables.some(s => {\n        return s.value === currentVariables[0].value;\n      }) || currentVariables[0].value === '$__all';\n    return (useSelectedVariables ? selectedVariables : currentVariables).map(v => {\n      var t = angular.copy(target);\n      var scopedVar = {};\n      scopedVar[variable.name] = v;\n      t.refId = target.refId + '_' + v.value;\n      t.dimensions[dimensionKey] = templateSrv.replace(t.dimensions[dimensionKey], scopedVar);\n      if (variable.multi && target.id) {\n        t.id = target.id + window.btoa(v.value).replace(/=/g, '0'); // generate unique id\n      } else {\n        t.id = target.id;\n      }\n      return t;\n    });\n  }\n\n  expandTemplateVariable(targets, scopedVars, templateSrv) {\n    // Datasource and template srv logic uber-complected. This should be cleaned up.\n    return _.chain(targets)\n      .map(target => {\n        var dimensionKey = _.findKey(target.dimensions, v => {\n          return templateSrv.variableExists(v) && !_.has(scopedVars, templateSrv.getVariableName(v));\n        });\n\n        if (dimensionKey) {\n          var multiVariable = _.find(templateSrv.variables, variable => {\n            return (\n              templatingVariable.containsVariable(target.dimensions[dimensionKey], variable.name) && variable.multi\n            );\n          });\n          var variable = _.find(templateSrv.variables, variable => {\n            return templatingVariable.containsVariable(target.dimensions[dimensionKey], variable.name);\n          });\n          return this.getExpandedVariables(target, dimensionKey, multiVariable || variable, templateSrv);\n        } else {\n          return [target];\n        }\n      })\n      .flatten()\n      .value();\n  }\n\n  convertToCloudWatchTime(date, roundUp) {\n    if (_.isString(date)) {\n      date = dateMath.parse(date, roundUp);\n    }\n    return Math.round(date.valueOf() / 1000);\n  }\n\n  convertDimensionFormat(dimensions, scopedVars) {\n    var convertedDimensions = {};\n    _.each(dimensions, (value, key) => {\n      convertedDimensions[this.templateSrv.replace(key, scopedVars)] = this.templateSrv.replace(value, scopedVars);\n    });\n    return convertedDimensions;\n  }\n}\n","export class CloudWatchConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  current: any;\n\n  accessKeyExist = false;\n  secretKeyExist = false;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.timeField = this.current.jsonData.timeField || '@timestamp';\n    this.current.jsonData.authType = this.current.jsonData.authType || 'credentials';\n\n    this.accessKeyExist = this.current.secureJsonFields.accessKey;\n    this.secretKeyExist = this.current.secureJsonFields.secretKey;\n  }\n\n  resetAccessKey() {\n    this.accessKeyExist = false;\n  }\n\n  resetSecretKey() {\n    this.secretKeyExist = false;\n  }\n\n  authTypes = [\n    { name: 'Access & secret key', value: 'keys' },\n    { name: 'Credentials file', value: 'credentials' },\n    { name: 'ARN', value: 'arn' },\n  ];\n\n  indexPatternTypes = [\n    { name: 'No pattern', value: undefined },\n    { name: 'Hourly', value: 'Hourly', example: '[logstash-]YYYY.MM.DD.HH' },\n    { name: 'Daily', value: 'Daily', example: '[logstash-]YYYY.MM.DD' },\n    { name: 'Weekly', value: 'Weekly', example: '[logstash-]GGGG.WW' },\n    { name: 'Monthly', value: 'Monthly', example: '[logstash-]YYYY.MM' },\n    { name: 'Yearly', value: 'Yearly', example: '[logstash-]YYYY' },\n  ];\n}\n","import './query_parameter_ctrl';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport class CloudWatchQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  aliasSyntax: string;\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    this.aliasSyntax = '{{metric}} {{stat}} {{namespace}} {{region}} {{<dimension name>}}';\n  }\n}\n","import './query_parameter_ctrl';\n\nimport CloudWatchDatasource from './datasource';\nimport { CloudWatchQueryCtrl } from './query_ctrl';\nimport { CloudWatchConfigCtrl } from './config_ctrl';\n\nclass CloudWatchAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  CloudWatchDatasource as Datasource,\n  CloudWatchQueryCtrl as QueryCtrl,\n  CloudWatchConfigCtrl as ConfigCtrl,\n  CloudWatchAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nexport const metricAggTypes = [\n  { text: 'Count', value: 'count', requiresField: false },\n  {\n    text: 'Average',\n    value: 'avg',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n  },\n  {\n    text: 'Sum',\n    value: 'sum',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n  },\n  {\n    text: 'Max',\n    value: 'max',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n  },\n  {\n    text: 'Min',\n    value: 'min',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n  },\n  {\n    text: 'Extended Stats',\n    value: 'extended_stats',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n  },\n  {\n    text: 'Percentiles',\n    value: 'percentiles',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n  },\n  {\n    text: 'Unique Count',\n    value: 'cardinality',\n    requiresField: true,\n    supportsMissing: true,\n  },\n  {\n    text: 'Moving Average',\n    value: 'moving_avg',\n    requiresField: false,\n    isPipelineAgg: true,\n    minVersion: 2,\n  },\n  {\n    text: 'Derivative',\n    value: 'derivative',\n    requiresField: false,\n    isPipelineAgg: true,\n    minVersion: 2,\n  },\n  { text: 'Raw Document', value: 'raw_document', requiresField: false },\n];\n\nexport const bucketAggTypes = [\n  { text: 'Terms', value: 'terms', requiresField: true },\n  { text: 'Filters', value: 'filters' },\n  { text: 'Geo Hash Grid', value: 'geohash_grid', requiresField: true },\n  { text: 'Date Histogram', value: 'date_histogram', requiresField: true },\n  { text: 'Histogram', value: 'histogram', requiresField: true },\n];\n\nexport const orderByOptions = [{ text: 'Doc Count', value: '_count' }, { text: 'Term value', value: '_term' }];\n\nexport const orderOptions = [{ text: 'Top', value: 'desc' }, { text: 'Bottom', value: 'asc' }];\n\nexport const sizeOptions = [\n  { text: 'No limit', value: '0' },\n  { text: '1', value: '1' },\n  { text: '2', value: '2' },\n  { text: '3', value: '3' },\n  { text: '5', value: '5' },\n  { text: '10', value: '10' },\n  { text: '15', value: '15' },\n  { text: '20', value: '20' },\n];\n\nexport const extendedStats = [\n  { text: 'Avg', value: 'avg' },\n  { text: 'Min', value: 'min' },\n  { text: 'Max', value: 'max' },\n  { text: 'Sum', value: 'sum' },\n  { text: 'Count', value: 'count' },\n  { text: 'Std Dev', value: 'std_deviation' },\n  { text: 'Std Dev Upper', value: 'std_deviation_bounds_upper' },\n  { text: 'Std Dev Lower', value: 'std_deviation_bounds_lower' },\n];\n\nexport const intervalOptions = [\n  { text: 'auto', value: 'auto' },\n  { text: '10s', value: '10s' },\n  { text: '1m', value: '1m' },\n  { text: '5m', value: '5m' },\n  { text: '10m', value: '10m' },\n  { text: '20m', value: '20m' },\n  { text: '1h', value: '1h' },\n  { text: '1d', value: '1d' },\n];\n\nexport const movingAvgModelOptions = [\n  { text: 'Simple', value: 'simple' },\n  { text: 'Linear', value: 'linear' },\n  { text: 'Exponentially Weighted', value: 'ewma' },\n  { text: 'Holt Linear', value: 'holt' },\n  { text: 'Holt Winters', value: 'holt_winters' },\n];\n\nexport const pipelineOptions = {\n  moving_avg: [\n    { text: 'window', default: 5 },\n    { text: 'model', default: 'simple' },\n    { text: 'predict', default: undefined },\n    { text: 'minimize', default: false },\n  ],\n  derivative: [{ text: 'unit', default: undefined }],\n};\n\nexport const movingAvgModelSettings = {\n  simple: [],\n  linear: [],\n  ewma: [{ text: 'Alpha', value: 'alpha', default: undefined }],\n  holt: [{ text: 'Alpha', value: 'alpha', default: undefined }, { text: 'Beta', value: 'beta', default: undefined }],\n  holt_winters: [\n    { text: 'Alpha', value: 'alpha', default: undefined },\n    { text: 'Beta', value: 'beta', default: undefined },\n    { text: 'Gamma', value: 'gamma', default: undefined },\n    { text: 'Period', value: 'period', default: undefined },\n    { text: 'Pad', value: 'pad', default: undefined, isCheckbox: true },\n  ],\n};\n\nexport function getMetricAggTypes(esVersion) {\n  return _.filter(metricAggTypes, function(f) {\n    if (f.minVersion) {\n      return f.minVersion <= esVersion;\n    } else {\n      return true;\n    }\n  });\n}\n\nexport function getPipelineOptions(metric) {\n  if (!isPipelineAgg(metric.type)) {\n    return [];\n  }\n\n  return pipelineOptions[metric.type];\n}\n\nexport function isPipelineAgg(metricType) {\n  if (metricType) {\n    var po = pipelineOptions[metricType];\n    return po !== null && po !== undefined;\n  }\n\n  return false;\n}\n\nexport function getPipelineAggOptions(targets) {\n  var result = [];\n  _.each(targets.metrics, function(metric) {\n    if (!isPipelineAgg(metric.type)) {\n      result.push({ text: describeMetric(metric), value: metric.id });\n    }\n  });\n\n  return result;\n}\n\nexport function getMovingAvgSettings(model, filtered) {\n  var filteredResult = [];\n  if (filtered) {\n    _.each(movingAvgModelSettings[model], function(setting) {\n      if (!setting.isCheckbox) {\n        filteredResult.push(setting);\n      }\n    });\n    return filteredResult;\n  }\n  return movingAvgModelSettings[model];\n}\n\nexport function getOrderByOptions(target) {\n  var metricRefs = [];\n  _.each(target.metrics, function(metric) {\n    if (metric.type !== 'count') {\n      metricRefs.push({ text: describeMetric(metric), value: metric.id });\n    }\n  });\n\n  return orderByOptions.concat(metricRefs);\n}\n\nexport function describeOrder(order) {\n  var def = _.find(orderOptions, { value: order });\n  return def.text;\n}\n\nexport function describeMetric(metric) {\n  var def = _.find(metricAggTypes, { value: metric.type });\n  return def.text + ' ' + metric.field;\n}\n\nexport function describeOrderBy(orderBy, target) {\n  var def = _.find(orderByOptions, { value: orderBy });\n  if (def) {\n    return def.text;\n  }\n  var metric = _.find(target.metrics, { id: orderBy });\n  if (metric) {\n    return describeMetric(metric);\n  } else {\n    return 'metric not found';\n  }\n}\n","import * as queryDef from './query_def';\n\nexport class ElasticQueryBuilder {\n  timeField: string;\n  esVersion: number;\n\n  constructor(options) {\n    this.timeField = options.timeField;\n    this.esVersion = options.esVersion;\n  }\n\n  getRangeFilter() {\n    var filter = {};\n    filter[this.timeField] = {\n      gte: '$timeFrom',\n      lte: '$timeTo',\n      format: 'epoch_millis',\n    };\n\n    return filter;\n  }\n\n  buildTermsAgg(aggDef, queryNode, target) {\n    var metricRef, metric, y;\n    queryNode.terms = { field: aggDef.field };\n\n    if (!aggDef.settings) {\n      return queryNode;\n    }\n\n    queryNode.terms.size = parseInt(aggDef.settings.size, 10) === 0 ? 500 : parseInt(aggDef.settings.size, 10);\n    if (aggDef.settings.orderBy !== void 0) {\n      queryNode.terms.order = {};\n      queryNode.terms.order[aggDef.settings.orderBy] = aggDef.settings.order;\n\n      // if metric ref, look it up and add it to this agg level\n      metricRef = parseInt(aggDef.settings.orderBy, 10);\n      if (!isNaN(metricRef)) {\n        for (y = 0; y < target.metrics.length; y++) {\n          metric = target.metrics[y];\n          if (metric.id === aggDef.settings.orderBy) {\n            queryNode.aggs = {};\n            queryNode.aggs[metric.id] = {};\n            queryNode.aggs[metric.id][metric.type] = { field: metric.field };\n            break;\n          }\n        }\n      }\n    }\n\n    if (aggDef.settings.min_doc_count !== void 0) {\n      queryNode.terms.min_doc_count = parseInt(aggDef.settings.min_doc_count, 10);\n    }\n\n    if (aggDef.settings.missing) {\n      queryNode.terms.missing = aggDef.settings.missing;\n    }\n\n    return queryNode;\n  }\n\n  getDateHistogramAgg(aggDef) {\n    var esAgg: any = {};\n    var settings = aggDef.settings || {};\n    esAgg.interval = settings.interval;\n    esAgg.field = this.timeField;\n    esAgg.min_doc_count = settings.min_doc_count || 0;\n    esAgg.extended_bounds = { min: '$timeFrom', max: '$timeTo' };\n    esAgg.format = 'epoch_millis';\n\n    if (esAgg.interval === 'auto') {\n      esAgg.interval = '$__interval';\n    }\n\n    if (settings.missing) {\n      esAgg.missing = settings.missing;\n    }\n\n    return esAgg;\n  }\n\n  getHistogramAgg(aggDef) {\n    var esAgg: any = {};\n    var settings = aggDef.settings || {};\n    esAgg.interval = settings.interval;\n    esAgg.field = aggDef.field;\n    esAgg.min_doc_count = settings.min_doc_count || 0;\n\n    if (settings.missing) {\n      esAgg.missing = settings.missing;\n    }\n    return esAgg;\n  }\n\n  getFiltersAgg(aggDef) {\n    var filterObj = {};\n    for (var i = 0; i < aggDef.settings.filters.length; i++) {\n      var query = aggDef.settings.filters[i].query;\n      var label = aggDef.settings.filters[i].label;\n      label = label === '' || label === undefined ? query : label;\n      filterObj[label] = {\n        query_string: {\n          query: query,\n          analyze_wildcard: true,\n        },\n      };\n    }\n\n    return filterObj;\n  }\n\n  documentQuery(query, size) {\n    query.size = size;\n    query.sort = {};\n    query.sort[this.timeField] = { order: 'desc', unmapped_type: 'boolean' };\n\n    // fields field not supported on ES 5.x\n    if (this.esVersion < 5) {\n      query.fields = ['*', '_source'];\n    }\n\n    query.script_fields = {};\n    if (this.esVersion < 5) {\n      query.fielddata_fields = [this.timeField];\n    } else {\n      query.docvalue_fields = [this.timeField];\n    }\n    return query;\n  }\n\n  addAdhocFilters(query, adhocFilters) {\n    if (!adhocFilters) {\n      return;\n    }\n\n    var i, filter, condition, queryCondition;\n\n    for (i = 0; i < adhocFilters.length; i++) {\n      filter = adhocFilters[i];\n      condition = {};\n      condition[filter.key] = filter.value;\n      queryCondition = {};\n      queryCondition[filter.key] = { query: filter.value };\n\n      switch (filter.operator) {\n        case '=':\n          if (!query.query.bool.must) {\n            query.query.bool.must = [];\n          }\n          query.query.bool.must.push({ match_phrase: queryCondition });\n          break;\n        case '!=':\n          if (!query.query.bool.must_not) {\n            query.query.bool.must_not = [];\n          }\n          query.query.bool.must_not.push({ match_phrase: queryCondition });\n          break;\n        case '<':\n          condition[filter.key] = { lt: filter.value };\n          query.query.bool.filter.push({ range: condition });\n          break;\n        case '>':\n          condition[filter.key] = { gt: filter.value };\n          query.query.bool.filter.push({ range: condition });\n          break;\n        case '=~':\n          query.query.bool.filter.push({ regexp: condition });\n          break;\n        case '!~':\n          query.query.bool.filter.push({\n            bool: { must_not: { regexp: condition } },\n          });\n          break;\n      }\n    }\n  }\n\n  build(target, adhocFilters?, queryString?) {\n    // make sure query has defaults;\n    target.metrics = target.metrics || [{ type: 'count', id: '1' }];\n    target.bucketAggs = target.bucketAggs || [{ type: 'date_histogram', id: '2', settings: { interval: 'auto' } }];\n    target.timeField = this.timeField;\n\n    var i, nestedAggs, metric;\n    var query = {\n      size: 0,\n      query: {\n        bool: {\n          filter: [\n            { range: this.getRangeFilter() },\n            {\n              query_string: {\n                analyze_wildcard: true,\n                query: queryString,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.addAdhocFilters(query, adhocFilters);\n\n    // handle document query\n    if (target.bucketAggs.length === 0) {\n      metric = target.metrics[0];\n      if (!metric || metric.type !== 'raw_document') {\n        throw { message: 'Invalid query' };\n      }\n\n      var size = (metric.settings && metric.settings.size) || 500;\n      return this.documentQuery(query, size);\n    }\n\n    nestedAggs = query;\n\n    for (i = 0; i < target.bucketAggs.length; i++) {\n      var aggDef = target.bucketAggs[i];\n      var esAgg = {};\n\n      switch (aggDef.type) {\n        case 'date_histogram': {\n          esAgg['date_histogram'] = this.getDateHistogramAgg(aggDef);\n          break;\n        }\n        case 'histogram': {\n          esAgg['histogram'] = this.getHistogramAgg(aggDef);\n          break;\n        }\n        case 'filters': {\n          esAgg['filters'] = { filters: this.getFiltersAgg(aggDef) };\n          break;\n        }\n        case 'terms': {\n          this.buildTermsAgg(aggDef, esAgg, target);\n          break;\n        }\n        case 'geohash_grid': {\n          esAgg['geohash_grid'] = {\n            field: aggDef.field,\n            precision: aggDef.settings.precision,\n          };\n          break;\n        }\n      }\n\n      nestedAggs.aggs = nestedAggs.aggs || {};\n      nestedAggs.aggs[aggDef.id] = esAgg;\n      nestedAggs = esAgg;\n    }\n\n    nestedAggs.aggs = {};\n\n    for (i = 0; i < target.metrics.length; i++) {\n      metric = target.metrics[i];\n      if (metric.type === 'count') {\n        continue;\n      }\n\n      var aggField = {};\n      var metricAgg = null;\n\n      if (queryDef.isPipelineAgg(metric.type)) {\n        if (metric.pipelineAgg && /^\\d*$/.test(metric.pipelineAgg)) {\n          metricAgg = { buckets_path: metric.pipelineAgg };\n        } else {\n          continue;\n        }\n      } else {\n        metricAgg = { field: metric.field };\n      }\n\n      for (var prop in metric.settings) {\n        if (metric.settings.hasOwnProperty(prop) && metric.settings[prop] !== null) {\n          metricAgg[prop] = metric.settings[prop];\n        }\n      }\n\n      aggField[metric.type] = metricAgg;\n      nestedAggs.aggs[metric.id] = aggField;\n    }\n\n    return query;\n  }\n\n  getTermsQuery(queryDef) {\n    var query: any = {\n      size: 0,\n      query: {\n        bool: {\n          filter: [{ range: this.getRangeFilter() }],\n        },\n      },\n    };\n\n    if (queryDef.query) {\n      query.query.bool.filter.push({\n        query_string: {\n          analyze_wildcard: true,\n          query: queryDef.query,\n        },\n      });\n    }\n\n    var size = 500;\n    if (queryDef.size) {\n      size = queryDef.size;\n    }\n\n    query.aggs = {\n      '1': {\n        terms: {\n          field: queryDef.field,\n          size: size,\n          order: {\n            _term: 'asc',\n          },\n        },\n      },\n    };\n    return query;\n  }\n}\n","import _ from 'lodash';\nimport * as queryDef from './query_def';\nimport TableModel from 'app/core/table_model';\n\nexport class ElasticResponse {\n  constructor(private targets, private response) {\n    this.targets = targets;\n    this.response = response;\n  }\n\n  processMetrics(esAgg, target, seriesList, props) {\n    var metric, y, i, newSeries, bucket, value;\n\n    for (y = 0; y < target.metrics.length; y++) {\n      metric = target.metrics[y];\n      if (metric.hide) {\n        continue;\n      }\n\n      switch (metric.type) {\n        case 'count': {\n          newSeries = { datapoints: [], metric: 'count', props: props };\n          for (i = 0; i < esAgg.buckets.length; i++) {\n            bucket = esAgg.buckets[i];\n            value = bucket.doc_count;\n            newSeries.datapoints.push([value, bucket.key]);\n          }\n          seriesList.push(newSeries);\n          break;\n        }\n        case 'percentiles': {\n          if (esAgg.buckets.length === 0) {\n            break;\n          }\n\n          var firstBucket = esAgg.buckets[0];\n          var percentiles = firstBucket[metric.id].values;\n\n          for (var percentileName in percentiles) {\n            newSeries = {\n              datapoints: [],\n              metric: 'p' + percentileName,\n              props: props,\n              field: metric.field,\n            };\n\n            for (i = 0; i < esAgg.buckets.length; i++) {\n              bucket = esAgg.buckets[i];\n              var values = bucket[metric.id].values;\n              newSeries.datapoints.push([values[percentileName], bucket.key]);\n            }\n            seriesList.push(newSeries);\n          }\n\n          break;\n        }\n        case 'extended_stats': {\n          for (var statName in metric.meta) {\n            if (!metric.meta[statName]) {\n              continue;\n            }\n\n            newSeries = {\n              datapoints: [],\n              metric: statName,\n              props: props,\n              field: metric.field,\n            };\n\n            for (i = 0; i < esAgg.buckets.length; i++) {\n              bucket = esAgg.buckets[i];\n              var stats = bucket[metric.id];\n\n              // add stats that are in nested obj to top level obj\n              stats.std_deviation_bounds_upper = stats.std_deviation_bounds.upper;\n              stats.std_deviation_bounds_lower = stats.std_deviation_bounds.lower;\n\n              newSeries.datapoints.push([stats[statName], bucket.key]);\n            }\n\n            seriesList.push(newSeries);\n          }\n\n          break;\n        }\n        default: {\n          newSeries = {\n            datapoints: [],\n            metric: metric.type,\n            field: metric.field,\n            props: props,\n          };\n          for (i = 0; i < esAgg.buckets.length; i++) {\n            bucket = esAgg.buckets[i];\n\n            value = bucket[metric.id];\n            if (value !== undefined) {\n              if (value.normalized_value) {\n                newSeries.datapoints.push([value.normalized_value, bucket.key]);\n              } else {\n                newSeries.datapoints.push([value.value, bucket.key]);\n              }\n            }\n          }\n          seriesList.push(newSeries);\n          break;\n        }\n      }\n    }\n  }\n\n  processAggregationDocs(esAgg, aggDef, target, table, props) {\n    // add columns\n    if (table.columns.length === 0) {\n      for (let propKey of _.keys(props)) {\n        table.addColumn({ text: propKey, filterable: true });\n      }\n      table.addColumn({ text: aggDef.field, filterable: true });\n    }\n\n    // helper func to add values to value array\n    let addMetricValue = (values, metricName, value) => {\n      table.addColumn({ text: metricName });\n      values.push(value);\n    };\n\n    for (let bucket of esAgg.buckets) {\n      let values = [];\n\n      for (let propValues of _.values(props)) {\n        values.push(propValues);\n      }\n\n      // add bucket key (value)\n      values.push(bucket.key);\n\n      for (let metric of target.metrics) {\n        switch (metric.type) {\n          case 'count': {\n            addMetricValue(values, this.getMetricName(metric.type), bucket.doc_count);\n            break;\n          }\n          case 'extended_stats': {\n            for (var statName in metric.meta) {\n              if (!metric.meta[statName]) {\n                continue;\n              }\n\n              var stats = bucket[metric.id];\n              // add stats that are in nested obj to top level obj\n              stats.std_deviation_bounds_upper = stats.std_deviation_bounds.upper;\n              stats.std_deviation_bounds_lower = stats.std_deviation_bounds.lower;\n\n              addMetricValue(values, this.getMetricName(statName), stats[statName]);\n            }\n            break;\n          }\n          default: {\n            let metricName = this.getMetricName(metric.type);\n            let otherMetrics = _.filter(target.metrics, { type: metric.type });\n\n            // if more of the same metric type include field field name in property\n            if (otherMetrics.length > 1) {\n              metricName += ' ' + metric.field;\n            }\n\n            addMetricValue(values, metricName, bucket[metric.id].value);\n            break;\n          }\n        }\n      }\n\n      table.rows.push(values);\n    }\n  }\n\n  // This is quite complex\n  // need to recurise down the nested buckets to build series\n  processBuckets(aggs, target, seriesList, table, props, depth) {\n    var bucket, aggDef, esAgg, aggId;\n    var maxDepth = target.bucketAggs.length - 1;\n\n    for (aggId in aggs) {\n      aggDef = _.find(target.bucketAggs, { id: aggId });\n      esAgg = aggs[aggId];\n\n      if (!aggDef) {\n        continue;\n      }\n\n      if (depth === maxDepth) {\n        if (aggDef.type === 'date_histogram') {\n          this.processMetrics(esAgg, target, seriesList, props);\n        } else {\n          this.processAggregationDocs(esAgg, aggDef, target, table, props);\n        }\n      } else {\n        for (var nameIndex in esAgg.buckets) {\n          bucket = esAgg.buckets[nameIndex];\n          props = _.clone(props);\n          if (bucket.key !== void 0) {\n            props[aggDef.field] = bucket.key;\n          } else {\n            props['filter'] = nameIndex;\n          }\n          if (bucket.key_as_string) {\n            props[aggDef.field] = bucket.key_as_string;\n          }\n          this.processBuckets(bucket, target, seriesList, table, props, depth + 1);\n        }\n      }\n    }\n  }\n\n  private getMetricName(metric) {\n    var metricDef = _.find(queryDef.metricAggTypes, { value: metric });\n    if (!metricDef) {\n      metricDef = _.find(queryDef.extendedStats, { value: metric });\n    }\n\n    return metricDef ? metricDef.text : metric;\n  }\n\n  private getSeriesName(series, target, metricTypeCount) {\n    var metricName = this.getMetricName(series.metric);\n\n    if (target.alias) {\n      var regex = /\\{\\{([\\s\\S]+?)\\}\\}/g;\n\n      return target.alias.replace(regex, function(match, g1, g2) {\n        var group = g1 || g2;\n\n        if (group.indexOf('term ') === 0) {\n          return series.props[group.substring(5)];\n        }\n        if (series.props[group] !== void 0) {\n          return series.props[group];\n        }\n        if (group === 'metric') {\n          return metricName;\n        }\n        if (group === 'field') {\n          return series.field;\n        }\n\n        return match;\n      });\n    }\n\n    if (series.field && queryDef.isPipelineAgg(series.metric)) {\n      var appliedAgg = _.find(target.metrics, { id: series.field });\n      if (appliedAgg) {\n        metricName += ' ' + queryDef.describeMetric(appliedAgg);\n      } else {\n        metricName = 'Unset';\n      }\n    } else if (series.field) {\n      metricName += ' ' + series.field;\n    }\n\n    var propKeys = _.keys(series.props);\n    if (propKeys.length === 0) {\n      return metricName;\n    }\n\n    var name = '';\n    for (var propName in series.props) {\n      name += series.props[propName] + ' ';\n    }\n\n    if (metricTypeCount === 1) {\n      return name.trim();\n    }\n\n    return name.trim() + ' ' + metricName;\n  }\n\n  nameSeries(seriesList, target) {\n    var metricTypeCount = _.uniq(_.map(seriesList, 'metric')).length;\n\n    for (var i = 0; i < seriesList.length; i++) {\n      var series = seriesList[i];\n      series.target = this.getSeriesName(series, target, metricTypeCount);\n    }\n  }\n\n  processHits(hits, seriesList) {\n    var series = {\n      target: 'docs',\n      type: 'docs',\n      datapoints: [],\n      total: hits.total,\n      filterable: true,\n    };\n    var propName, hit, doc, i;\n\n    for (i = 0; i < hits.hits.length; i++) {\n      hit = hits.hits[i];\n      doc = {\n        _id: hit._id,\n        _type: hit._type,\n        _index: hit._index,\n      };\n\n      if (hit._source) {\n        for (propName in hit._source) {\n          doc[propName] = hit._source[propName];\n        }\n      }\n\n      for (propName in hit.fields) {\n        doc[propName] = hit.fields[propName];\n      }\n      series.datapoints.push(doc);\n    }\n\n    seriesList.push(series);\n  }\n\n  trimDatapoints(aggregations, target) {\n    var histogram = _.find(target.bucketAggs, { type: 'date_histogram' });\n\n    var shouldDropFirstAndLast = histogram && histogram.settings && histogram.settings.trimEdges;\n    if (shouldDropFirstAndLast) {\n      var trim = histogram.settings.trimEdges;\n      for (var prop in aggregations) {\n        var points = aggregations[prop];\n        if (points.datapoints.length > trim * 2) {\n          points.datapoints = points.datapoints.slice(trim, points.datapoints.length - trim);\n        }\n      }\n    }\n  }\n\n  getErrorFromElasticResponse(response, err) {\n    var result: any = {};\n    result.data = JSON.stringify(err, null, 4);\n    if (err.root_cause && err.root_cause.length > 0 && err.root_cause[0].reason) {\n      result.message = err.root_cause[0].reason;\n    } else {\n      result.message = err.reason || 'Unkown elastic error response';\n    }\n\n    if (response.$$config) {\n      result.config = response.$$config;\n    }\n\n    return result;\n  }\n\n  getTimeSeries() {\n    var seriesList = [];\n\n    for (var i = 0; i < this.response.responses.length; i++) {\n      var response = this.response.responses[i];\n      if (response.error) {\n        throw this.getErrorFromElasticResponse(this.response, response.error);\n      }\n\n      if (response.hits && response.hits.hits.length > 0) {\n        this.processHits(response.hits, seriesList);\n      }\n\n      if (response.aggregations) {\n        var aggregations = response.aggregations;\n        var target = this.targets[i];\n        var tmpSeriesList = [];\n        var table = new TableModel();\n\n        this.processBuckets(aggregations, target, tmpSeriesList, table, {}, 0);\n        this.trimDatapoints(tmpSeriesList, target);\n        this.nameSeries(tmpSeriesList, target);\n\n        for (var y = 0; y < tmpSeriesList.length; y++) {\n          seriesList.push(tmpSeriesList[y]);\n        }\n\n        if (table.rows.length > 0) {\n          seriesList.push(table);\n        }\n      }\n    }\n\n    return { data: seriesList };\n  }\n}\n","import moment from 'moment';\n\nconst intervalMap = {\n  Hourly: { startOf: 'hour', amount: 'hours' },\n  Daily: { startOf: 'day', amount: 'days' },\n  Weekly: { startOf: 'isoWeek', amount: 'weeks' },\n  Monthly: { startOf: 'month', amount: 'months' },\n  Yearly: { startOf: 'year', amount: 'years' },\n};\n\nexport class IndexPattern {\n  constructor(private pattern, private interval: string | null) {}\n\n  getIndexForToday() {\n    if (this.interval) {\n      return moment.utc().format(this.pattern);\n    } else {\n      return this.pattern;\n    }\n  }\n\n  getIndexList(from, to) {\n    if (!this.interval) {\n      return this.pattern;\n    }\n\n    var intervalInfo = intervalMap[this.interval];\n    var start = moment(from)\n      .utc()\n      .startOf(intervalInfo.startOf);\n    var endEpoch = moment(to)\n      .utc()\n      .startOf(intervalInfo.startOf)\n      .valueOf();\n    var indexList = [];\n\n    while (start.valueOf() <= endEpoch) {\n      indexList.push(start.format(this.pattern));\n      start.add(1, intervalInfo.amount);\n    }\n\n    return indexList;\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { ElasticQueryBuilder } from './query_builder';\nimport { IndexPattern } from './index_pattern';\nimport { ElasticResponse } from './elastic_response';\n\nexport class ElasticDatasource {\n  basicAuth: string;\n  withCredentials: boolean;\n  url: string;\n  name: string;\n  index: string;\n  timeField: string;\n  esVersion: number;\n  interval: string;\n  maxConcurrentShardRequests: number;\n  queryBuilder: ElasticQueryBuilder;\n  indexPattern: IndexPattern;\n\n  /** @ngInject */\n  constructor(instanceSettings, private $q, private backendSrv, private templateSrv, private timeSrv) {\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.index = instanceSettings.index;\n    this.timeField = instanceSettings.jsonData.timeField;\n    this.esVersion = instanceSettings.jsonData.esVersion;\n    this.indexPattern = new IndexPattern(instanceSettings.index, instanceSettings.jsonData.interval);\n    this.interval = instanceSettings.jsonData.timeInterval;\n    this.maxConcurrentShardRequests = instanceSettings.jsonData.maxConcurrentShardRequests;\n    this.queryBuilder = new ElasticQueryBuilder({\n      timeField: this.timeField,\n      esVersion: this.esVersion,\n    });\n  }\n\n  private request(method, url, data?) {\n    var options: any = {\n      url: this.url + '/' + url,\n      method: method,\n      data: data,\n    };\n\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = {\n        Authorization: this.basicAuth,\n      };\n    }\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  private get(url) {\n    var range = this.timeSrv.timeRange();\n    var index_list = this.indexPattern.getIndexList(range.from.valueOf(), range.to.valueOf());\n    if (_.isArray(index_list) && index_list.length) {\n      return this.request('GET', index_list[0] + url).then(function(results) {\n        results.data.$$config = results.config;\n        return results.data;\n      });\n    } else {\n      return this.request('GET', this.indexPattern.getIndexForToday() + url).then(function(results) {\n        results.data.$$config = results.config;\n        return results.data;\n      });\n    }\n  }\n\n  private post(url, data) {\n    return this.request('POST', url, data)\n      .then(function(results) {\n        results.data.$$config = results.config;\n        return results.data;\n      })\n      .catch(err => {\n        if (err.data && err.data.error) {\n          throw {\n            message: 'Elasticsearch error: ' + err.data.error.reason,\n            error: err.data.error,\n          };\n        }\n\n        throw err;\n      });\n  }\n\n  annotationQuery(options) {\n    var annotation = options.annotation;\n    var timeField = annotation.timeField || '@timestamp';\n    var queryString = annotation.query || '*';\n    var tagsField = annotation.tagsField || 'tags';\n    var textField = annotation.textField || null;\n\n    var range = {};\n    range[timeField] = {\n      from: options.range.from.valueOf(),\n      to: options.range.to.valueOf(),\n      format: 'epoch_millis',\n    };\n\n    var queryInterpolated = this.templateSrv.replace(queryString, {}, 'lucene');\n    var query = {\n      bool: {\n        filter: [\n          { range: range },\n          {\n            query_string: {\n              query: queryInterpolated,\n            },\n          },\n        ],\n      },\n    };\n\n    var data = {\n      query: query,\n      size: 10000,\n    };\n\n    // fields field not supported on ES 5.x\n    if (this.esVersion < 5) {\n      data['fields'] = [timeField, '_source'];\n    }\n\n    var header: any = {\n      search_type: 'query_then_fetch',\n      ignore_unavailable: true,\n    };\n\n    // old elastic annotations had index specified on them\n    if (annotation.index) {\n      header.index = annotation.index;\n    } else {\n      header.index = this.indexPattern.getIndexList(options.range.from, options.range.to);\n    }\n\n    var payload = angular.toJson(header) + '\\n' + angular.toJson(data) + '\\n';\n\n    return this.post('_msearch', payload).then(res => {\n      var list = [];\n      var hits = res.responses[0].hits.hits;\n\n      var getFieldFromSource = function(source, fieldName) {\n        if (!fieldName) {\n          return;\n        }\n\n        var fieldNames = fieldName.split('.');\n        var fieldValue = source;\n\n        for (var i = 0; i < fieldNames.length; i++) {\n          fieldValue = fieldValue[fieldNames[i]];\n          if (!fieldValue) {\n            console.log('could not find field in annotation: ', fieldName);\n            return '';\n          }\n        }\n\n        return fieldValue;\n      };\n\n      for (var i = 0; i < hits.length; i++) {\n        var source = hits[i]._source;\n        var time = getFieldFromSource(source, timeField);\n        if (typeof hits[i].fields !== 'undefined') {\n          var fields = hits[i].fields;\n          if (_.isString(fields[timeField]) || _.isNumber(fields[timeField])) {\n            time = fields[timeField];\n          }\n        }\n\n        var event = {\n          annotation: annotation,\n          time: moment.utc(time).valueOf(),\n          text: getFieldFromSource(source, textField),\n          tags: getFieldFromSource(source, tagsField),\n        };\n\n        // legacy support for title tield\n        if (annotation.titleField) {\n          const title = getFieldFromSource(source, annotation.titleField);\n          if (title) {\n            event.text = title + '\\n' + event.text;\n          }\n        }\n\n        if (typeof event.tags === 'string') {\n          event.tags = event.tags.split(',');\n        }\n\n        list.push(event);\n      }\n      return list;\n    });\n  }\n\n  testDatasource() {\n    this.timeSrv.setTime({ from: 'now-1m', to: 'now' }, true);\n    // validate that the index exist and has date field\n    return this.getFields({ type: 'date' }).then(\n      function(dateFields) {\n        var timeField = _.find(dateFields, { text: this.timeField });\n        if (!timeField) {\n          return {\n            status: 'error',\n            message: 'No date field named ' + this.timeField + ' found',\n          };\n        }\n        return { status: 'success', message: 'Index OK. Time field name OK.' };\n      }.bind(this),\n      function(err) {\n        console.log(err);\n        if (err.data && err.data.error) {\n          var message = angular.toJson(err.data.error);\n          if (err.data.error.reason) {\n            message = err.data.error.reason;\n          }\n          return { status: 'error', message: message };\n        } else {\n          return { status: 'error', message: err.status };\n        }\n      }\n    );\n  }\n\n  getQueryHeader(searchType, timeFrom, timeTo) {\n    var query_header: any = {\n      search_type: searchType,\n      ignore_unavailable: true,\n      index: this.indexPattern.getIndexList(timeFrom, timeTo),\n    };\n    if (this.esVersion >= 56) {\n      query_header['max_concurrent_shard_requests'] = this.maxConcurrentShardRequests;\n    }\n    return angular.toJson(query_header);\n  }\n\n  query(options) {\n    var payload = '';\n    var target;\n    var sentTargets = [];\n\n    // add global adhoc filters to timeFilter\n    var adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n\n    for (var i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (target.hide) {\n        continue;\n      }\n\n      var queryString = this.templateSrv.replace(target.query || '*', options.scopedVars, 'lucene');\n      var queryObj = this.queryBuilder.build(target, adhocFilters, queryString);\n      var esQuery = angular.toJson(queryObj);\n\n      var searchType = queryObj.size === 0 && this.esVersion < 5 ? 'count' : 'query_then_fetch';\n      var header = this.getQueryHeader(searchType, options.range.from, options.range.to);\n      payload += header + '\\n';\n\n      payload += esQuery + '\\n';\n      sentTargets.push(target);\n    }\n\n    if (sentTargets.length === 0) {\n      return this.$q.when([]);\n    }\n\n    payload = payload.replace(/\\$timeFrom/g, options.range.from.valueOf());\n    payload = payload.replace(/\\$timeTo/g, options.range.to.valueOf());\n    payload = this.templateSrv.replace(payload, options.scopedVars);\n\n    return this.post('_msearch', payload).then(function(res) {\n      return new ElasticResponse(sentTargets, res).getTimeSeries();\n    });\n  }\n\n  getFields(query) {\n    return this.get('/_mapping').then(function(result) {\n      var typeMap = {\n        float: 'number',\n        double: 'number',\n        integer: 'number',\n        long: 'number',\n        date: 'date',\n        string: 'string',\n        text: 'string',\n        scaled_float: 'number',\n        nested: 'nested',\n      };\n\n      function shouldAddField(obj, key, query) {\n        if (key[0] === '_') {\n          return false;\n        }\n\n        if (!query.type) {\n          return true;\n        }\n\n        // equal query type filter, or via typemap translation\n        return query.type === obj.type || query.type === typeMap[obj.type];\n      }\n\n      // Store subfield names: [system, process, cpu, total] -> system.process.cpu.total\n      var fieldNameParts = [];\n      var fields = {};\n\n      function getFieldsRecursively(obj) {\n        for (var key in obj) {\n          var subObj = obj[key];\n\n          // Check mapping field for nested fields\n          if (_.isObject(subObj.properties)) {\n            fieldNameParts.push(key);\n            getFieldsRecursively(subObj.properties);\n          }\n\n          if (_.isObject(subObj.fields)) {\n            fieldNameParts.push(key);\n            getFieldsRecursively(subObj.fields);\n          }\n\n          if (_.isString(subObj.type)) {\n            var fieldName = fieldNameParts.concat(key).join('.');\n\n            // Hide meta-fields and check field type\n            if (shouldAddField(subObj, key, query)) {\n              fields[fieldName] = {\n                text: fieldName,\n                type: subObj.type,\n              };\n            }\n          }\n        }\n        fieldNameParts.pop();\n      }\n\n      for (var indexName in result) {\n        var index = result[indexName];\n        if (index && index.mappings) {\n          var mappings = index.mappings;\n          for (var typeName in mappings) {\n            var properties = mappings[typeName].properties;\n            getFieldsRecursively(properties);\n          }\n        }\n      }\n\n      // transform to array\n      return _.map(fields, function(value) {\n        return value;\n      });\n    });\n  }\n\n  getTerms(queryDef) {\n    var range = this.timeSrv.timeRange();\n    var searchType = this.esVersion >= 5 ? 'query_then_fetch' : 'count';\n    var header = this.getQueryHeader(searchType, range.from, range.to);\n    var esQuery = angular.toJson(this.queryBuilder.getTermsQuery(queryDef));\n\n    esQuery = esQuery.replace(/\\$timeFrom/g, range.from.valueOf());\n    esQuery = esQuery.replace(/\\$timeTo/g, range.to.valueOf());\n    esQuery = header + '\\n' + esQuery + '\\n';\n\n    return this.post('_msearch?search_type=' + searchType, esQuery).then(function(res) {\n      if (!res.responses[0].aggregations) {\n        return [];\n      }\n\n      var buckets = res.responses[0].aggregations['1'].buckets;\n      return _.map(buckets, function(bucket) {\n        return {\n          text: bucket.key_as_string || bucket.key,\n          value: bucket.key,\n        };\n      });\n    });\n  }\n\n  metricFindQuery(query) {\n    query = angular.fromJson(query);\n    if (!query) {\n      return this.$q.when([]);\n    }\n\n    if (query.find === 'fields') {\n      query.field = this.templateSrv.replace(query.field, {}, 'lucene');\n      return this.getFields(query);\n    }\n\n    if (query.find === 'terms') {\n      query.field = this.templateSrv.replace(query.field, {}, 'lucene');\n      query.query = this.templateSrv.replace(query.query || '*', {}, 'lucene');\n      return this.getTerms(query);\n    }\n  }\n\n  getTagKeys() {\n    return this.getFields({});\n  }\n\n  getTagValues(options) {\n    return this.getTerms({ field: options.key, query: '*' });\n  }\n\n  targetContainsTemplate(target) {\n    if (this.templateSrv.variableExists(target.query) || this.templateSrv.variableExists(target.alias)) {\n      return true;\n    }\n\n    for (let bucketAgg of target.bucketAggs) {\n      if (this.templateSrv.variableExists(bucketAgg.field) || this.objectContainsTemplate(bucketAgg.settings)) {\n        return true;\n      }\n    }\n\n    for (let metric of target.metrics) {\n      if (\n        this.templateSrv.variableExists(metric.field) ||\n        this.objectContainsTemplate(metric.settings) ||\n        this.objectContainsTemplate(metric.meta)\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private isPrimitive(obj) {\n    if (obj === null || obj === undefined) {\n      return true;\n    }\n    if (['string', 'number', 'boolean'].some(type => type === typeof true)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private objectContainsTemplate(obj) {\n    if (!obj) {\n      return false;\n    }\n\n    for (let key of Object.keys(obj)) {\n      if (this.isPrimitive(obj[key])) {\n        if (this.templateSrv.variableExists(obj[key])) {\n          return true;\n        }\n      } else if (Array.isArray(obj[key])) {\n        for (let item of obj[key]) {\n          if (this.objectContainsTemplate(item)) {\n            return true;\n          }\n        }\n      } else {\n        if (this.objectContainsTemplate(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport * as queryDef from './query_def';\n\nexport function elasticBucketAgg() {\n  return {\n    templateUrl: 'public/app/plugins/datasource/elasticsearch/partials/bucket_agg.html',\n    controller: 'ElasticBucketAggCtrl',\n    restrict: 'E',\n    scope: {\n      target: '=',\n      index: '=',\n      onChange: '&',\n      getFields: '&',\n    },\n  };\n}\n\nexport class ElasticBucketAggCtrl {\n  /** @nginject */\n  constructor($scope, uiSegmentSrv, $q, $rootScope) {\n    var bucketAggs = $scope.target.bucketAggs;\n\n    $scope.orderByOptions = [];\n\n    $scope.getBucketAggTypes = function() {\n      return queryDef.bucketAggTypes;\n    };\n\n    $scope.getOrderOptions = function() {\n      return queryDef.orderOptions;\n    };\n\n    $scope.getSizeOptions = function() {\n      return queryDef.sizeOptions;\n    };\n\n    $rootScope.onAppEvent(\n      'elastic-query-updated',\n      function() {\n        $scope.validateModel();\n      },\n      $scope\n    );\n\n    $scope.init = function() {\n      $scope.agg = bucketAggs[$scope.index];\n      $scope.validateModel();\n    };\n\n    $scope.onChangeInternal = function() {\n      $scope.onChange();\n    };\n\n    $scope.onTypeChanged = function() {\n      $scope.agg.settings = {};\n      $scope.showOptions = false;\n\n      switch ($scope.agg.type) {\n        case 'date_histogram':\n        case 'histogram':\n        case 'terms': {\n          delete $scope.agg.query;\n          $scope.agg.field = 'select field';\n          break;\n        }\n        case 'filters': {\n          delete $scope.agg.field;\n          $scope.agg.query = '*';\n          break;\n        }\n        case 'geohash_grid': {\n          $scope.agg.settings.precision = 3;\n          break;\n        }\n      }\n\n      $scope.validateModel();\n      $scope.onChange();\n    };\n\n    $scope.validateModel = function() {\n      $scope.index = _.indexOf(bucketAggs, $scope.agg);\n      $scope.isFirst = $scope.index === 0;\n      $scope.bucketAggCount = bucketAggs.length;\n\n      var settingsLinkText = '';\n      var settings = $scope.agg.settings || {};\n\n      switch ($scope.agg.type) {\n        case 'terms': {\n          settings.order = settings.order || 'desc';\n          settings.size = settings.size || '10';\n          settings.min_doc_count = settings.min_doc_count || 1;\n          settings.orderBy = settings.orderBy || '_term';\n\n          if (settings.size !== '0') {\n            settingsLinkText = queryDef.describeOrder(settings.order) + ' ' + settings.size + ', ';\n          }\n\n          if (settings.min_doc_count > 0) {\n            settingsLinkText += 'Min Doc Count: ' + settings.min_doc_count + ', ';\n          }\n\n          settingsLinkText += 'Order by: ' + queryDef.describeOrderBy(settings.orderBy, $scope.target);\n\n          if (settings.size === '0') {\n            settingsLinkText += ' (' + settings.order + ')';\n          }\n\n          break;\n        }\n        case 'filters': {\n          settings.filters = settings.filters || [{ query: '*' }];\n          settingsLinkText = _.reduce(\n            settings.filters,\n            function(memo, value, index) {\n              memo += 'Q' + (index + 1) + '  = ' + value.query + ' ';\n              return memo;\n            },\n            ''\n          );\n          if (settingsLinkText.length > 50) {\n            settingsLinkText = settingsLinkText.substr(0, 50) + '...';\n          }\n          settingsLinkText = 'Filter Queries (' + settings.filters.length + ')';\n          break;\n        }\n        case 'date_histogram': {\n          settings.interval = settings.interval || 'auto';\n          settings.min_doc_count = settings.min_doc_count || 0;\n          $scope.agg.field = $scope.target.timeField;\n          settingsLinkText = 'Interval: ' + settings.interval;\n\n          if (settings.min_doc_count > 0) {\n            settingsLinkText += ', Min Doc Count: ' + settings.min_doc_count;\n          }\n\n          if (settings.trimEdges === undefined || settings.trimEdges < 0) {\n            settings.trimEdges = 0;\n          }\n\n          if (settings.trimEdges && settings.trimEdges > 0) {\n            settingsLinkText += ', Trim edges: ' + settings.trimEdges;\n          }\n          break;\n        }\n        case 'histogram': {\n          settings.interval = settings.interval || 1000;\n          settings.min_doc_count = _.defaultTo(settings.min_doc_count, 1);\n          settingsLinkText = 'Interval: ' + settings.interval;\n\n          if (settings.min_doc_count > 0) {\n            settingsLinkText += ', Min Doc Count: ' + settings.min_doc_count;\n          }\n          break;\n        }\n        case 'geohash_grid': {\n          // limit precision to 7\n          settings.precision = Math.max(Math.min(settings.precision, 7), 1);\n          settingsLinkText = 'Precision: ' + settings.precision;\n          break;\n        }\n      }\n\n      $scope.settingsLinkText = settingsLinkText;\n      $scope.agg.settings = settings;\n      return true;\n    };\n\n    $scope.addFiltersQuery = function() {\n      $scope.agg.settings.filters.push({ query: '*' });\n    };\n\n    $scope.removeFiltersQuery = function(filter) {\n      $scope.agg.settings.filters = _.without($scope.agg.settings.filters, filter);\n    };\n\n    $scope.toggleOptions = function() {\n      $scope.showOptions = !$scope.showOptions;\n    };\n\n    $scope.getOrderByOptions = function() {\n      return queryDef.getOrderByOptions($scope.target);\n    };\n\n    $scope.getFieldsInternal = function() {\n      if ($scope.agg.type === 'date_histogram') {\n        return $scope.getFields({ $fieldType: 'date' });\n      } else {\n        return $scope.getFields();\n      }\n    };\n\n    $scope.getIntervalOptions = function() {\n      return $q.when(uiSegmentSrv.transformToSegments(true, 'interval')(queryDef.intervalOptions));\n    };\n\n    $scope.addBucketAgg = function() {\n      // if last is date histogram add it before\n      var lastBucket = bucketAggs[bucketAggs.length - 1];\n      var addIndex = bucketAggs.length - 1;\n\n      if (lastBucket && lastBucket.type === 'date_histogram') {\n        addIndex -= 1;\n      }\n\n      var id = _.reduce(\n        $scope.target.bucketAggs.concat($scope.target.metrics),\n        function(max, val) {\n          return parseInt(val.id) > max ? parseInt(val.id) : max;\n        },\n        0\n      );\n\n      bucketAggs.splice(addIndex, 0, { type: 'terms', field: 'select field', id: (id + 1).toString(), fake: true });\n      $scope.onChange();\n    };\n\n    $scope.removeBucketAgg = function() {\n      bucketAggs.splice($scope.index, 1);\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nvar module = angular.module('grafana.directives');\nmodule.directive('elasticBucketAgg', elasticBucketAgg);\nmodule.controller('ElasticBucketAggCtrl', ElasticBucketAggCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport * as queryDef from './query_def';\n\nexport function elasticMetricAgg() {\n  return {\n    templateUrl: 'public/app/plugins/datasource/elasticsearch/partials/metric_agg.html',\n    controller: 'ElasticMetricAggCtrl',\n    restrict: 'E',\n    scope: {\n      target: '=',\n      index: '=',\n      onChange: '&',\n      getFields: '&',\n      esVersion: '=',\n    },\n  };\n}\n\nexport class ElasticMetricAggCtrl {\n  constructor($scope, uiSegmentSrv, $q, $rootScope) {\n    var metricAggs = $scope.target.metrics;\n    $scope.metricAggTypes = queryDef.getMetricAggTypes($scope.esVersion);\n    $scope.extendedStats = queryDef.extendedStats;\n    $scope.pipelineAggOptions = [];\n    $scope.modelSettingsValues = {};\n\n    $scope.init = function() {\n      $scope.agg = metricAggs[$scope.index];\n      $scope.validateModel();\n      $scope.updatePipelineAggOptions();\n    };\n\n    $scope.updatePipelineAggOptions = function() {\n      $scope.pipelineAggOptions = queryDef.getPipelineAggOptions($scope.target);\n    };\n\n    $rootScope.onAppEvent(\n      'elastic-query-updated',\n      function() {\n        $scope.index = _.indexOf(metricAggs, $scope.agg);\n        $scope.updatePipelineAggOptions();\n        $scope.validateModel();\n      },\n      $scope\n    );\n\n    $scope.validateModel = function() {\n      $scope.isFirst = $scope.index === 0;\n      $scope.isSingle = metricAggs.length === 1;\n      $scope.settingsLinkText = '';\n      $scope.aggDef = _.find($scope.metricAggTypes, { value: $scope.agg.type });\n\n      if (queryDef.isPipelineAgg($scope.agg.type)) {\n        $scope.agg.pipelineAgg = $scope.agg.pipelineAgg || 'select metric';\n        $scope.agg.field = $scope.agg.pipelineAgg;\n\n        var pipelineOptions = queryDef.getPipelineOptions($scope.agg);\n        if (pipelineOptions.length > 0) {\n          _.each(pipelineOptions, function(opt) {\n            $scope.agg.settings[opt.text] = $scope.agg.settings[opt.text] || opt.default;\n          });\n          $scope.settingsLinkText = 'Options';\n        }\n      } else if (!$scope.agg.field) {\n        $scope.agg.field = 'select field';\n      }\n      switch ($scope.agg.type) {\n        case 'cardinality': {\n          var precision_threshold = $scope.agg.settings.precision_threshold || '';\n          $scope.settingsLinkText = 'Precision threshold: ' + precision_threshold;\n          break;\n        }\n        case 'percentiles': {\n          $scope.agg.settings.percents = $scope.agg.settings.percents || [25, 50, 75, 95, 99];\n          $scope.settingsLinkText = 'Values: ' + $scope.agg.settings.percents.join(',');\n          break;\n        }\n        case 'extended_stats': {\n          if (_.keys($scope.agg.meta).length === 0) {\n            $scope.agg.meta.std_deviation_bounds_lower = true;\n            $scope.agg.meta.std_deviation_bounds_upper = true;\n          }\n\n          var stats = _.reduce(\n            $scope.agg.meta,\n            function(memo, val, key) {\n              if (val) {\n                var def = _.find($scope.extendedStats, { value: key });\n                memo.push(def.text);\n              }\n              return memo;\n            },\n            []\n          );\n\n          $scope.settingsLinkText = 'Stats: ' + stats.join(', ');\n          break;\n        }\n        case 'moving_avg': {\n          $scope.movingAvgModelTypes = queryDef.movingAvgModelOptions;\n          $scope.modelSettings = queryDef.getMovingAvgSettings($scope.agg.settings.model, true);\n          $scope.updateMovingAvgModelSettings();\n          break;\n        }\n        case 'raw_document': {\n          $scope.agg.settings.size = $scope.agg.settings.size || 500;\n          $scope.settingsLinkText = 'Size: ' + $scope.agg.settings.size;\n          $scope.target.metrics.splice(0, $scope.target.metrics.length, $scope.agg);\n\n          $scope.target.bucketAggs = [];\n          break;\n        }\n      }\n      if ($scope.aggDef.supportsInlineScript) {\n        // I know this stores the inline script twice\n        // but having it like this simplifes the query_builder\n        var inlineScript = $scope.agg.inlineScript;\n        if (inlineScript) {\n          $scope.agg.settings.script = { inline: inlineScript };\n        } else {\n          delete $scope.agg.settings.script;\n        }\n\n        if ($scope.settingsLinkText === '') {\n          $scope.settingsLinkText = 'Options';\n        }\n      }\n    };\n\n    $scope.toggleOptions = function() {\n      $scope.showOptions = !$scope.showOptions;\n      $scope.updatePipelineAggOptions();\n    };\n\n    $scope.onChangeInternal = function() {\n      $scope.onChange();\n    };\n\n    $scope.updateMovingAvgModelSettings = function() {\n      var modelSettingsKeys = [];\n      var modelSettings = queryDef.getMovingAvgSettings($scope.agg.settings.model, false);\n      for (var i = 0; i < modelSettings.length; i++) {\n        modelSettingsKeys.push(modelSettings[i].value);\n      }\n\n      for (var key in $scope.agg.settings.settings) {\n        if ($scope.agg.settings.settings[key] === null || modelSettingsKeys.indexOf(key) === -1) {\n          delete $scope.agg.settings.settings[key];\n        }\n      }\n    };\n\n    $scope.onChangeClearInternal = function() {\n      delete $scope.agg.settings.minimize;\n      $scope.onChange();\n    };\n\n    $scope.onTypeChange = function() {\n      $scope.agg.settings = {};\n      $scope.agg.meta = {};\n      $scope.showOptions = false;\n      $scope.updatePipelineAggOptions();\n      $scope.onChange();\n    };\n\n    $scope.getFieldsInternal = function() {\n      if ($scope.agg.type === 'cardinality') {\n        return $scope.getFields();\n      }\n      return $scope.getFields({ $fieldType: 'number' });\n    };\n\n    $scope.addMetricAgg = function() {\n      var addIndex = metricAggs.length;\n\n      var id = _.reduce(\n        $scope.target.bucketAggs.concat($scope.target.metrics),\n        function(max, val) {\n          return parseInt(val.id) > max ? parseInt(val.id) : max;\n        },\n        0\n      );\n\n      metricAggs.splice(addIndex, 0, { type: 'count', field: 'select field', id: (id + 1).toString() });\n      $scope.onChange();\n    };\n\n    $scope.removeMetricAgg = function() {\n      metricAggs.splice($scope.index, 1);\n      $scope.onChange();\n    };\n\n    $scope.toggleShowMetric = function() {\n      $scope.agg.hide = !$scope.agg.hide;\n      if (!$scope.agg.hide) {\n        delete $scope.agg.hide;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nvar module = angular.module('grafana.directives');\nmodule.directive('elasticMetricAgg', elasticMetricAgg);\nmodule.controller('ElasticMetricAggCtrl', ElasticMetricAggCtrl);\n","import './bucket_agg';\nimport './metric_agg';\n\nimport angular from 'angular';\nimport _ from 'lodash';\nimport * as queryDef from './query_def';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport class ElasticQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  esVersion: any;\n  rawQueryOld: string;\n\n  /** @ngInject **/\n  constructor($scope, $injector, private $rootScope, private uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.esVersion = this.datasource.esVersion;\n    this.queryUpdated();\n  }\n\n  getFields(type) {\n    var jsonStr = angular.toJson({ find: 'fields', type: type });\n    return this.datasource\n      .metricFindQuery(jsonStr)\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  queryUpdated() {\n    var newJson = angular.toJson(this.datasource.queryBuilder.build(this.target), true);\n    if (this.rawQueryOld && newJson !== this.rawQueryOld) {\n      this.refresh();\n    }\n\n    this.rawQueryOld = newJson;\n    this.$rootScope.appEvent('elastic-query-updated');\n  }\n\n  getCollapsedText() {\n    var metricAggs = this.target.metrics;\n    var bucketAggs = this.target.bucketAggs;\n    var metricAggTypes = queryDef.getMetricAggTypes(this.esVersion);\n    var bucketAggTypes = queryDef.bucketAggTypes;\n    var text = '';\n\n    if (this.target.query) {\n      text += 'Query: ' + this.target.query + ', ';\n    }\n\n    text += 'Metrics: ';\n\n    _.each(metricAggs, (metric, index) => {\n      var aggDef = _.find(metricAggTypes, { value: metric.type });\n      text += aggDef.text + '(';\n      if (aggDef.requiresField) {\n        text += metric.field;\n      }\n      text += '), ';\n    });\n\n    _.each(bucketAggs, (bucketAgg, index) => {\n      if (index === 0) {\n        text += ' Group by: ';\n      }\n\n      var aggDef = _.find(bucketAggTypes, { value: bucketAgg.type });\n      text += aggDef.text + '(';\n      if (aggDef.requiresField) {\n        text += bucketAgg.field;\n      }\n      text += '), ';\n    });\n\n    if (this.target.alias) {\n      text += 'Alias: ' + this.target.alias;\n    }\n\n    return text;\n  }\n\n  handleQueryError(err) {\n    this.error = err.message || 'Failed to issue metric query';\n    return [];\n  }\n}\n","import _ from 'lodash';\n\nexport class ElasticConfigCtrl {\n  static templateUrl = 'public/app/plugins/datasource/elasticsearch/partials/config.html';\n  current: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.timeField = this.current.jsonData.timeField || '@timestamp';\n    this.current.jsonData.esVersion = this.current.jsonData.esVersion || 5;\n    this.current.jsonData.maxConcurrentShardRequests = this.current.jsonData.maxConcurrentShardRequests || 256;\n  }\n\n  indexPatternTypes = [\n    { name: 'No pattern', value: undefined },\n    { name: 'Hourly', value: 'Hourly', example: '[logstash-]YYYY.MM.DD.HH' },\n    { name: 'Daily', value: 'Daily', example: '[logstash-]YYYY.MM.DD' },\n    { name: 'Weekly', value: 'Weekly', example: '[logstash-]GGGG.WW' },\n    { name: 'Monthly', value: 'Monthly', example: '[logstash-]YYYY.MM' },\n    { name: 'Yearly', value: 'Yearly', example: '[logstash-]YYYY' },\n  ];\n\n  esVersions = [{ name: '2.x', value: 2 }, { name: '5.x', value: 5 }, { name: '5.6+', value: 56 }];\n\n  indexPatternTypeChanged() {\n    var def = _.find(this.indexPatternTypes, {\n      value: this.current.jsonData.interval,\n    });\n    this.current.database = def.example || 'es-index-name';\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport * as dateMath from 'app/core/utils/datemath';\n\nexport default class OpenTsDatasource {\n  type: any;\n  url: any;\n  name: any;\n  withCredentials: any;\n  basicAuth: any;\n  tsdbVersion: any;\n  tsdbResolution: any;\n  supportMetrics: any;\n  tagKeys: any;\n\n  aggregatorsPromise: any;\n  filterTypesPromise: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, private $q, private backendSrv, private templateSrv) {\n    this.type = 'opentsdb';\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.basicAuth = instanceSettings.basicAuth;\n    instanceSettings.jsonData = instanceSettings.jsonData || {};\n    this.tsdbVersion = instanceSettings.jsonData.tsdbVersion || 1;\n    this.tsdbResolution = instanceSettings.jsonData.tsdbResolution || 1;\n    this.supportMetrics = true;\n    this.tagKeys = {};\n\n    this.aggregatorsPromise = null;\n    this.filterTypesPromise = null;\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n    var start = this.convertToTSDBTime(options.rangeRaw.from, false);\n    var end = this.convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n\n    _.each(\n      options.targets,\n      function(target) {\n        if (!target.metric) {\n          return;\n        }\n        qs.push(this.convertTargetToQuery(target, options, this.tsdbVersion));\n      }.bind(this)\n    );\n\n    var queries = _.compact(qs);\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n      var d = this.$q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var groupByTags = {};\n    _.each(queries, function(query) {\n      if (query.filters && query.filters.length > 0) {\n        _.each(query.filters, function(val) {\n          groupByTags[val.tagk] = true;\n        });\n      } else {\n        _.each(query.tags, function(val, key) {\n          groupByTags[key] = true;\n        });\n      }\n    });\n\n    options.targets = _.filter(options.targets, function(query) {\n      return query.hide !== true;\n    });\n\n    return this.performTimeSeriesQuery(queries, start, end).then(\n      function(response) {\n        var metricToTargetMapping = this.mapMetricsToTargets(response.data, options, this.tsdbVersion);\n        var result = _.map(\n          response.data,\n          function(metricData, index) {\n            index = metricToTargetMapping[index];\n            if (index === -1) {\n              index = 0;\n            }\n            this._saveTagKeys(metricData);\n\n            return this.transformMetricData(\n              metricData,\n              groupByTags,\n              options.targets[index],\n              options,\n              this.tsdbResolution\n            );\n          }.bind(this)\n        );\n        return { data: result };\n      }.bind(this)\n    );\n  }\n\n  annotationQuery(options) {\n    var start = this.convertToTSDBTime(options.rangeRaw.from, false);\n    var end = this.convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n    var eventList = [];\n\n    qs.push({ aggregator: 'sum', metric: options.annotation.target });\n\n    var queries = _.compact(qs);\n\n    return this.performTimeSeriesQuery(queries, start, end).then(\n      function(results) {\n        if (results.data[0]) {\n          var annotationObject = results.data[0].annotations;\n          if (options.annotation.isGlobal) {\n            annotationObject = results.data[0].globalAnnotations;\n          }\n          if (annotationObject) {\n            _.each(annotationObject, function(annotation) {\n              var event = {\n                text: annotation.description,\n                time: Math.floor(annotation.startTime) * 1000,\n                annotation: options.annotation,\n              };\n\n              eventList.push(event);\n            });\n          }\n        }\n        return eventList;\n      }.bind(this)\n    );\n  }\n\n  targetContainsTemplate(target) {\n    if (target.filters && target.filters.length > 0) {\n      for (var i = 0; i < target.filters.length; i++) {\n        if (this.templateSrv.variableExists(target.filters[i].filter)) {\n          return true;\n        }\n      }\n    }\n\n    if (target.tags && Object.keys(target.tags).length > 0) {\n      for (var tagKey in target.tags) {\n        if (this.templateSrv.variableExists(target.tags[tagKey])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  performTimeSeriesQuery(queries, start, end) {\n    var msResolution = false;\n    if (this.tsdbResolution === 2) {\n      msResolution = true;\n    }\n    var reqBody: any = {\n      start: start,\n      queries: queries,\n      msResolution: msResolution,\n      globalAnnotations: true,\n    };\n    if (this.tsdbVersion === 3) {\n      reqBody.showQuery = true;\n    }\n\n    // Relative queries (e.g. last hour) don't include an end time\n    if (end) {\n      reqBody.end = end;\n    }\n\n    var options = {\n      method: 'POST',\n      url: this.url + '/api/query',\n      data: reqBody,\n    };\n\n    this._addCredentialOptions(options);\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  suggestTagKeys(metric) {\n    return this.$q.when(this.tagKeys[metric] || []);\n  }\n\n  _saveTagKeys(metricData) {\n    var tagKeys = Object.keys(metricData.tags);\n    _.each(metricData.aggregateTags, function(tag) {\n      tagKeys.push(tag);\n    });\n\n    this.tagKeys[metricData.metric] = tagKeys;\n  }\n\n  _performSuggestQuery(query, type) {\n    return this._get('/api/suggest', { type: type, q: query, max: 1000 }).then(function(result) {\n      return result.data;\n    });\n  }\n\n  _performMetricKeyValueLookup(metric, keys) {\n    if (!metric || !keys) {\n      return this.$q.when([]);\n    }\n\n    var keysArray = keys.split(',').map(function(key) {\n      return key.trim();\n    });\n    var key = keysArray[0];\n    var keysQuery = key + '=*';\n\n    if (keysArray.length > 1) {\n      keysQuery += ',' + keysArray.splice(1).join(',');\n    }\n\n    var m = metric + '{' + keysQuery + '}';\n\n    return this._get('/api/search/lookup', { m: m, limit: 3000 }).then(function(result) {\n      result = result.data.results;\n      var tagvs = [];\n      _.each(result, function(r) {\n        if (tagvs.indexOf(r.tags[key]) === -1) {\n          tagvs.push(r.tags[key]);\n        }\n      });\n      return tagvs;\n    });\n  }\n\n  _performMetricKeyLookup(metric) {\n    if (!metric) {\n      return this.$q.when([]);\n    }\n\n    return this._get('/api/search/lookup', { m: metric, limit: 1000 }).then(function(result) {\n      result = result.data.results;\n      var tagks = [];\n      _.each(result, function(r) {\n        _.each(r.tags, function(tagv, tagk) {\n          if (tagks.indexOf(tagk) === -1) {\n            tagks.push(tagk);\n          }\n        });\n      });\n      return tagks;\n    });\n  }\n\n  _get(relativeUrl, params?) {\n    var options = {\n      method: 'GET',\n      url: this.url + relativeUrl,\n      params: params,\n    };\n\n    this._addCredentialOptions(options);\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  _addCredentialOptions(options) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = { Authorization: this.basicAuth };\n    }\n  }\n\n  metricFindQuery(query) {\n    if (!query) {\n      return this.$q.when([]);\n    }\n\n    var interpolated;\n    try {\n      interpolated = this.templateSrv.replace(query, {}, 'distributed');\n    } catch (err) {\n      return this.$q.reject(err);\n    }\n\n    var responseTransform = function(result) {\n      return _.map(result, function(value) {\n        return { text: value };\n      });\n    };\n\n    var metrics_regex = /metrics\\((.*)\\)/;\n    var tag_names_regex = /tag_names\\((.*)\\)/;\n    var tag_values_regex = /tag_values\\((.*?),\\s?(.*)\\)/;\n    var tag_names_suggest_regex = /suggest_tagk\\((.*)\\)/;\n    var tag_values_suggest_regex = /suggest_tagv\\((.*)\\)/;\n\n    var metrics_query = interpolated.match(metrics_regex);\n    if (metrics_query) {\n      return this._performSuggestQuery(metrics_query[1], 'metrics').then(responseTransform);\n    }\n\n    var tag_names_query = interpolated.match(tag_names_regex);\n    if (tag_names_query) {\n      return this._performMetricKeyLookup(tag_names_query[1]).then(responseTransform);\n    }\n\n    var tag_values_query = interpolated.match(tag_values_regex);\n    if (tag_values_query) {\n      return this._performMetricKeyValueLookup(tag_values_query[1], tag_values_query[2]).then(responseTransform);\n    }\n\n    var tag_names_suggest_query = interpolated.match(tag_names_suggest_regex);\n    if (tag_names_suggest_query) {\n      return this._performSuggestQuery(tag_names_suggest_query[1], 'tagk').then(responseTransform);\n    }\n\n    var tag_values_suggest_query = interpolated.match(tag_values_suggest_regex);\n    if (tag_values_suggest_query) {\n      return this._performSuggestQuery(tag_values_suggest_query[1], 'tagv').then(responseTransform);\n    }\n\n    return this.$q.when([]);\n  }\n\n  testDatasource() {\n    return this._performSuggestQuery('cpu', 'metrics').then(function() {\n      return { status: 'success', message: 'Data source is working' };\n    });\n  }\n\n  getAggregators() {\n    if (this.aggregatorsPromise) {\n      return this.aggregatorsPromise;\n    }\n\n    this.aggregatorsPromise = this._get('/api/aggregators').then(function(result) {\n      if (result.data && _.isArray(result.data)) {\n        return result.data.sort();\n      }\n      return [];\n    });\n    return this.aggregatorsPromise;\n  }\n\n  getFilterTypes() {\n    if (this.filterTypesPromise) {\n      return this.filterTypesPromise;\n    }\n\n    this.filterTypesPromise = this._get('/api/config/filters').then(function(result) {\n      if (result.data) {\n        return Object.keys(result.data).sort();\n      }\n      return [];\n    });\n    return this.filterTypesPromise;\n  }\n\n  transformMetricData(md, groupByTags, target, options, tsdbResolution) {\n    var metricLabel = this.createMetricLabel(md, target, groupByTags, options);\n    var dps = [];\n\n    // TSDB returns datapoints has a hash of ts => value.\n    // Can't use _.pairs(invert()) because it stringifies keys/values\n    _.each(md.dps, function(v, k) {\n      if (tsdbResolution === 2) {\n        dps.push([v, k * 1]);\n      } else {\n        dps.push([v, k * 1000]);\n      }\n    });\n\n    return { target: metricLabel, datapoints: dps };\n  }\n\n  createMetricLabel(md, target, groupByTags, options) {\n    if (target.alias) {\n      var scopedVars = _.clone(options.scopedVars || {});\n      _.each(md.tags, function(value, key) {\n        scopedVars['tag_' + key] = { value: value };\n      });\n      return this.templateSrv.replace(target.alias, scopedVars);\n    }\n\n    var label = md.metric;\n    var tagData = [];\n\n    if (!_.isEmpty(md.tags)) {\n      _.each(_.toPairs(md.tags), function(tag) {\n        if (_.has(groupByTags, tag[0])) {\n          tagData.push(tag[0] + '=' + tag[1]);\n        }\n      });\n    }\n\n    if (!_.isEmpty(tagData)) {\n      label += '{' + tagData.join(', ') + '}';\n    }\n\n    return label;\n  }\n\n  convertTargetToQuery(target, options, tsdbVersion) {\n    if (!target.metric || target.hide) {\n      return null;\n    }\n\n    var query: any = {\n      metric: this.templateSrv.replace(target.metric, options.scopedVars, 'pipe'),\n      aggregator: 'avg',\n    };\n\n    if (target.aggregator) {\n      query.aggregator = this.templateSrv.replace(target.aggregator);\n    }\n\n    if (target.shouldComputeRate) {\n      query.rate = true;\n      query.rateOptions = {\n        counter: !!target.isCounter,\n      };\n\n      if (target.counterMax && target.counterMax.length) {\n        query.rateOptions.counterMax = parseInt(target.counterMax);\n      }\n\n      if (target.counterResetValue && target.counterResetValue.length) {\n        query.rateOptions.resetValue = parseInt(target.counterResetValue);\n      }\n\n      if (tsdbVersion >= 2) {\n        query.rateOptions.dropResets =\n          !query.rateOptions.counterMax && (!query.rateOptions.ResetValue || query.rateOptions.ResetValue === 0);\n      }\n    }\n\n    if (!target.disableDownsampling) {\n      var interval = this.templateSrv.replace(target.downsampleInterval || options.interval);\n\n      if (interval.match(/\\.[0-9]+s/)) {\n        interval = parseFloat(interval) * 1000 + 'ms';\n      }\n\n      query.downsample = interval + '-' + target.downsampleAggregator;\n\n      if (target.downsampleFillPolicy && target.downsampleFillPolicy !== 'none') {\n        query.downsample += '-' + target.downsampleFillPolicy;\n      }\n    }\n\n    if (target.filters && target.filters.length > 0) {\n      query.filters = angular.copy(target.filters);\n      if (query.filters) {\n        for (var filter_key in query.filters) {\n          query.filters[filter_key].filter = this.templateSrv.replace(\n            query.filters[filter_key].filter,\n            options.scopedVars,\n            'pipe'\n          );\n        }\n      }\n    } else {\n      query.tags = angular.copy(target.tags);\n      if (query.tags) {\n        for (var tag_key in query.tags) {\n          query.tags[tag_key] = this.templateSrv.replace(query.tags[tag_key], options.scopedVars, 'pipe');\n        }\n      }\n    }\n\n    if (target.explicitTags) {\n      query.explicitTags = true;\n    }\n\n    return query;\n  }\n\n  mapMetricsToTargets(metrics, options, tsdbVersion) {\n    var interpolatedTagValue, arrTagV;\n    return _.map(metrics, metricData => {\n      if (tsdbVersion === 3) {\n        return metricData.query.index;\n      } else {\n        return _.findIndex(options.targets, target => {\n          if (target.filters && target.filters.length > 0) {\n            return target.metric === metricData.metric;\n          } else {\n            return (\n              target.metric === metricData.metric &&\n              _.every(target.tags, (tagV, tagK) => {\n                interpolatedTagValue = this.templateSrv.replace(tagV, options.scopedVars, 'pipe');\n                arrTagV = interpolatedTagValue.split('|');\n                return _.includes(arrTagV, metricData.tags[tagK]) || interpolatedTagValue === '*';\n              })\n            );\n          }\n        });\n      }\n    });\n  }\n\n  convertToTSDBTime(date, roundUp) {\n    if (date === 'now') {\n      return null;\n    }\n\n    date = dateMath.parse(date, roundUp);\n    return date.valueOf();\n  }\n}\n","import { ElasticDatasource } from './datasource';\nimport { ElasticQueryCtrl } from './query_ctrl';\nimport { ElasticConfigCtrl } from './config_ctrl';\n\nclass ElasticAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  ElasticDatasource as Datasource,\n  ElasticQueryCtrl as QueryCtrl,\n  ElasticConfigCtrl as ConfigCtrl,\n  ElasticAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport class OpenTsQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n  aggregators: any;\n  fillPolicies: any;\n  filterTypes: any;\n  tsdbVersion: any;\n  aggregator: any;\n  downsampleInterval: any;\n  downsampleAggregator: any;\n  downsampleFillPolicy: any;\n  errors: any;\n  suggestMetrics: any;\n  suggestTagKeys: any;\n  suggestTagValues: any;\n  addTagMode: boolean;\n  addFilterMode: boolean;\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.errors = this.validateTarget();\n    this.aggregators = ['avg', 'sum', 'min', 'max', 'dev', 'zimsum', 'mimmin', 'mimmax'];\n    this.fillPolicies = ['none', 'nan', 'null', 'zero'];\n    this.filterTypes = [\n      'wildcard',\n      'iliteral_or',\n      'not_iliteral_or',\n      'not_literal_or',\n      'iwildcard',\n      'literal_or',\n      'regexp',\n    ];\n\n    this.tsdbVersion = this.datasource.tsdbVersion;\n\n    if (!this.target.aggregator) {\n      this.target.aggregator = 'sum';\n    }\n\n    if (!this.target.downsampleAggregator) {\n      this.target.downsampleAggregator = 'avg';\n    }\n\n    if (!this.target.downsampleFillPolicy) {\n      this.target.downsampleFillPolicy = 'none';\n    }\n\n    this.datasource.getAggregators().then(aggs => {\n      if (aggs.length !== 0) {\n        this.aggregators = aggs;\n      }\n    });\n\n    this.datasource.getFilterTypes().then(filterTypes => {\n      if (filterTypes.length !== 0) {\n        this.filterTypes = filterTypes;\n      }\n    });\n\n    // needs to be defined here as it is called from typeahead\n    this.suggestMetrics = (query, callback) => {\n      this.datasource\n        .metricFindQuery('metrics(' + query + ')')\n        .then(this.getTextValues)\n        .then(callback);\n    };\n\n    this.suggestTagKeys = (query, callback) => {\n      this.datasource.suggestTagKeys(this.target.metric).then(callback);\n    };\n\n    this.suggestTagValues = (query, callback) => {\n      this.datasource\n        .metricFindQuery('suggest_tagv(' + query + ')')\n        .then(this.getTextValues)\n        .then(callback);\n    };\n  }\n\n  targetBlur() {\n    this.errors = this.validateTarget();\n    this.refresh();\n  }\n\n  getTextValues(metricFindResult) {\n    return _.map(metricFindResult, function(value) {\n      return value.text;\n    });\n  }\n\n  addTag() {\n    if (this.target.filters && this.target.filters.length > 0) {\n      this.errors.tags = 'Please remove filters to use tags, tags and filters are mutually exclusive.';\n    }\n\n    if (!this.addTagMode) {\n      this.addTagMode = true;\n      return;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = {};\n    }\n\n    this.errors = this.validateTarget();\n\n    if (!this.errors.tags) {\n      this.target.tags[this.target.currentTagKey] = this.target.currentTagValue;\n      this.target.currentTagKey = '';\n      this.target.currentTagValue = '';\n      this.targetBlur();\n    }\n\n    this.addTagMode = false;\n  }\n\n  removeTag(key) {\n    delete this.target.tags[key];\n    this.targetBlur();\n  }\n\n  editTag(key, value) {\n    this.removeTag(key);\n    this.target.currentTagKey = key;\n    this.target.currentTagValue = value;\n    this.addTag();\n  }\n\n  closeAddTagMode() {\n    this.addTagMode = false;\n    return;\n  }\n\n  addFilter() {\n    if (this.target.tags && _.size(this.target.tags) > 0) {\n      this.errors.filters = 'Please remove tags to use filters, tags and filters are mutually exclusive.';\n    }\n\n    if (!this.addFilterMode) {\n      this.addFilterMode = true;\n      return;\n    }\n\n    if (!this.target.filters) {\n      this.target.filters = [];\n    }\n\n    if (!this.target.currentFilterType) {\n      this.target.currentFilterType = 'iliteral_or';\n    }\n\n    if (!this.target.currentFilterGroupBy) {\n      this.target.currentFilterGroupBy = false;\n    }\n\n    this.errors = this.validateTarget();\n\n    if (!this.errors.filters) {\n      var currentFilter = {\n        type: this.target.currentFilterType,\n        tagk: this.target.currentFilterKey,\n        filter: this.target.currentFilterValue,\n        groupBy: this.target.currentFilterGroupBy,\n      };\n      this.target.filters.push(currentFilter);\n      this.target.currentFilterType = 'literal_or';\n      this.target.currentFilterKey = '';\n      this.target.currentFilterValue = '';\n      this.target.currentFilterGroupBy = false;\n      this.targetBlur();\n    }\n\n    this.addFilterMode = false;\n  }\n\n  removeFilter(index) {\n    this.target.filters.splice(index, 1);\n    this.targetBlur();\n  }\n\n  editFilter(fil, index) {\n    this.removeFilter(index);\n    this.target.currentFilterKey = fil.tagk;\n    this.target.currentFilterValue = fil.filter;\n    this.target.currentFilterType = fil.type;\n    this.target.currentFilterGroupBy = fil.groupBy;\n    this.addFilter();\n  }\n\n  closeAddFilterMode() {\n    this.addFilterMode = false;\n    return;\n  }\n\n  validateTarget() {\n    var errs: any = {};\n\n    if (this.target.shouldDownsample) {\n      try {\n        if (this.target.downsampleInterval) {\n          kbn.describe_interval(this.target.downsampleInterval);\n        } else {\n          errs.downsampleInterval = \"You must supply a downsample interval (e.g. '1m' or '1h').\";\n        }\n      } catch (err) {\n        errs.downsampleInterval = err.message;\n      }\n    }\n\n    if (this.target.tags && _.has(this.target.tags, this.target.currentTagKey)) {\n      errs.tags = \"Duplicate tag key '\" + this.target.currentTagKey + \"'.\";\n    }\n\n    return errs;\n  }\n}\n","export class OpenTsConfigCtrl {\n  static templateUrl = 'public/app/plugins/datasource/opentsdb/partials/config.html';\n  current: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData = this.current.jsonData || {};\n    this.current.jsonData.tsdbVersion = this.current.jsonData.tsdbVersion || 1;\n    this.current.jsonData.tsdbResolution = this.current.jsonData.tsdbResolution || 1;\n  }\n\n  tsdbVersions = [{ name: '<=2.1', value: 1 }, { name: '==2.2', value: 2 }, { name: '==2.3', value: 3 }];\n\n  tsdbResolutions = [{ name: 'second', value: 1 }, { name: 'millisecond', value: 2 }];\n}\n","import OpenTsDatasource from './datasource';\nimport { OpenTsQueryCtrl } from './query_ctrl';\nimport { OpenTsConfigCtrl } from './config_ctrl';\n\nclass AnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  OpenTsDatasource as Datasource,\n  OpenTsQueryCtrl as QueryCtrl,\n  OpenTsConfigCtrl as ConfigCtrl,\n  AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nclass GrafanaDatasource {\n  /** @ngInject */\n  constructor(private backendSrv, private $q) {}\n\n  query(options) {\n    return this.backendSrv\n      .get('/api/tsdb/testdata/random-walk', {\n        from: options.range.from.valueOf(),\n        to: options.range.to.valueOf(),\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n      })\n      .then(res => {\n        var data = [];\n\n        if (res.results) {\n          _.forEach(res.results, queryRes => {\n            for (let series of queryRes.series) {\n              data.push({\n                target: series.name,\n                datapoints: series.points,\n              });\n            }\n          });\n        }\n\n        return { data: data };\n      });\n  }\n\n  metricFindQuery(options) {\n    return this.$q.when({ data: [] });\n  }\n\n  annotationQuery(options) {\n    const params: any = {\n      from: options.range.from.valueOf(),\n      to: options.range.to.valueOf(),\n      limit: options.annotation.limit,\n      tags: options.annotation.tags,\n    };\n\n    if (options.annotation.type === 'dashboard') {\n      // if no dashboard id yet return\n      if (!options.dashboard.id) {\n        return this.$q.when([]);\n      }\n      // filter by dashboard id\n      params.dashboardId = options.dashboard.id;\n      // remove tags filter if any\n      delete params.tags;\n    } else {\n      // require at least one tag\n      if (!_.isArray(options.annotation.tags) || options.annotation.tags.length === 0) {\n        return this.$q.when([]);\n      }\n    }\n\n    return this.backendSrv.get('/api/annotations', params);\n  }\n}\n\nexport { GrafanaDatasource };\n","import { GrafanaDatasource } from './datasource';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nclass GrafanaQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n}\n\nclass GrafanaAnnotationsQueryCtrl {\n  annotation: any;\n\n  types = [{ text: '仪表盘', value: 'dashboard' }, { text: '标签', value: 'tags' }];\n\n  constructor() {\n    this.annotation.type = this.annotation.type || 'tags';\n    this.annotation.limit = this.annotation.limit || 100;\n  }\n\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  GrafanaDatasource,\n  GrafanaDatasource as Datasource,\n  GrafanaQueryCtrl as QueryCtrl,\n  GrafanaAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport TableModel from 'app/core/table_model';\n\nexport default class InfluxSeries {\n  series: any;\n  alias: any;\n  annotation: any;\n\n  constructor(options) {\n    this.series = options.series;\n    this.alias = options.alias;\n    this.annotation = options.annotation;\n  }\n\n  getTimeSeries() {\n    var output = [];\n    var i, j;\n\n    if (this.series.length === 0) {\n      return output;\n    }\n\n    _.each(this.series, series => {\n      var columns = series.columns.length;\n      var tags = _.map(series.tags, function(value, key) {\n        return key + ': ' + value;\n      });\n\n      for (j = 1; j < columns; j++) {\n        var seriesName = series.name;\n        var columnName = series.columns[j];\n        if (columnName !== 'value') {\n          seriesName = seriesName + '.' + columnName;\n        }\n\n        if (this.alias) {\n          seriesName = this._getSeriesName(series, j);\n        } else if (series.tags) {\n          seriesName = seriesName + ' {' + tags.join(', ') + '}';\n        }\n\n        var datapoints = [];\n        if (series.values) {\n          for (i = 0; i < series.values.length; i++) {\n            datapoints[i] = [series.values[i][j], series.values[i][0]];\n          }\n        }\n\n        output.push({ target: seriesName, datapoints: datapoints });\n      }\n    });\n\n    return output;\n  }\n\n  _getSeriesName(series, index) {\n    var regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\n    var segments = series.name.split('.');\n\n    return this.alias.replace(regex, function(match, g1, g2) {\n      var group = g1 || g2;\n      var segIndex = parseInt(group, 10);\n\n      if (group === 'm' || group === 'measurement') {\n        return series.name;\n      }\n      if (group === 'col') {\n        return series.columns[index];\n      }\n      if (!isNaN(segIndex)) {\n        return segments[segIndex];\n      }\n      if (group.indexOf('tag_') !== 0) {\n        return match;\n      }\n\n      var tag = group.replace('tag_', '');\n      if (!series.tags) {\n        return match;\n      }\n      return series.tags[tag];\n    });\n  }\n\n  getAnnotations() {\n    var list = [];\n\n    _.each(this.series, series => {\n      var titleCol = null;\n      var timeCol = null;\n      var tagsCol = [];\n      var textCol = null;\n\n      _.each(series.columns, (column, index) => {\n        if (column === 'time') {\n          timeCol = index;\n          return;\n        }\n        if (column === 'sequence_number') {\n          return;\n        }\n        if (!titleCol) {\n          titleCol = index;\n        }\n        if (column === this.annotation.titleColumn) {\n          titleCol = index;\n          return;\n        }\n        if (_.includes((this.annotation.tagsColumn || '').replace(' ', '').split(','), column)) {\n          tagsCol.push(index);\n          return;\n        }\n        if (column === this.annotation.textColumn) {\n          textCol = index;\n          return;\n        }\n      });\n\n      _.each(series.values, value => {\n        var data = {\n          annotation: this.annotation,\n          time: +new Date(value[timeCol]),\n          title: value[titleCol],\n          // Remove empty values, then split in different tags for comma separated values\n          tags: _.flatten(\n            tagsCol\n              .filter(function(t) {\n                return value[t];\n              })\n              .map(function(t) {\n                return value[t].split(',');\n              })\n          ),\n          text: value[textCol],\n        };\n\n        list.push(data);\n      });\n    });\n\n    return list;\n  }\n\n  getTable() {\n    var table = new TableModel();\n    var i, j;\n\n    if (this.series.length === 0) {\n      return table;\n    }\n\n    _.each(this.series, (series, seriesIndex) => {\n      if (seriesIndex === 0) {\n        j = 0;\n        // Check that the first column is indeed 'time'\n        if (series.columns[0] === 'time') {\n          // Push this now before the tags and with the right type\n          table.columns.push({ text: 'Time', type: 'time' });\n          j++;\n        }\n        _.each(_.keys(series.tags), function(key) {\n          table.columns.push({ text: key });\n        });\n        for (; j < series.columns.length; j++) {\n          table.columns.push({ text: series.columns[j] });\n        }\n      }\n\n      if (series.values) {\n        for (i = 0; i < series.values.length; i++) {\n          var values = series.values[i];\n          var reordered = [values[0]];\n          if (series.tags) {\n            for (var key in series.tags) {\n              if (series.tags.hasOwnProperty(key)) {\n                reordered.push(series.tags[key]);\n              }\n            }\n          }\n          for (j = 1; j < values.length; j++) {\n            reordered.push(values[j]);\n          }\n          table.rows.push(reordered);\n        }\n      }\n    });\n\n    return table;\n  }\n}\n","import _ from 'lodash';\nimport { QueryPartDef, QueryPart, functionRenderer, suffixRenderer } from 'app/core/components/query_part/query_part';\n\nvar index = [];\nvar categories = {\n  Aggregations: [],\n  Selectors: [],\n  Transformations: [],\n  Predictors: [],\n  Math: [],\n  Aliasing: [],\n  Fields: [],\n};\n\nfunction createPart(part): any {\n  var def = index[part.type];\n  if (!def) {\n    throw { message: 'Could not find query part ' + part.type };\n  }\n\n  return new QueryPart(part, def);\n}\n\nfunction register(options: any) {\n  index[options.type] = new QueryPartDef(options);\n  options.category.push(index[options.type]);\n}\n\nvar groupByTimeFunctions = [];\n\nfunction aliasRenderer(part, innerExpr) {\n  return innerExpr + ' AS ' + '\"' + part.params[0] + '\"';\n}\n\nfunction fieldRenderer(part, innerExpr) {\n  if (part.params[0] === '*') {\n    return '*';\n  }\n  return '\"' + part.params[0] + '\"';\n}\n\nfunction replaceAggregationAddStrategy(selectParts, partModel) {\n  // look for existing aggregation\n  for (var i = 0; i < selectParts.length; i++) {\n    var part = selectParts[i];\n    if (part.def.category === categories.Aggregations) {\n      if (part.def.type === partModel.def.type) {\n        return;\n      }\n      // count distinct is allowed\n      if (part.def.type === 'count' && partModel.def.type === 'distinct') {\n        break;\n      }\n      // remove next aggregation if distinct was replaced\n      if (part.def.type === 'distinct') {\n        var morePartsAvailable = selectParts.length >= i + 2;\n        if (partModel.def.type !== 'count' && morePartsAvailable) {\n          var nextPart = selectParts[i + 1];\n          if (nextPart.def.category === categories.Aggregations) {\n            selectParts.splice(i + 1, 1);\n          }\n        } else if (partModel.def.type === 'count') {\n          if (!morePartsAvailable || selectParts[i + 1].def.type !== 'count') {\n            selectParts.splice(i + 1, 0, partModel);\n          }\n          return;\n        }\n      }\n      selectParts[i] = partModel;\n      return;\n    }\n    if (part.def.category === categories.Selectors) {\n      selectParts[i] = partModel;\n      return;\n    }\n  }\n\n  selectParts.splice(1, 0, partModel);\n}\n\nfunction addTransformationStrategy(selectParts, partModel) {\n  var i;\n  // look for index to add transformation\n  for (i = 0; i < selectParts.length; i++) {\n    var part = selectParts[i];\n    if (part.def.category === categories.Math || part.def.category === categories.Aliasing) {\n      break;\n    }\n  }\n\n  selectParts.splice(i, 0, partModel);\n}\n\nfunction addMathStrategy(selectParts, partModel) {\n  var partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is math, replace it\n    if (selectParts[partCount - 1].def.type === 'math') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n    // if next to last is math, replace it\n    if (partCount > 1 && selectParts[partCount - 2].def.type === 'math') {\n      selectParts[partCount - 2] = partModel;\n      return;\n    } else if (selectParts[partCount - 1].def.type === 'alias') {\n      // if last is alias add it before\n      selectParts.splice(partCount - 1, 0, partModel);\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addAliasStrategy(selectParts, partModel) {\n  var partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is alias, replace it\n    if (selectParts[partCount - 1].def.type === 'alias') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addFieldStrategy(selectParts, partModel, query) {\n  // copy all parts\n  var parts = _.map(selectParts, function(part: any) {\n    return createPart({ type: part.def.type, params: _.clone(part.params) });\n  });\n\n  query.selectModels.push(parts);\n}\n\nregister({\n  type: 'field',\n  addStrategy: addFieldStrategy,\n  category: categories.Fields,\n  params: [{ type: 'field', dynamicLookup: true }],\n  defaultParams: ['value'],\n  renderer: fieldRenderer,\n});\n\n// Aggregations\nregister({\n  type: 'count',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'distinct',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'integral',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mean',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'median',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mode',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'sum',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\n// transformations\n\nregister({\n  type: 'derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'spread',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'moving_average',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [{ name: 'window', type: 'int', options: [5, 10, 20, 30, 40] }],\n  defaultParams: [10],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'cumulative_sum',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'stddev',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'time',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'interval',\n      type: 'time',\n      options: ['$__interval', '1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['$__interval'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'fill',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'fill',\n      type: 'string',\n      options: ['none', 'null', '0', 'previous', 'linear'],\n    },\n  ],\n  defaultParams: ['null'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'elapsed',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\n// predictions\nregister({\n  type: 'holt_winters',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'holt_winters_with_fit',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\n// Selectors\nregister({\n  type: 'bottom',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'first',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'last',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'max',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'min',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'percentile',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'nth', type: 'int' }],\n  defaultParams: [95],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'top',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'tag',\n  category: groupByTimeFunctions,\n  params: [{ name: 'tag', type: 'string', dynamicLookup: true }],\n  defaultParams: ['tag'],\n  renderer: fieldRenderer,\n});\n\nregister({\n  type: 'math',\n  addStrategy: addMathStrategy,\n  category: categories.Math,\n  params: [{ name: 'expr', type: 'string' }],\n  defaultParams: [' / 100'],\n  renderer: suffixRenderer,\n});\n\nregister({\n  type: 'alias',\n  addStrategy: addAliasStrategy,\n  category: categories.Aliasing,\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n  renderMode: 'suffix',\n  renderer: aliasRenderer,\n});\n\nexport default {\n  create: createPart,\n  getCategories: function() {\n    return categories;\n  },\n  replaceAggregationAdd: replaceAggregationAddStrategy,\n};\n","import _ from 'lodash';\nimport queryPart from './query_part';\nimport kbn from 'app/core/utils/kbn';\n\nexport default class InfluxQuery {\n  target: any;\n  selectModels: any[];\n  queryBuilder: any;\n  groupByParts: any;\n  templateSrv: any;\n  scopedVars: any;\n\n  /** @ngInject */\n  constructor(target, templateSrv?, scopedVars?) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n\n    target.policy = target.policy || 'default';\n    target.resultFormat = target.resultFormat || 'time_series';\n    target.orderByTime = target.orderByTime || 'ASC';\n    target.tags = target.tags || [];\n    target.groupBy = target.groupBy || [{ type: 'time', params: ['$__interval'] }, { type: 'fill', params: ['null'] }];\n    target.select = target.select || [[{ type: 'field', params: ['value'] }, { type: 'mean', params: [] }]];\n\n    this.updateProjection();\n  }\n\n  updateProjection() {\n    this.selectModels = _.map(this.target.select, function(parts: any) {\n      return _.map(parts, queryPart.create);\n    });\n    this.groupByParts = _.map(this.target.groupBy, queryPart.create);\n  }\n\n  updatePersistedParts() {\n    this.target.select = _.map(this.selectModels, function(selectParts) {\n      return _.map(selectParts, function(part: any) {\n        return { type: part.def.type, params: part.params };\n      });\n    });\n  }\n\n  hasGroupByTime() {\n    return _.find(this.target.groupBy, (g: any) => g.type === 'time');\n  }\n\n  hasFill() {\n    return _.find(this.target.groupBy, (g: any) => g.type === 'fill');\n  }\n\n  addGroupBy(value) {\n    var stringParts = value.match(/^(\\w+)\\((.*)\\)$/);\n    var typePart = stringParts[1];\n    var arg = stringParts[2];\n    var partModel = queryPart.create({ type: typePart, params: [arg] });\n    var partCount = this.target.groupBy.length;\n\n    if (partCount === 0) {\n      this.target.groupBy.push(partModel.part);\n    } else if (typePart === 'time') {\n      this.target.groupBy.splice(0, 0, partModel.part);\n    } else if (typePart === 'tag') {\n      if (this.target.groupBy[partCount - 1].type === 'fill') {\n        this.target.groupBy.splice(partCount - 1, 0, partModel.part);\n      } else {\n        this.target.groupBy.push(partModel.part);\n      }\n    } else {\n      this.target.groupBy.push(partModel.part);\n    }\n\n    this.updateProjection();\n  }\n\n  removeGroupByPart(part, index) {\n    var categories = queryPart.getCategories();\n\n    if (part.def.type === 'time') {\n      // remove fill\n      this.target.groupBy = _.filter(this.target.groupBy, (g: any) => g.type !== 'fill');\n      // remove aggregations\n      this.target.select = _.map(this.target.select, (s: any) => {\n        return _.filter(s, (part: any) => {\n          var partModel = queryPart.create(part);\n          if (partModel.def.category === categories.Aggregations) {\n            return false;\n          }\n          if (partModel.def.category === categories.Selectors) {\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n\n    this.target.groupBy.splice(index, 1);\n    this.updateProjection();\n  }\n\n  removeSelect(index: number) {\n    this.target.select.splice(index, 1);\n    this.updateProjection();\n  }\n\n  removeSelectPart(selectParts, part) {\n    // if we remove the field remove the whole statement\n    if (part.def.type === 'field') {\n      if (this.selectModels.length > 1) {\n        var modelsIndex = _.indexOf(this.selectModels, selectParts);\n        this.selectModels.splice(modelsIndex, 1);\n      }\n    } else {\n      var partIndex = _.indexOf(selectParts, part);\n      selectParts.splice(partIndex, 1);\n    }\n\n    this.updatePersistedParts();\n  }\n\n  addSelectPart(selectParts, type) {\n    var partModel = queryPart.create({ type: type });\n    partModel.def.addStrategy(selectParts, partModel, this);\n    this.updatePersistedParts();\n  }\n\n  private renderTagCondition(tag, index, interpolate) {\n    var str = '';\n    var operator = tag.operator;\n    var value = tag.value;\n    if (index > 0) {\n      str = (tag.condition || 'AND') + ' ';\n    }\n\n    if (!operator) {\n      if (/^\\/.*\\/$/.test(value)) {\n        operator = '=~';\n      } else {\n        operator = '=';\n      }\n    }\n\n    // quote value unless regex\n    if (operator !== '=~' && operator !== '!~') {\n      if (interpolate) {\n        value = this.templateSrv.replace(value, this.scopedVars);\n      }\n      if (operator !== '>' && operator !== '<') {\n        value = \"'\" + value.replace(/\\\\/g, '\\\\\\\\') + \"'\";\n      }\n    } else if (interpolate) {\n      value = this.templateSrv.replace(value, this.scopedVars, 'regex');\n    }\n\n    return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\n  }\n\n  getMeasurementAndPolicy(interpolate) {\n    var policy = this.target.policy;\n    var measurement = this.target.measurement || 'measurement';\n\n    if (!measurement.match('^/.*/$')) {\n      measurement = '\"' + measurement + '\"';\n    } else if (interpolate) {\n      measurement = this.templateSrv.replace(measurement, this.scopedVars, 'regex');\n    }\n\n    if (policy !== 'default') {\n      policy = '\"' + this.target.policy + '\".';\n    } else {\n      policy = '';\n    }\n\n    return policy + measurement;\n  }\n\n  interpolateQueryStr(value, variable, defaultFormatFn) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return kbn.regexEscape(value);\n    }\n\n    var escapedValues = _.map(value, kbn.regexEscape);\n    return '(' + escapedValues.join('|') + ')';\n  }\n\n  render(interpolate?) {\n    var target = this.target;\n\n    if (target.rawQuery) {\n      if (interpolate) {\n        return this.templateSrv.replace(target.query, this.scopedVars, this.interpolateQueryStr);\n      } else {\n        return target.query;\n      }\n    }\n\n    var query = 'SELECT ';\n    var i, y;\n    for (i = 0; i < this.selectModels.length; i++) {\n      let parts = this.selectModels[i];\n      var selectText = '';\n      for (y = 0; y < parts.length; y++) {\n        let part = parts[y];\n        selectText = part.render(selectText);\n      }\n\n      if (i > 0) {\n        query += ', ';\n      }\n      query += selectText;\n    }\n\n    query += ' FROM ' + this.getMeasurementAndPolicy(interpolate) + ' WHERE ';\n    var conditions = _.map(target.tags, (tag, index) => {\n      return this.renderTagCondition(tag, index, interpolate);\n    });\n\n    if (conditions.length > 0) {\n      query += '(' + conditions.join(' ') + ') AND ';\n    }\n\n    query += '$timeFilter';\n\n    var groupBySection = '';\n    for (i = 0; i < this.groupByParts.length; i++) {\n      var part = this.groupByParts[i];\n      if (i > 0) {\n        // for some reason fill has no separator\n        groupBySection += part.def.type === 'fill' ? ' ' : ', ';\n      }\n      groupBySection += part.render('');\n    }\n\n    if (groupBySection.length) {\n      query += ' GROUP BY ' + groupBySection;\n    }\n\n    if (target.fill) {\n      query += ' fill(' + target.fill + ')';\n    }\n\n    if (target.orderByTime === 'DESC') {\n      query += ' ORDER BY time DESC';\n    }\n\n    if (target.limit) {\n      query += ' LIMIT ' + target.limit;\n    }\n\n    if (target.slimit) {\n      query += ' SLIMIT ' + target.slimit;\n    }\n\n    return query;\n  }\n\n  renderAdhocFilters(filters) {\n    var conditions = _.map(filters, (tag, index) => {\n      return this.renderTagCondition(tag, index, false);\n    });\n    return conditions.join(' ');\n  }\n}\n","import _ from 'lodash';\n\nfunction renderTagCondition(tag, index) {\n  var str = '';\n  var operator = tag.operator;\n  var value = tag.value;\n  if (index > 0) {\n    str = (tag.condition || 'AND') + ' ';\n  }\n\n  if (!operator) {\n    if (/^\\/.*\\/$/.test(tag.value)) {\n      operator = '=~';\n    } else {\n      operator = '=';\n    }\n  }\n\n  // quote value unless regex or number\n  if (operator !== '=~' && operator !== '!~' && isNaN(+value)) {\n    value = \"'\" + value + \"'\";\n  }\n\n  return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\n}\n\nexport class InfluxQueryBuilder {\n  constructor(private target, private database?) {}\n\n  buildExploreQuery(type: string, withKey?: string, withMeasurementFilter?: string) {\n    var query;\n    var measurement;\n    var policy;\n\n    if (type === 'TAG_KEYS') {\n      query = 'SHOW TAG KEYS';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'TAG_VALUES') {\n      query = 'SHOW TAG VALUES';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'MEASUREMENTS') {\n      query = 'SHOW MEASUREMENTS';\n      if (withMeasurementFilter) {\n        query += ' WITH MEASUREMENT =~ /' + withMeasurementFilter + '/';\n      }\n    } else if (type === 'FIELDS') {\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n\n      if (!measurement.match('^/.*/')) {\n        measurement = '\"' + measurement + '\"';\n\n        if (policy && policy !== 'default') {\n          policy = '\"' + policy + '\"';\n          measurement = policy + '.' + measurement;\n        }\n      }\n\n      return 'SHOW FIELD KEYS FROM ' + measurement;\n    } else if (type === 'RETENTION POLICIES') {\n      query = 'SHOW RETENTION POLICIES on \"' + this.database + '\"';\n      return query;\n    }\n\n    if (measurement) {\n      if (!measurement.match('^/.*/') && !measurement.match(/^merge\\(.*\\)/)) {\n        measurement = '\"' + measurement + '\"';\n      }\n\n      if (policy && policy !== 'default') {\n        policy = '\"' + policy + '\"';\n        measurement = policy + '.' + measurement;\n      }\n\n      query += ' FROM ' + measurement;\n    }\n\n    if (withKey) {\n      query += ' WITH KEY = \"' + withKey + '\"';\n    }\n\n    if (this.target.tags && this.target.tags.length > 0) {\n      var whereConditions = _.reduce(\n        this.target.tags,\n        function(memo, tag) {\n          // do not add a condition for the key we want to explore for\n          if (tag.key === withKey) {\n            return memo;\n          }\n          memo.push(renderTagCondition(tag, memo.length));\n          return memo;\n        },\n        []\n      );\n\n      if (whereConditions.length > 0) {\n        query += ' WHERE ' + whereConditions.join(' ');\n      }\n    }\n    if (type === 'MEASUREMENTS') {\n      query += ' LIMIT 100';\n      //Solve issue #2524 by limiting the number of measurements returned\n      //LIMIT must be after WITH MEASUREMENT and WHERE clauses\n      //This also could be used for TAG KEYS and TAG VALUES, if desired\n    }\n    return query;\n  }\n}\n","import _ from 'lodash';\n\nexport default class ResponseParser {\n  parse(query, results) {\n    if (!results || results.results.length === 0) {\n      return [];\n    }\n\n    var influxResults = results.results[0];\n    if (!influxResults.series) {\n      return [];\n    }\n\n    var normalizedQuery = query.toLowerCase();\n    var isValueFirst =\n      normalizedQuery.indexOf('show field keys') >= 0 || normalizedQuery.indexOf('show retention policies') >= 0;\n\n    var res = {};\n    _.each(influxResults.series, serie => {\n      _.each(serie.values, value => {\n        if (_.isArray(value)) {\n          // In general, there are 2 possible shapes for the returned value.\n          // The first one is a two-element array,\n          // where the first element is somewhat a metadata value:\n          // the tag name for SHOW TAG VALUES queries,\n          // the time field for SELECT queries, etc.\n          // The second shape is an one-element array,\n          // that is containing an immediate value.\n          // For example, SHOW FIELD KEYS queries return such shape.\n          // Note, pre-0.11 versions return\n          // the second shape for SHOW TAG VALUES queries\n          // (while the newer versions—first).\n\n          if (isValueFirst) {\n            addUnique(res, value[0]);\n          } else if (value[1] !== undefined) {\n            addUnique(res, value[1]);\n          } else {\n            addUnique(res, value[0]);\n          }\n        } else {\n          addUnique(res, value);\n        }\n      });\n    });\n\n    return _.map(res, value => {\n      return { text: value.toString() };\n    });\n  }\n}\n\nfunction addUnique(arr, value) {\n  arr[value] = value;\n}\n","import _ from 'lodash';\n\nimport * as dateMath from 'app/core/utils/datemath';\nimport InfluxSeries from './influx_series';\nimport InfluxQuery from './influx_query';\nimport ResponseParser from './response_parser';\nimport { InfluxQueryBuilder } from './query_builder';\n\nexport default class InfluxDatasource {\n  type: string;\n  urls: any;\n  username: string;\n  password: string;\n  name: string;\n  database: any;\n  basicAuth: any;\n  withCredentials: any;\n  interval: any;\n  supportAnnotations: boolean;\n  supportMetrics: boolean;\n  responseParser: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, private $q, private backendSrv, private templateSrv) {\n    this.type = 'influxdb';\n    this.urls = _.map(instanceSettings.url.split(','), function(url) {\n      return url.trim();\n    });\n\n    this.username = instanceSettings.username;\n    this.password = instanceSettings.password;\n    this.name = instanceSettings.name;\n    this.database = instanceSettings.database;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.interval = (instanceSettings.jsonData || {}).timeInterval;\n    this.supportAnnotations = true;\n    this.supportMetrics = true;\n    this.responseParser = new ResponseParser();\n  }\n\n  query(options) {\n    var timeFilter = this.getTimeFilter(options);\n    var scopedVars = options.scopedVars;\n    var targets = _.cloneDeep(options.targets);\n    var queryTargets = [];\n    var queryModel;\n    var i, y;\n\n    var allQueries = _.map(targets, target => {\n      if (target.hide) {\n        return '';\n      }\n\n      queryTargets.push(target);\n\n      // backward compatibility\n      scopedVars.interval = scopedVars.__interval;\n\n      queryModel = new InfluxQuery(target, this.templateSrv, scopedVars);\n      return queryModel.render(true);\n    }).reduce((acc, current) => {\n      if (current !== '') {\n        acc += ';' + current;\n      }\n      return acc;\n    });\n\n    if (allQueries === '') {\n      return this.$q.when({ data: [] });\n    }\n\n    // add global adhoc filters to timeFilter\n    var adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    if (adhocFilters.length > 0) {\n      timeFilter += ' AND ' + queryModel.renderAdhocFilters(adhocFilters);\n    }\n\n    // replace grafana variables\n    scopedVars.timeFilter = { value: timeFilter };\n\n    // replace templated variables\n    allQueries = this.templateSrv.replace(allQueries, scopedVars);\n\n    return this._seriesQuery(allQueries, options).then((data): any => {\n      if (!data || !data.results) {\n        return [];\n      }\n\n      var seriesList = [];\n      for (i = 0; i < data.results.length; i++) {\n        var result = data.results[i];\n        if (!result || !result.series) {\n          continue;\n        }\n\n        var target = queryTargets[i];\n        var alias = target.alias;\n        if (alias) {\n          alias = this.templateSrv.replace(target.alias, options.scopedVars);\n        }\n\n        var influxSeries = new InfluxSeries({\n          series: data.results[i].series,\n          alias: alias,\n        });\n\n        switch (target.resultFormat) {\n          case 'table': {\n            seriesList.push(influxSeries.getTable());\n            break;\n          }\n          default: {\n            var timeSeries = influxSeries.getTimeSeries();\n            for (y = 0; y < timeSeries.length; y++) {\n              seriesList.push(timeSeries[y]);\n            }\n            break;\n          }\n        }\n      }\n\n      return { data: seriesList };\n    });\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.query) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    var timeFilter = this.getTimeFilter({ rangeRaw: options.rangeRaw });\n    var query = options.annotation.query.replace('$timeFilter', timeFilter);\n    query = this.templateSrv.replace(query, null, 'regex');\n\n    return this._seriesQuery(query, options).then(data => {\n      if (!data || !data.results || !data.results[0]) {\n        throw { message: 'No results in response from InfluxDB' };\n      }\n      return new InfluxSeries({\n        series: data.results[0].series,\n        annotation: options.annotation,\n      }).getAnnotations();\n    });\n  }\n\n  targetContainsTemplate(target) {\n    for (let group of target.groupBy) {\n      for (let param of group.params) {\n        if (this.templateSrv.variableExists(param)) {\n          return true;\n        }\n      }\n    }\n\n    for (let i in target.tags) {\n      if (this.templateSrv.variableExists(target.tags[i].value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  metricFindQuery(query: string, options?: any) {\n    var interpolated = this.templateSrv.replace(query, null, 'regex');\n\n    return this._seriesQuery(interpolated, options).then(_.curry(this.responseParser.parse)(query));\n  }\n\n  getTagKeys(options) {\n    var queryBuilder = new InfluxQueryBuilder({ measurement: '', tags: [] }, this.database);\n    var query = queryBuilder.buildExploreQuery('TAG_KEYS');\n    return this.metricFindQuery(query, options);\n  }\n\n  getTagValues(options) {\n    var queryBuilder = new InfluxQueryBuilder({ measurement: '', tags: [] }, this.database);\n    var query = queryBuilder.buildExploreQuery('TAG_VALUES', options.key);\n    return this.metricFindQuery(query, options);\n  }\n\n  _seriesQuery(query: string, options?: any) {\n    if (!query) {\n      return this.$q.when({ results: [] });\n    }\n\n    return this._influxRequest('GET', '/query', { q: query, epoch: 'ms' }, options);\n  }\n\n  serializeParams(params) {\n    if (!params) {\n      return '';\n    }\n\n    return _.reduce(\n      params,\n      (memo, value, key) => {\n        if (value === null || value === undefined) {\n          return memo;\n        }\n        memo.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        return memo;\n      },\n      []\n    ).join('&');\n  }\n\n  testDatasource() {\n    var queryBuilder = new InfluxQueryBuilder({ measurement: '', tags: [] }, this.database);\n    var query = queryBuilder.buildExploreQuery('RETENTION POLICIES');\n\n    return this._seriesQuery(query)\n      .then(res => {\n        let error = _.get(res, 'results[0].error');\n        if (error) {\n          return { status: 'error', message: error };\n        }\n        return { status: 'success', message: 'Data source is working' };\n      })\n      .catch(err => {\n        return { status: 'error', message: err.message };\n      });\n  }\n\n  _influxRequest(method: string, url: string, data: any, options?: any) {\n    const currentUrl = this.urls.shift();\n    this.urls.push(currentUrl);\n\n    let params: any = {};\n\n    if (this.username) {\n      params.u = this.username;\n      params.p = this.password;\n    }\n\n    if (options && options.database) {\n      params.db = options.database;\n    } else if (this.database) {\n      params.db = this.database;\n    }\n\n    if (method === 'GET') {\n      _.extend(params, data);\n      data = null;\n    }\n\n    let req: any = {\n      method: method,\n      url: currentUrl + url,\n      params: params,\n      data: data,\n      precision: 'ms',\n      inspect: { type: 'influxdb' },\n      paramSerializer: this.serializeParams,\n    };\n\n    req.headers = req.headers || {};\n    if (this.basicAuth || this.withCredentials) {\n      req.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      req.headers.Authorization = this.basicAuth;\n    }\n\n    return this.backendSrv.datasourceRequest(req).then(\n      result => {\n        return result.data;\n      },\n      function(err) {\n        if (err.status !== 0 || err.status >= 300) {\n          if (err.data && err.data.error) {\n            throw {\n              message: 'InfluxDB Error: ' + err.data.error,\n              data: err.data,\n              config: err.config,\n            };\n          } else {\n            throw {\n              message: 'Network Error: ' + err.statusText + '(' + err.status + ')',\n              data: err.data,\n              config: err.config,\n            };\n          }\n        }\n      }\n    );\n  }\n\n  getTimeFilter(options) {\n    var from = this.getInfluxTime(options.rangeRaw.from, false);\n    var until = this.getInfluxTime(options.rangeRaw.to, true);\n    var fromIsAbsolute = from[from.length - 1] === 'ms';\n\n    if (until === 'now()' && !fromIsAbsolute) {\n      return 'time >= ' + from;\n    }\n\n    return 'time >= ' + from + ' and time <= ' + until;\n  }\n\n  getInfluxTime(date, roundUp) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      var parts = /^now-(\\d+)([d|h|m|s])$/.exec(date);\n      if (parts) {\n        var amount = parseInt(parts[1]);\n        var unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n      date = dateMath.parse(date, roundUp);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport { InfluxQueryBuilder } from './query_builder';\nimport InfluxQuery from './influx_query';\nimport queryPart from './query_part';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport class InfluxQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  queryModel: InfluxQuery;\n  queryBuilder: any;\n  groupBySegment: any;\n  resultFormats: any[];\n  orderByTime: any[];\n  policySegment: any;\n  tagSegments: any[];\n  selectMenu: any;\n  measurementSegment: any;\n  removeTagFilterSegment: any;\n\n  /** @ngInject **/\n  constructor($scope, $injector, private templateSrv, private $q, private uiSegmentSrv) {\n    super($scope, $injector);\n    this.target = this.target;\n    this.queryModel = new InfluxQuery(this.target, templateSrv, this.panel.scopedVars);\n    this.queryBuilder = new InfluxQueryBuilder(this.target, this.datasource.database);\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.resultFormats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n    this.policySegment = uiSegmentSrv.newSegment(this.target.policy);\n\n    if (!this.target.measurement) {\n      this.measurementSegment = uiSegmentSrv.newSelectMeasurement();\n    } else {\n      this.measurementSegment = uiSegmentSrv.newSegment(this.target.measurement);\n    }\n\n    this.tagSegments = [];\n    for (let tag of this.target.tags) {\n      if (!tag.operator) {\n        if (/^\\/.*\\/$/.test(tag.value)) {\n          tag.operator = '=~';\n        } else {\n          tag.operator = '=';\n        }\n      }\n\n      if (tag.condition) {\n        this.tagSegments.push(uiSegmentSrv.newCondition(tag.condition));\n      }\n\n      this.tagSegments.push(uiSegmentSrv.newKey(tag.key));\n      this.tagSegments.push(uiSegmentSrv.newOperator(tag.operator));\n      this.tagSegments.push(uiSegmentSrv.newKeyValue(tag.value));\n    }\n\n    this.fixTagSegments();\n    this.buildSelectMenu();\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({\n      fake: true,\n      value: '-- remove tag filter --',\n    });\n  }\n\n  removeOrderByTime() {\n    this.target.orderByTime = 'ASC';\n  }\n\n  buildSelectMenu() {\n    var categories = queryPart.getCategories();\n    this.selectMenu = _.reduce(\n      categories,\n      function(memo, cat, key) {\n        var menu = {\n          text: key,\n          submenu: cat.map(item => {\n            return { text: item.type, value: item.type };\n          }),\n        };\n        memo.push(menu);\n        return memo;\n      },\n      []\n    );\n  }\n\n  getGroupByOptions() {\n    var query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n\n    return this.datasource\n      .metricFindQuery(query)\n      .then(tags => {\n        var options = [];\n        if (!this.queryModel.hasFill()) {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'fill(null)' }));\n        }\n        if (!this.target.limit) {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'LIMIT' }));\n        }\n        if (!this.target.slimit) {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'SLIMIT' }));\n        }\n        if (this.target.orderByTime === 'ASC') {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'ORDER BY time DESC' }));\n        }\n        if (!this.queryModel.hasGroupByTime()) {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'time($interval)' }));\n        }\n        for (let tag of tags) {\n          options.push(this.uiSegmentSrv.newSegment({ value: 'tag(' + tag.text + ')' }));\n        }\n        return options;\n      })\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  groupByAction() {\n    switch (this.groupBySegment.value) {\n      case 'LIMIT': {\n        this.target.limit = 10;\n        break;\n      }\n      case 'SLIMIT': {\n        this.target.slimit = 10;\n        break;\n      }\n      case 'ORDER BY time DESC': {\n        this.target.orderByTime = 'DESC';\n        break;\n      }\n      default: {\n        this.queryModel.addGroupBy(this.groupBySegment.value);\n      }\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  addSelectPart(selectParts, cat, subitem) {\n    this.queryModel.addSelectPart(selectParts, subitem.value);\n    this.panelCtrl.refresh();\n  }\n\n  handleSelectPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'get-param-options': {\n        var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\n        return this.datasource\n          .metricFindQuery(fieldsQuery)\n          .then(this.transformToSegments(true))\n          .catch(this.handleQueryError.bind(this));\n      }\n      case 'part-param-changed': {\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'action': {\n        this.queryModel.removeSelectPart(selectParts, part);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  handleGroupByPartEvent(part, index, evt) {\n    switch (evt.name) {\n      case 'get-param-options': {\n        var tagsQuery = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n        return this.datasource\n          .metricFindQuery(tagsQuery)\n          .then(this.transformToSegments(true))\n          .catch(this.handleQueryError.bind(this));\n      }\n      case 'part-param-changed': {\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'action': {\n        this.queryModel.removeGroupByPart(part, index);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  fixTagSegments() {\n    var count = this.tagSegments.length;\n    var lastSegment = this.tagSegments[Math.max(count - 1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  measurementChanged() {\n    this.target.measurement = this.measurementSegment.value;\n    this.panelCtrl.refresh();\n  }\n\n  getPolicySegments() {\n    var policiesQuery = this.queryBuilder.buildExploreQuery('RETENTION POLICIES');\n    return this.datasource\n      .metricFindQuery(policiesQuery)\n      .then(this.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  policyChanged() {\n    this.target.policy = this.policySegment.value;\n    this.panelCtrl.refresh();\n  }\n\n  toggleEditorMode() {\n    try {\n      this.target.query = this.queryModel.render(false);\n    } catch (err) {\n      console.log('query render error');\n    }\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  getMeasurements(measurementFilter) {\n    var query = this.queryBuilder.buildExploreQuery('MEASUREMENTS', undefined, measurementFilter);\n    return this.datasource\n      .metricFindQuery(query)\n      .then(this.transformToSegments(true))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  handleQueryError(err) {\n    this.error = err.message || 'Failed to issue metric query';\n    return [];\n  }\n\n  transformToSegments(addTemplateVars) {\n    return results => {\n      var segments = _.map(results, segment => {\n        return this.uiSegmentSrv.newSegment({\n          value: segment.text,\n          expandable: segment.expandable,\n        });\n      });\n\n      if (addTemplateVars) {\n        for (let variable of this.templateSrv.variables) {\n          segments.unshift(\n            this.uiSegmentSrv.newSegment({\n              type: 'value',\n              value: '/^$' + variable.name + '$/',\n              expandable: true,\n            })\n          );\n        }\n      }\n\n      return segments;\n    };\n  }\n\n  getTagsOrValues(segment, index) {\n    if (segment.type === 'condition') {\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND'), this.uiSegmentSrv.newSegment('OR')]);\n    }\n    if (segment.type === 'operator') {\n      var nextValue = this.tagSegments[index + 1].value;\n      if (/^\\/.*\\/$/.test(nextValue)) {\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=~', '!~']));\n      } else {\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=', '!=', '<>', '<', '>']));\n      }\n    }\n\n    var query, addTemplateVars;\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n      addTemplateVars = false;\n    } else if (segment.type === 'value') {\n      query = this.queryBuilder.buildExploreQuery('TAG_VALUES', this.tagSegments[index - 2].value);\n      addTemplateVars = true;\n    }\n\n    return this.datasource\n      .metricFindQuery(query)\n      .then(this.transformToSegments(addTemplateVars))\n      .then(results => {\n        if (segment.type === 'key') {\n          results.splice(0, 0, angular.copy(this.removeTagFilterSegment));\n        }\n        return results;\n      })\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  getFieldSegments() {\n    var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\n    return this.datasource\n      .metricFindQuery(fieldsQuery)\n      .then(this.transformToSegments(false))\n      .catch(this.handleQueryError);\n  }\n\n  tagSegmentUpdated(segment, index) {\n    this.tagSegments[index] = segment;\n\n    // handle remove tag condition\n    if (segment.value === this.removeTagFilterSegment.value) {\n      this.tagSegments.splice(index, 3);\n      if (this.tagSegments.length === 0) {\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n      } else if (this.tagSegments.length > 2) {\n        this.tagSegments.splice(Math.max(index - 1, 0), 1);\n        if (this.tagSegments[this.tagSegments.length - 1].type !== 'plus-button') {\n          this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n        if (index > 2) {\n          this.tagSegments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n        }\n        this.tagSegments.push(this.uiSegmentSrv.newOperator('='));\n        this.tagSegments.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'));\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n\n      if (index + 1 === this.tagSegments.length) {\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\n    this.rebuildTargetTagConditions();\n  }\n\n  rebuildTargetTagConditions() {\n    var tags = [];\n    var tagIndex = 0;\n    var tagOperator = '';\n\n    _.each(this.tagSegments, (segment2, index) => {\n      if (segment2.type === 'key') {\n        if (tags.length === 0) {\n          tags.push({});\n        }\n        tags[tagIndex].key = segment2.value;\n      } else if (segment2.type === 'value') {\n        tagOperator = this.getTagValueOperator(segment2.value, tags[tagIndex].operator);\n        if (tagOperator) {\n          this.tagSegments[index - 1] = this.uiSegmentSrv.newOperator(tagOperator);\n          tags[tagIndex].operator = tagOperator;\n        }\n        tags[tagIndex].value = segment2.value;\n      } else if (segment2.type === 'condition') {\n        tags.push({ condition: segment2.value });\n        tagIndex += 1;\n      } else if (segment2.type === 'operator') {\n        tags[tagIndex].operator = segment2.value;\n      }\n    });\n\n    this.target.tags = tags;\n    this.panelCtrl.refresh();\n  }\n\n  getTagValueOperator(tagValue, tagOperator): string {\n    if (tagOperator !== '=~' && tagOperator !== '!~' && /^\\/.*\\/$/.test(tagValue)) {\n      return '=~';\n    } else if ((tagOperator === '=~' || tagOperator === '!~') && /^(?!\\/.*\\/$)/.test(tagValue)) {\n      return '=';\n    }\n    return null;\n  }\n\n  getCollapsedText() {\n    return this.queryModel.render(false);\n  }\n}\n","import InfluxDatasource from './datasource';\nimport { InfluxQueryCtrl } from './query_ctrl';\n\nclass InfluxConfigCtrl {\n  static templateUrl = 'partials/config.html';\n}\n\nclass InfluxAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  InfluxDatasource as Datasource,\n  InfluxQueryCtrl as QueryCtrl,\n  InfluxConfigCtrl as ConfigCtrl,\n  InfluxAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","export enum LogLevel {\n  crit = 'crit',\n  warn = 'warn',\n  err = 'error',\n  error = 'error',\n  info = 'info',\n  debug = 'debug',\n  trace = 'trace',\n}\n\nexport interface LogSearchMatch {\n  start: number;\n  length: number;\n  text?: string;\n}\n\nexport interface LogRow {\n  key: string;\n  entry: string;\n  logLevel: LogLevel;\n  timestamp: string;\n  timeFromNow: string;\n  timeLocal: string;\n  searchMatches?: LogSearchMatch[];\n}\n\nexport interface LogsModel {\n  rows: LogRow[];\n}\n","import _ from 'lodash';\nimport moment from 'moment';\n\nimport { LogLevel, LogsModel, LogRow } from 'app/core/logs_model';\n\nexport function getLogLevel(line: string): LogLevel {\n  if (!line) {\n    return undefined;\n  }\n  let level: LogLevel;\n  Object.keys(LogLevel).forEach(key => {\n    if (!level) {\n      const regexp = new RegExp(`\\\\b${key}\\\\b`, 'i');\n      if (regexp.test(line)) {\n        level = LogLevel[key];\n      }\n    }\n  });\n  return level;\n}\n\nexport function getSearchMatches(line: string, search: string) {\n  // Empty search can send re.exec() into infinite loop, exit early\n  if (!line || !search) {\n    return [];\n  }\n  const regexp = new RegExp(`(?:${search})`, 'g');\n  const matches = [];\n  let match;\n  while ((match = regexp.exec(line))) {\n    matches.push({\n      text: match[0],\n      start: match.index,\n      length: match[0].length,\n    });\n  }\n  return matches;\n}\n\nexport function processEntry(entry: { line: string; timestamp: string }, stream): LogRow {\n  const { line, timestamp } = entry;\n  const { labels } = stream;\n  const key = `EK${timestamp}${labels}`;\n  const time = moment(timestamp);\n  const timeFromNow = time.fromNow();\n  const timeLocal = time.format('YYYY-MM-DD HH:mm:ss');\n  const searchMatches = getSearchMatches(line, stream.search);\n  const logLevel = getLogLevel(line);\n\n  return {\n    key,\n    logLevel,\n    searchMatches,\n    timeFromNow,\n    timeLocal,\n    entry: line,\n    timestamp: timestamp,\n  };\n}\n\nexport function processStreams(streams, limit?: number): LogsModel {\n  const combinedEntries = streams.reduce((acc, stream) => {\n    return [...acc, ...stream.entries.map(entry => processEntry(entry, stream))];\n  }, []);\n  const sortedEntries = _.chain(combinedEntries)\n    .sortBy('timestamp')\n    .reverse()\n    .slice(0, limit || combinedEntries.length)\n    .value();\n  return { rows: sortedEntries };\n}\n","import _ from 'lodash';\n\nimport * as dateMath from 'app/core/utils/datemath';\n\nimport { processStreams } from './result_transformer';\n\nconst DEFAULT_LIMIT = 100;\n\nconst DEFAULT_QUERY_PARAMS = {\n  direction: 'BACKWARD',\n  limit: DEFAULT_LIMIT,\n  regexp: '',\n  query: '',\n};\n\nconst QUERY_REGEXP = /({\\w+=\"[^\"]+\"})?\\s*(\\w[^{]+)?\\s*({\\w+=\"[^\"]+\"})?/;\nexport function parseQuery(input: string) {\n  const match = input.match(QUERY_REGEXP);\n  let query = '';\n  let regexp = '';\n\n  if (match) {\n    if (match[1]) {\n      query = match[1];\n    }\n    if (match[2]) {\n      regexp = match[2].trim();\n    }\n    if (match[3]) {\n      if (match[1]) {\n        query = `${match[1].slice(0, -1)},${match[3].slice(1)}`;\n      } else {\n        query = match[3];\n      }\n    }\n  }\n\n  return { query, regexp };\n}\n\nfunction serializeParams(data: any) {\n  return Object.keys(data)\n    .map(k => {\n      const v = data[k];\n      return encodeURIComponent(k) + '=' + encodeURIComponent(v);\n    })\n    .join('&');\n}\n\nexport default class LoggingDatasource {\n  /** @ngInject */\n  constructor(private instanceSettings, private backendSrv, private templateSrv) {}\n\n  _request(apiUrl: string, data?, options?: any) {\n    const baseUrl = this.instanceSettings.url;\n    const params = data ? serializeParams(data) : '';\n    const url = `${baseUrl}${apiUrl}?${params}`;\n    const req = {\n      ...options,\n      url,\n    };\n    return this.backendSrv.datasourceRequest(req);\n  }\n\n  prepareQueryTarget(target, options) {\n    const interpolated = this.templateSrv.replace(target.expr);\n    const start = this.getTime(options.range.from, false);\n    const end = this.getTime(options.range.to, true);\n    return {\n      ...DEFAULT_QUERY_PARAMS,\n      ...parseQuery(interpolated),\n      start,\n      end,\n    };\n  }\n\n  query(options) {\n    const queryTargets = options.targets\n      .filter(target => target.expr)\n      .map(target => this.prepareQueryTarget(target, options));\n    if (queryTargets.length === 0) {\n      return Promise.resolve({ data: [] });\n    }\n\n    const queries = queryTargets.map(target => this._request('/api/prom/query', target));\n\n    return Promise.all(queries).then((results: any[]) => {\n      // Flatten streams from multiple queries\n      const allStreams = results.reduce((acc, response, i) => {\n        const streams = response.data.streams || [];\n        // Inject search for match highlighting\n        const search = queryTargets[i].regexp;\n        streams.forEach(s => {\n          s.search = search;\n        });\n        return [...acc, ...streams];\n      }, []);\n      const model = processStreams(allStreams, DEFAULT_LIMIT);\n      return { data: model };\n    });\n  }\n\n  metadataRequest(url) {\n    // HACK to get label values for {job=|}, will be replaced when implementing LoggingQueryField\n    const apiUrl = url.replace('v1', 'prom');\n    return this._request(apiUrl, { silent: true }).then(res => {\n      const data = { data: { data: res.data.values || [] } };\n      return data;\n    });\n  }\n\n  getTime(date, roundUp) {\n    if (_.isString(date)) {\n      date = dateMath.parse(date, roundUp);\n    }\n    return Math.ceil(date.valueOf() * 1e6);\n  }\n\n  testDatasource() {\n    return this._request('/api/prom/label')\n      .then(res => {\n        if (res && res.data && res.data.values && res.data.values.length > 0) {\n          return { status: 'success', message: 'Data source connected and labels found.' };\n        }\n        return {\n          status: 'error',\n          message: 'Data source connected, but no labels received. Verify that logging is configured properly.',\n        };\n      })\n      .catch(err => {\n        return { status: 'error', message: err.message };\n      });\n  }\n}\n","import _ from 'lodash';\n\nexport default class ResponseParser {\n  constructor(private $q) {}\n\n  processQueryResult(res) {\n    var data = [];\n\n    if (!res.data.results) {\n      return { data: data };\n    }\n\n    for (let key in res.data.results) {\n      let queryRes = res.data.results[key];\n\n      if (queryRes.series) {\n        for (let series of queryRes.series) {\n          data.push({\n            target: series.name,\n            datapoints: series.points,\n            refId: queryRes.refId,\n            meta: queryRes.meta,\n          });\n        }\n      }\n\n      if (queryRes.tables) {\n        for (let table of queryRes.tables) {\n          table.type = 'table';\n          table.refId = queryRes.refId;\n          table.meta = queryRes.meta;\n          data.push(table);\n        }\n      }\n    }\n\n    return { data: data };\n  }\n\n  parseMetricFindQueryResult(refId, results) {\n    if (!results || results.data.length === 0 || results.data.results[refId].meta.rowCount === 0) {\n      return [];\n    }\n\n    const columns = results.data.results[refId].tables[0].columns;\n    const rows = results.data.results[refId].tables[0].rows;\n    const textColIndex = this.findColIndex(columns, '__text');\n    const valueColIndex = this.findColIndex(columns, '__value');\n\n    if (columns.length === 2 && textColIndex !== -1 && valueColIndex !== -1) {\n      return this.transformToKeyValueList(rows, textColIndex, valueColIndex);\n    }\n\n    return this.transformToSimpleList(rows);\n  }\n\n  transformToKeyValueList(rows, textColIndex, valueColIndex) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      if (!this.containsKey(res, rows[i][textColIndex])) {\n        res.push({\n          text: rows[i][textColIndex],\n          value: rows[i][valueColIndex],\n        });\n      }\n    }\n\n    return res;\n  }\n\n  transformToSimpleList(rows) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < rows[i].length; j++) {\n        const value = rows[i][j];\n        if (res.indexOf(value) === -1) {\n          res.push(value);\n        }\n      }\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  findColIndex(columns, colName) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].text === colName) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  containsKey(res, key) {\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].text === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transformAnnotationResponse(options, data) {\n    const table = data.data.results[options.annotation.name].tables[0];\n\n    let timeColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n\n    for (let i = 0; i < table.columns.length; i++) {\n      if (table.columns[i].text === 'time_sec' || table.columns[i].text === 'time') {\n        timeColumnIndex = i;\n      } else if (table.columns[i].text === 'title') {\n        return this.$q.reject({\n          message: 'The title column for annotations is deprecated, now only a column named text is returned',\n        });\n      } else if (table.columns[i].text === 'text') {\n        textColumnIndex = i;\n      } else if (table.columns[i].text === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n\n    if (timeColumnIndex === -1) {\n      return this.$q.reject({\n        message: 'Missing mandatory time column (with time_sec column alias) in annotation query.',\n      });\n    }\n\n    const list = [];\n    for (let i = 0; i < table.rows.length; i++) {\n      const row = table.rows[i];\n      list.push({\n        annotation: options.annotation,\n        time: Math.floor(row[timeColumnIndex]),\n        text: row[textColumnIndex] ? row[textColumnIndex].toString() : '',\n        tags: row[tagsColumnIndex] ? row[tagsColumnIndex].trim().split(/\\s*,\\s*/) : [],\n      });\n    }\n\n    return list;\n  }\n}\n","import Datasource from './datasource';\n\nexport class LoggingConfigCtrl {\n  static templateUrl = 'partials/config.html';\n}\n\nexport { Datasource, LoggingConfigCtrl as ConfigCtrl };\n","import angular from 'angular';\nimport _ from 'lodash';\n\nclass MixedDatasource {\n  /** @ngInject */\n  constructor(private $q, private datasourceSrv) {}\n\n  query(options) {\n    var sets = _.groupBy(options.targets, 'datasource');\n    var promises = _.map(sets, targets => {\n      var dsName = targets[0].datasource;\n      if (dsName === '-- Mixed --') {\n        return this.$q([]);\n      }\n\n      return this.datasourceSrv.get(dsName).then(function(ds) {\n        var opt = angular.copy(options);\n        opt.targets = targets;\n        return ds.query(opt);\n      });\n    });\n\n    return this.$q.all(promises).then(function(results) {\n      return { data: _.flatten(_.map(results, 'data')) };\n    });\n  }\n}\n\nexport { MixedDatasource, MixedDatasource as Datasource };\n","import { MixedDatasource } from './datasource';\nexport { MixedDatasource, MixedDatasource as Datasource };\n","import _ from 'lodash';\nimport ResponseParser from './response_parser';\n\nexport class MysqlDatasource {\n  id: any;\n  name: any;\n  responseParser: ResponseParser;\n\n  /** @ngInject **/\n  constructor(instanceSettings, private backendSrv, private $q, private templateSrv) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.responseParser = new ResponseParser(this.$q);\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value.replace(/'/g, `''`) + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    var quotedValues = _.map(value, function(val) {\n      if (typeof value === 'number') {\n        return value;\n      }\n\n      return \"'\" + val.replace(/'/g, `''`) + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  query(options) {\n    var queries = _.filter(options.targets, item => {\n      return item.hide !== true;\n    }).map(item => {\n      return {\n        refId: item.refId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        datasourceId: this.id,\n        rawSql: this.templateSrv.replace(item.rawSql, options.scopedVars, this.interpolateVariable),\n        format: item.format,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: queries,\n        },\n      })\n      .then(this.responseParser.processQueryResult);\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    const query = {\n      refId: options.annotation.name,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(options.annotation.rawQuery, options.scopedVars, this.interpolateVariable),\n      format: 'table',\n    };\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: [query],\n        },\n      })\n      .then(data => this.responseParser.transformAnnotationResponse(options, data));\n  }\n\n  metricFindQuery(query, optionalOptions) {\n    let refId = 'tempvar';\n    if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n      refId = optionalOptions.variable.name;\n    }\n\n    const interpolatedQuery = {\n      refId: refId,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n      format: 'table',\n    };\n\n    var data = {\n      queries: [interpolatedQuery],\n    };\n\n    if (optionalOptions && optionalOptions.range && optionalOptions.range.from) {\n      data['from'] = optionalOptions.range.from.valueOf().toString();\n    }\n    if (optionalOptions && optionalOptions.range && optionalOptions.range.to) {\n      data['to'] = optionalOptions.range.to.valueOf().toString();\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: data,\n      })\n      .then(data => this.responseParser.parseMetricFindQueryResult(refId, data));\n  }\n\n  testDatasource() {\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: '5m',\n          to: 'now',\n          queries: [\n            {\n              refId: 'A',\n              intervalMs: 1,\n              maxDataPoints: 1,\n              datasourceId: this.id,\n              rawSql: 'SELECT 1',\n              format: 'table',\n            },\n          ],\n        },\n      })\n      .then(res => {\n        return { status: 'success', message: 'Database Connection OK' };\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.data && err.data.message) {\n          return { status: 'error', message: err.data.message };\n        } else {\n          return { status: 'error', message: err.status };\n        }\n      });\n  }\n}\n","import _ from 'lodash';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport interface MysqlQuery {\n  refId: string;\n  format: string;\n  alias: string;\n  rawSql: string;\n}\n\nexport interface QueryMeta {\n  sql: string;\n}\n\nconst defaultQuery = `SELECT\n  UNIX_TIMESTAMP(<time_column>) as time_sec,\n  <value column> as value,\n  <series name column> as metric\nFROM <table name>\nWHERE $__timeFilter(time_column)\nORDER BY <time_column> ASC\n`;\n\nexport class MysqlQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  showLastQuerySQL: boolean;\n  formats: any[];\n  target: MysqlQuery;\n  lastQueryMeta: QueryMeta;\n  lastQueryError: string;\n  showHelp: boolean;\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.target.format = this.target.format || 'time_series';\n    this.target.alias = '';\n    this.formats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n\n    if (!this.target.rawSql) {\n      // special handling when in table panel\n      if (this.panelCtrl.panel.type === 'table') {\n        this.target.format = 'table';\n        this.target.rawSql = 'SELECT 1';\n      } else {\n        this.target.rawSql = defaultQuery;\n      }\n    }\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryMeta = null;\n    this.lastQueryError = null;\n\n    let anySeriesFromQuery = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQueryMeta = anySeriesFromQuery.meta;\n    }\n  }\n\n  onDataError(err) {\n    if (err.data && err.data.results) {\n      let queryRes = err.data.results[this.target.refId];\n      if (queryRes) {\n        this.lastQueryMeta = queryRes.meta;\n        this.lastQueryError = queryRes.error;\n      }\n    }\n  }\n}\n","import { MysqlDatasource } from './datasource';\nimport { MysqlQueryCtrl } from './query_ctrl';\n\nclass MysqlConfigCtrl {\n  static templateUrl = 'partials/config.html';\n}\n\nconst defaultQuery = `SELECT\n    UNIX_TIMESTAMP(<time_column>) as time_sec,\n    <text_column> as text,\n    <tags_column> as tags\n  FROM <table name>\n  WHERE $__timeFilter(time_column)\n  ORDER BY <time_column> ASC\n  LIMIT 100\n  `;\n\nclass MysqlAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  annotation: any;\n\n  /** @ngInject **/\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  MysqlDatasource,\n  MysqlDatasource as Datasource,\n  MysqlQueryCtrl as QueryCtrl,\n  MysqlConfigCtrl as ConfigCtrl,\n  MysqlAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nexport default class ResponseParser {\n  constructor(private $q) {}\n\n  processQueryResult(res) {\n    var data = [];\n\n    if (!res.data.results) {\n      return { data: data };\n    }\n\n    for (let key in res.data.results) {\n      let queryRes = res.data.results[key];\n\n      if (queryRes.series) {\n        for (let series of queryRes.series) {\n          data.push({\n            target: series.name,\n            datapoints: series.points,\n            refId: queryRes.refId,\n            meta: queryRes.meta,\n          });\n        }\n      }\n\n      if (queryRes.tables) {\n        for (let table of queryRes.tables) {\n          table.type = 'table';\n          table.refId = queryRes.refId;\n          table.meta = queryRes.meta;\n          data.push(table);\n        }\n      }\n    }\n\n    return { data: data };\n  }\n\n  parseMetricFindQueryResult(refId, results) {\n    if (!results || results.data.length === 0 || results.data.results[refId].meta.rowCount === 0) {\n      return [];\n    }\n\n    const columns = results.data.results[refId].tables[0].columns;\n    const rows = results.data.results[refId].tables[0].rows;\n    const textColIndex = this.findColIndex(columns, '__text');\n    const valueColIndex = this.findColIndex(columns, '__value');\n\n    if (columns.length === 2 && textColIndex !== -1 && valueColIndex !== -1) {\n      return this.transformToKeyValueList(rows, textColIndex, valueColIndex);\n    }\n\n    return this.transformToSimpleList(rows);\n  }\n\n  transformToKeyValueList(rows, textColIndex, valueColIndex) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      if (!this.containsKey(res, rows[i][textColIndex])) {\n        res.push({\n          text: rows[i][textColIndex],\n          value: rows[i][valueColIndex],\n        });\n      }\n    }\n\n    return res;\n  }\n\n  transformToSimpleList(rows) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < rows[i].length; j++) {\n        const value = rows[i][j];\n        if (res.indexOf(value) === -1) {\n          res.push(value);\n        }\n      }\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  findColIndex(columns, colName) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].text === colName) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  containsKey(res, key) {\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].text === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transformAnnotationResponse(options, data) {\n    const table = data.data.results[options.annotation.name].tables[0];\n\n    let timeColumnIndex = -1;\n    let titleColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n\n    for (let i = 0; i < table.columns.length; i++) {\n      if (table.columns[i].text === 'time') {\n        timeColumnIndex = i;\n      } else if (table.columns[i].text === 'text') {\n        textColumnIndex = i;\n      } else if (table.columns[i].text === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n\n    if (timeColumnIndex === -1) {\n      return this.$q.reject({\n        message: 'Missing mandatory time column in annotation query.',\n      });\n    }\n\n    const list = [];\n    for (let i = 0; i < table.rows.length; i++) {\n      const row = table.rows[i];\n      list.push({\n        annotation: options.annotation,\n        time: Math.floor(row[timeColumnIndex]),\n        title: row[titleColumnIndex],\n        text: row[textColumnIndex],\n        tags: row[tagsColumnIndex] ? row[tagsColumnIndex].trim().split(/\\s*,\\s*/) : [],\n      });\n    }\n\n    return list;\n  }\n}\n","import _ from 'lodash';\nimport ResponseParser from './response_parser';\n\nexport class PostgresDatasource {\n  id: any;\n  name: any;\n  responseParser: ResponseParser;\n\n  /** @ngInject **/\n  constructor(instanceSettings, private backendSrv, private $q, private templateSrv) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.responseParser = new ResponseParser(this.$q);\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value.replace(/'/g, `''`) + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    var quotedValues = _.map(value, function(val) {\n      return \"'\" + val.replace(/'/g, `''`) + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  query(options) {\n    var queries = _.filter(options.targets, item => {\n      return item.hide !== true;\n    }).map(item => {\n      return {\n        refId: item.refId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        datasourceId: this.id,\n        rawSql: this.templateSrv.replace(item.rawSql, options.scopedVars, this.interpolateVariable),\n        format: item.format,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: queries,\n        },\n      })\n      .then(this.responseParser.processQueryResult);\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    const query = {\n      refId: options.annotation.name,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(options.annotation.rawQuery, options.scopedVars, this.interpolateVariable),\n      format: 'table',\n    };\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: [query],\n        },\n      })\n      .then(data => this.responseParser.transformAnnotationResponse(options, data));\n  }\n\n  metricFindQuery(query, optionalOptions) {\n    let refId = 'tempvar';\n    if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n      refId = optionalOptions.variable.name;\n    }\n\n    const interpolatedQuery = {\n      refId: refId,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n      format: 'table',\n    };\n\n    var data = {\n      queries: [interpolatedQuery],\n    };\n\n    if (optionalOptions && optionalOptions.range && optionalOptions.range.from) {\n      data['from'] = optionalOptions.range.from.valueOf().toString();\n    }\n    if (optionalOptions && optionalOptions.range && optionalOptions.range.to) {\n      data['to'] = optionalOptions.range.to.valueOf().toString();\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: data,\n      })\n      .then(data => this.responseParser.parseMetricFindQueryResult(refId, data));\n  }\n\n  testDatasource() {\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: '5m',\n          to: 'now',\n          queries: [\n            {\n              refId: 'A',\n              intervalMs: 1,\n              maxDataPoints: 1,\n              datasourceId: this.id,\n              rawSql: 'SELECT 1',\n              format: 'table',\n            },\n          ],\n        },\n      })\n      .then(res => {\n        return { status: 'success', message: 'Database Connection OK' };\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.data && err.data.message) {\n          return { status: 'error', message: err.data.message };\n        } else {\n          return { status: 'error', message: err.status };\n        }\n      });\n  }\n}\n","import _ from 'lodash';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport interface PostgresQuery {\n  refId: string;\n  format: string;\n  alias: string;\n  rawSql: string;\n}\n\nexport interface QueryMeta {\n  sql: string;\n}\n\nconst defaultQuery = `SELECT\n  $__time(time_column),\n  value1\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nexport class PostgresQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  showLastQuerySQL: boolean;\n  formats: any[];\n  target: PostgresQuery;\n  lastQueryMeta: QueryMeta;\n  lastQueryError: string;\n  showHelp: boolean;\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.target.format = this.target.format || 'time_series';\n    this.target.alias = '';\n    this.formats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n\n    if (!this.target.rawSql) {\n      // special handling when in table panel\n      if (this.panelCtrl.panel.type === 'table') {\n        this.target.format = 'table';\n        this.target.rawSql = 'SELECT 1';\n      } else {\n        this.target.rawSql = defaultQuery;\n      }\n    }\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryMeta = null;\n    this.lastQueryError = null;\n\n    let anySeriesFromQuery = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQueryMeta = anySeriesFromQuery.meta;\n    }\n  }\n\n  onDataError(err) {\n    if (err.data && err.data.results) {\n      let queryRes = err.data.results[this.target.refId];\n      if (queryRes) {\n        this.lastQueryMeta = queryRes.meta;\n        this.lastQueryError = queryRes.error;\n      }\n    }\n  }\n}\n","import { PostgresDatasource } from './datasource';\nimport { PostgresQueryCtrl } from './query_ctrl';\n\nclass PostgresConfigCtrl {\n  static templateUrl = 'partials/config.html';\n\n  current: any;\n\n  /** @ngInject **/\n  constructor($scope) {\n    this.current.jsonData.sslmode = this.current.jsonData.sslmode || 'verify-full';\n  }\n}\n\nconst defaultQuery = `SELECT\n  extract(epoch from time_column) AS time,\n  text_column as text,\n  tags_column as tags\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nclass PostgresAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  annotation: any;\n\n  /** @ngInject **/\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  PostgresDatasource,\n  PostgresDatasource as Datasource,\n  PostgresQueryCtrl as QueryCtrl,\n  PostgresConfigCtrl as ConfigCtrl,\n  PostgresAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nexport default class PrometheusMetricFindQuery {\n  datasource: any;\n  query: any;\n  range: any;\n\n  constructor(datasource, query, timeSrv) {\n    this.datasource = datasource;\n    this.query = query;\n    this.range = timeSrv.timeRange();\n  }\n\n  process() {\n    var label_values_regex = /^label_values\\((?:(.+),\\s*)?([a-zA-Z_][a-zA-Z0-9_]+)\\)\\s*$/;\n    var metric_names_regex = /^metrics\\((.+)\\)\\s*$/;\n    var query_result_regex = /^query_result\\((.+)\\)\\s*$/;\n\n    var label_values_query = this.query.match(label_values_regex);\n    if (label_values_query) {\n      if (label_values_query[1]) {\n        return this.labelValuesQuery(label_values_query[2], label_values_query[1]);\n      } else {\n        return this.labelValuesQuery(label_values_query[2], null);\n      }\n    }\n\n    var metric_names_query = this.query.match(metric_names_regex);\n    if (metric_names_query) {\n      return this.metricNameQuery(metric_names_query[1]);\n    }\n\n    var query_result_query = this.query.match(query_result_regex);\n    if (query_result_query) {\n      return this.queryResultQuery(query_result_query[1]);\n    }\n\n    // if query contains full metric name, return metric name and label list\n    return this.metricNameAndLabelsQuery(this.query);\n  }\n\n  labelValuesQuery(label, metric) {\n    var url;\n\n    if (!metric) {\n      // return label values globally\n      url = '/api/v1/label/' + label + '/values';\n\n      return this.datasource.metadataRequest(url).then(function(result) {\n        return _.map(result.data.data, function(value) {\n          return { text: value };\n        });\n      });\n    } else {\n      var start = this.datasource.getPrometheusTime(this.range.from, false);\n      var end = this.datasource.getPrometheusTime(this.range.to, true);\n      url = '/api/v1/series?match[]=' + encodeURIComponent(metric) + '&start=' + start + '&end=' + end;\n\n      return this.datasource.metadataRequest(url).then(function(result) {\n        var _labels = _.map(result.data.data, function(metric) {\n          return metric[label] || '';\n        }).filter(function(label) {\n          return label !== '';\n        });\n\n        return _.uniq(_labels).map(function(metric) {\n          return {\n            text: metric,\n            expandable: true,\n          };\n        });\n      });\n    }\n  }\n\n  metricNameQuery(metricFilterPattern) {\n    var url = '/api/v1/label/__name__/values';\n\n    return this.datasource.metadataRequest(url).then(function(result) {\n      return _.chain(result.data.data)\n        .filter(function(metricName) {\n          var r = new RegExp(metricFilterPattern);\n          return r.test(metricName);\n        })\n        .map(function(matchedMetricName) {\n          return {\n            text: matchedMetricName,\n            expandable: true,\n          };\n        })\n        .value();\n    });\n  }\n\n  queryResultQuery(query) {\n    var end = this.datasource.getPrometheusTime(this.range.to, true);\n    return this.datasource.performInstantQuery({ expr: query }, end).then(function(result) {\n      return _.map(result.data.data.result, function(metricData) {\n        var text = metricData.metric.__name__ || '';\n        delete metricData.metric.__name__;\n        text +=\n          '{' +\n          _.map(metricData.metric, function(v, k) {\n            return k + '=\"' + v + '\"';\n          }).join(',') +\n          '}';\n        text += ' ' + metricData.value[1] + ' ' + metricData.value[0] * 1000;\n\n        return {\n          text: text,\n          expandable: true,\n        };\n      });\n    });\n  }\n\n  metricNameAndLabelsQuery(query) {\n    var start = this.datasource.getPrometheusTime(this.range.from, false);\n    var end = this.datasource.getPrometheusTime(this.range.to, true);\n    var url = '/api/v1/series?match[]=' + encodeURIComponent(query) + '&start=' + start + '&end=' + end;\n\n    var self = this;\n    return this.datasource.metadataRequest(url).then(function(result) {\n      return _.map(result.data.data, metric => {\n        return {\n          text: self.datasource.getOriginalMetricName(metric),\n          expandable: true,\n        };\n      });\n    });\n  }\n}\n","import _ from 'lodash';\nimport TableModel from 'app/core/table_model';\n\nexport class ResultTransformer {\n  constructor(private templateSrv) {}\n\n  transform(response: any, options: any): any[] {\n    let prometheusResult = response.data.data.result;\n\n    if (options.format === 'table') {\n      return [this.transformMetricDataToTable(prometheusResult, options.responseListLength, options.refId)];\n    } else if (options.format === 'heatmap') {\n      let seriesList = [];\n      prometheusResult.sort(sortSeriesByLabel);\n      for (let metricData of prometheusResult) {\n        seriesList.push(this.transformMetricData(metricData, options, options.start, options.end));\n      }\n      seriesList = this.transformToHistogramOverTime(seriesList);\n      return seriesList;\n    } else {\n      let seriesList = [];\n      for (let metricData of prometheusResult) {\n        if (response.data.data.resultType === 'matrix') {\n          seriesList.push(this.transformMetricData(metricData, options, options.start, options.end));\n        } else if (response.data.data.resultType === 'vector') {\n          seriesList.push(this.transformInstantMetricData(metricData, options));\n        }\n      }\n      return seriesList;\n    }\n    return [];\n  }\n\n  transformMetricData(metricData, options, start, end) {\n    let dps = [],\n      metricLabel = null;\n\n    metricLabel = this.createMetricLabel(metricData.metric, options);\n\n    const stepMs = parseInt(options.step) * 1000;\n    let baseTimestamp = start * 1000;\n\n    if (metricData.values === undefined) {\n      throw new Error('Prometheus heatmap error: data should be a time series');\n    }\n\n    for (let value of metricData.values) {\n      let dp_value = parseFloat(value[1]);\n      if (_.isNaN(dp_value)) {\n        dp_value = null;\n      }\n\n      const timestamp = parseFloat(value[0]) * 1000;\n      for (let t = baseTimestamp; t < timestamp; t += stepMs) {\n        dps.push([null, t]);\n      }\n      baseTimestamp = timestamp + stepMs;\n      dps.push([dp_value, timestamp]);\n    }\n\n    const endTimestamp = end * 1000;\n    for (let t = baseTimestamp; t <= endTimestamp; t += stepMs) {\n      dps.push([null, t]);\n    }\n\n    return {\n      datapoints: dps,\n      query: options.query,\n      responseIndex: options.responseIndex,\n      target: metricLabel,\n    };\n  }\n\n  transformMetricDataToTable(md, resultCount: number, refId: string) {\n    var table = new TableModel();\n    var i, j;\n    var metricLabels = {};\n\n    if (md.length === 0) {\n      return table;\n    }\n\n    // Collect all labels across all metrics\n    _.each(md, function(series) {\n      for (var label in series.metric) {\n        if (!metricLabels.hasOwnProperty(label)) {\n          metricLabels[label] = 1;\n        }\n      }\n    });\n\n    // Sort metric labels, create columns for them and record their index\n    var sortedLabels = _.keys(metricLabels).sort();\n    table.columns.push({ text: 'Time', type: 'time' });\n    _.each(sortedLabels, function(label, labelIndex) {\n      metricLabels[label] = labelIndex + 1;\n      table.columns.push({ text: label, filterable: !label.startsWith('__') });\n    });\n    let valueText = resultCount > 1 ? `Value #${refId}` : 'Value';\n    table.columns.push({ text: valueText });\n\n    // Populate rows, set value to empty string when label not present.\n    _.each(md, function(series) {\n      if (series.value) {\n        series.values = [series.value];\n      }\n      if (series.values) {\n        for (i = 0; i < series.values.length; i++) {\n          var values = series.values[i];\n          var reordered: any = [values[0] * 1000];\n          if (series.metric) {\n            for (j = 0; j < sortedLabels.length; j++) {\n              var label = sortedLabels[j];\n              if (series.metric.hasOwnProperty(label)) {\n                reordered.push(series.metric[label]);\n              } else {\n                reordered.push('');\n              }\n            }\n          }\n          reordered.push(parseFloat(values[1]));\n          table.rows.push(reordered);\n        }\n      }\n    });\n\n    return table;\n  }\n\n  transformInstantMetricData(md, options) {\n    var dps = [],\n      metricLabel = null;\n    metricLabel = this.createMetricLabel(md.metric, options);\n    dps.push([parseFloat(md.value[1]), md.value[0] * 1000]);\n    return { target: metricLabel, datapoints: dps, labels: md.metric };\n  }\n\n  createMetricLabel(labelData, options) {\n    let label = '';\n    if (_.isUndefined(options) || _.isEmpty(options.legendFormat)) {\n      label = this.getOriginalMetricName(labelData);\n    } else {\n      label = this.renderTemplate(this.templateSrv.replace(options.legendFormat), labelData);\n    }\n    if (!label || label === '{}') {\n      label = options.query;\n    }\n    return label;\n  }\n\n  renderTemplate(aliasPattern, aliasData) {\n    var aliasRegex = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return aliasPattern.replace(aliasRegex, function(match, g1) {\n      if (aliasData[g1]) {\n        return aliasData[g1];\n      }\n      return g1;\n    });\n  }\n\n  getOriginalMetricName(labelData) {\n    var metricName = labelData.__name__ || '';\n    delete labelData.__name__;\n    var labelPart = _.map(_.toPairs(labelData), function(label) {\n      return label[0] + '=\"' + label[1] + '\"';\n    }).join(',');\n    return metricName + '{' + labelPart + '}';\n  }\n\n  transformToHistogramOverTime(seriesList) {\n    /*      t1 = timestamp1, t2 = timestamp2 etc.\n            t1  t2  t3          t1  t2  t3\n    le10    10  10  0     =>    10  10  0\n    le20    20  10  30    =>    10  0   30\n    le30    30  10  35    =>    10  0   5\n    */\n    for (let i = seriesList.length - 1; i > 0; i--) {\n      let topSeries = seriesList[i].datapoints;\n      let bottomSeries = seriesList[i - 1].datapoints;\n      if (!topSeries || !bottomSeries) {\n        throw new Error('Prometheus heatmap transform error: data should be a time series');\n      }\n\n      for (let j = 0; j < topSeries.length; j++) {\n        const bottomPoint = bottomSeries[j] || [0];\n        topSeries[j][0] -= bottomPoint[0];\n      }\n    }\n\n    return seriesList;\n  }\n}\n\nfunction sortSeriesByLabel(s1, s2): number {\n  let le1, le2;\n\n  try {\n    // fail if not integer. might happen with bad queries\n    le1 = parseHistogramLabel(s1.metric.le);\n    le2 = parseHistogramLabel(s2.metric.le);\n  } catch (err) {\n    console.log(err);\n    return 0;\n  }\n\n  if (le1 > le2) {\n    return 1;\n  }\n\n  if (le1 < le2) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction parseHistogramLabel(le: string): number {\n  if (le === '+Inf') {\n    return +Infinity;\n  }\n  return Number(le);\n}\n","import _ from 'lodash';\n\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport * as dateMath from 'app/core/utils/datemath';\nimport PrometheusMetricFindQuery from './metric_find_query';\nimport { ResultTransformer } from './result_transformer';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport function alignRange(start, end, step) {\n  const alignedEnd = Math.ceil(end / step) * step;\n  const alignedStart = Math.floor(start / step) * step;\n  return {\n    end: alignedEnd,\n    start: alignedStart,\n  };\n}\n\nconst keywords = 'by|without|on|ignoring|group_left|group_right';\n\n// Duplicate from mode-prometheus.js, which can't be used in tests due to global ace not being loaded.\nconst builtInWords = [\n  keywords,\n  'count|count_values|min|max|avg|sum|stddev|stdvar|bottomk|topk|quantile',\n  'true|false|null|__name__|job',\n  'abs|absent|ceil|changes|clamp_max|clamp_min|count_scalar|day_of_month|day_of_week|days_in_month|delta|deriv',\n  'drop_common_labels|exp|floor|histogram_quantile|holt_winters|hour|idelta|increase|irate|label_replace|ln|log2',\n  'log10|minute|month|predict_linear|rate|resets|round|scalar|sort|sort_desc|sqrt|time|vector|year|avg_over_time',\n  'min_over_time|max_over_time|sum_over_time|count_over_time|quantile_over_time|stddev_over_time|stdvar_over_time',\n]\n  .join('|')\n  .split('|');\n\n// addLabelToQuery('foo', 'bar', 'baz') => 'foo{bar=\"baz\"}'\nexport function addLabelToQuery(query: string, key: string, value: string): string {\n  if (!key || !value) {\n    throw new Error('Need label to add to query.');\n  }\n\n  // Add empty selector to bare metric name\n  let previousWord;\n  query = query.replace(/(\\w+)\\b(?![\\({=\",])/g, (match, word, offset) => {\n    // Check if inside a selector\n    const nextSelectorStart = query.slice(offset).indexOf('{');\n    const nextSelectorEnd = query.slice(offset).indexOf('}');\n    const insideSelector = nextSelectorEnd > -1 && (nextSelectorStart === -1 || nextSelectorStart > nextSelectorEnd);\n    // Handle \"sum by (key) (metric)\"\n    const previousWordIsKeyWord = previousWord && keywords.split('|').indexOf(previousWord) > -1;\n    previousWord = word;\n    if (!insideSelector && !previousWordIsKeyWord && builtInWords.indexOf(word) === -1) {\n      return `${word}{}`;\n    }\n    return word;\n  });\n\n  // Adding label to existing selectors\n  const selectorRegexp = /{([^{]*)}/g;\n  let match = null;\n  const parts = [];\n  let lastIndex = 0;\n  let suffix = '';\n  while ((match = selectorRegexp.exec(query))) {\n    const prefix = query.slice(lastIndex, match.index);\n    const selectorParts = match[1].split(',');\n    const labels = selectorParts.reduce((acc, label) => {\n      const labelParts = label.split('=');\n      if (labelParts.length === 2) {\n        acc[labelParts[0]] = labelParts[1];\n      }\n      return acc;\n    }, {});\n    labels[key] = `\"${value}\"`;\n    const selector = Object.keys(labels)\n      .sort()\n      .map(key => `${key}=${labels[key]}`)\n      .join(',');\n    lastIndex = match.index + match[1].length + 2;\n    suffix = query.slice(match.index + match[0].length);\n    parts.push(prefix, '{', selector, '}');\n  }\n  parts.push(suffix);\n  return parts.join('');\n}\n\nexport function determineQueryHints(series: any[]): any[] {\n  const hints = series.map((s, i) => {\n    const query: string = s.query;\n    const index: number = s.responseIndex;\n    if (query === undefined || index === undefined) {\n      return null;\n    }\n\n    // ..._bucket metric needs a histogram_quantile()\n    const histogramMetric = query.trim().match(/^\\w+_bucket$/);\n    if (histogramMetric) {\n      const label = 'Time series has buckets, you probably wanted a histogram.';\n      return {\n        index,\n        label,\n        fix: {\n          label: 'Fix by adding histogram_quantile().',\n          action: {\n            type: 'ADD_HISTOGRAM_QUANTILE',\n            query,\n            index,\n          },\n        },\n      };\n    }\n\n    // Check for monotony\n    const datapoints: [number, number][] = s.datapoints;\n    const simpleMetric = query.trim().match(/^\\w+$/);\n    if (simpleMetric && datapoints.length > 1) {\n      let increasing = false;\n      const monotonic = datapoints.every((dp, index) => {\n        if (index === 0) {\n          return true;\n        }\n        increasing = increasing || dp[0] > datapoints[index - 1][0];\n        // monotonic?\n        return dp[0] >= datapoints[index - 1][0];\n      });\n      if (increasing && monotonic) {\n        const label = 'Time series is monotonously increasing.';\n        return {\n          label,\n          index,\n          fix: {\n            label: 'Fix by adding rate().',\n            action: {\n              type: 'ADD_RATE',\n              query,\n              index,\n            },\n          },\n        };\n      }\n    }\n\n    // No hint found\n    return null;\n  });\n  return hints;\n}\n\nexport function prometheusRegularEscape(value) {\n  if (typeof value === 'string') {\n    return value.replace(/'/g, \"\\\\\\\\'\");\n  }\n  return value;\n}\n\nexport function prometheusSpecialRegexEscape(value) {\n  if (typeof value === 'string') {\n    return prometheusRegularEscape(value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]+?.()]/g, '\\\\\\\\$&'));\n  }\n  return value;\n}\n\nexport class PrometheusDatasource {\n  type: string;\n  editorSrc: string;\n  name: string;\n  supportsExplore: boolean;\n  supportMetrics: boolean;\n  url: string;\n  directUrl: string;\n  basicAuth: any;\n  withCredentials: any;\n  metricsNameCache: any;\n  interval: string;\n  queryTimeout: string;\n  httpMethod: string;\n  resultTransformer: ResultTransformer;\n\n  /** @ngInject */\n  constructor(instanceSettings, private $q, private backendSrv: BackendSrv, private templateSrv, private timeSrv) {\n    this.type = 'prometheus';\n    this.editorSrc = 'app/features/prometheus/partials/query.editor.html';\n    this.name = instanceSettings.name;\n    this.supportsExplore = true;\n    this.supportMetrics = true;\n    this.url = instanceSettings.url;\n    this.directUrl = instanceSettings.directUrl;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.interval = instanceSettings.jsonData.timeInterval || '15s';\n    this.queryTimeout = instanceSettings.jsonData.queryTimeout;\n    this.httpMethod = instanceSettings.jsonData.httpMethod || 'GET';\n    this.resultTransformer = new ResultTransformer(templateSrv);\n  }\n\n  _request(url, data?, options?: any) {\n    var options: any = {\n      url: this.url + url,\n      method: this.httpMethod,\n      ...options,\n    };\n    if (options.method === 'GET') {\n      if (!_.isEmpty(data)) {\n        options.url =\n          options.url +\n          '?' +\n          _.map(data, (v, k) => {\n            return encodeURIComponent(k) + '=' + encodeURIComponent(v);\n          }).join('&');\n      }\n    } else {\n      options.headers = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      };\n      options.transformRequest = data => {\n        return $.param(data);\n      };\n      options.data = data;\n    }\n\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n\n    if (this.basicAuth) {\n      options.headers = {\n        Authorization: this.basicAuth,\n      };\n    }\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  // Use this for tab completion features, wont publish response to other components\n  metadataRequest(url) {\n    return this._request(url, null, { method: 'GET', silent: true });\n  }\n\n  interpolateQueryExpr(value, variable, defaultFormatFn) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return prometheusRegularEscape(value);\n    }\n\n    if (typeof value === 'string') {\n      return prometheusSpecialRegexEscape(value);\n    }\n\n    var escapedValues = _.map(value, prometheusSpecialRegexEscape);\n    return escapedValues.join('|');\n  }\n\n  targetContainsTemplate(target) {\n    return this.templateSrv.variableExists(target.expr);\n  }\n\n  query(options) {\n    var start = this.getPrometheusTime(options.range.from, false);\n    var end = this.getPrometheusTime(options.range.to, true);\n\n    var queries = [];\n    var activeTargets = [];\n\n    options = _.clone(options);\n\n    for (let target of options.targets) {\n      if (!target.expr || target.hide) {\n        continue;\n      }\n\n      activeTargets.push(target);\n      queries.push(this.createQuery(target, options, start, end));\n    }\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n      return this.$q.when({ data: [] });\n    }\n\n    var allQueryPromise = _.map(queries, query => {\n      if (!query.instant) {\n        return this.performTimeSeriesQuery(query, query.start, query.end);\n      } else {\n        return this.performInstantQuery(query, end);\n      }\n    });\n\n    return this.$q.all(allQueryPromise).then(responseList => {\n      let result = [];\n      let hints = [];\n\n      _.each(responseList, (response, index) => {\n        if (response.status === 'error') {\n          const error = {\n            index,\n            ...response.error,\n          };\n          throw error;\n        }\n\n        // Keeping original start/end for transformers\n        const transformerOptions = {\n          format: activeTargets[index].format,\n          step: queries[index].step,\n          legendFormat: activeTargets[index].legendFormat,\n          start: queries[index].start,\n          end: queries[index].end,\n          query: queries[index].expr,\n          responseListLength: responseList.length,\n          responseIndex: index,\n          refId: activeTargets[index].refId,\n        };\n        const series = this.resultTransformer.transform(response, transformerOptions);\n        result = [...result, ...series];\n\n        if (queries[index].hinting) {\n          const queryHints = determineQueryHints(series);\n          hints = [...hints, ...queryHints];\n        }\n      });\n\n      return { data: result, hints };\n    });\n  }\n\n  createQuery(target, options, start, end) {\n    const query: any = {\n      hinting: target.hinting,\n      instant: target.instant,\n    };\n    var range = Math.ceil(end - start);\n\n    var interval = kbn.interval_to_seconds(options.interval);\n    // Minimum interval (\"Min step\"), if specified for the query. or same as interval otherwise\n    var minInterval = kbn.interval_to_seconds(\n      this.templateSrv.replace(target.interval, options.scopedVars) || options.interval\n    );\n    var intervalFactor = target.intervalFactor || 1;\n    // Adjust the interval to take into account any specified minimum and interval factor plus Prometheus limits\n    var adjustedInterval = this.adjustInterval(interval, minInterval, range, intervalFactor);\n    var scopedVars = { ...options.scopedVars, ...this.getRangeScopedVars() };\n    // If the interval was adjusted, make a shallow copy of scopedVars with updated interval vars\n    if (interval !== adjustedInterval) {\n      interval = adjustedInterval;\n      scopedVars = Object.assign({}, options.scopedVars, {\n        __interval: { text: interval + 's', value: interval + 's' },\n        __interval_ms: { text: interval * 1000, value: interval * 1000 },\n        ...this.getRangeScopedVars(),\n      });\n    }\n    query.step = interval;\n\n    // Only replace vars in expression after having (possibly) updated interval vars\n    query.expr = this.templateSrv.replace(target.expr, scopedVars, this.interpolateQueryExpr);\n    query.requestId = options.panelId + target.refId;\n\n    // Align query interval with step\n    const adjusted = alignRange(start, end, query.step);\n    query.start = adjusted.start;\n    query.end = adjusted.end;\n\n    return query;\n  }\n\n  adjustInterval(interval, minInterval, range, intervalFactor) {\n    // Prometheus will drop queries that might return more than 11000 data points.\n    // Calibrate interval if it is too small.\n    if (interval !== 0 && range / intervalFactor / interval > 11000) {\n      interval = Math.ceil(range / intervalFactor / 11000);\n    }\n    return Math.max(interval * intervalFactor, minInterval, 1);\n  }\n\n  performTimeSeriesQuery(query, start, end) {\n    if (start > end) {\n      throw { message: 'Invalid time range' };\n    }\n\n    var url = '/api/v1/query_range';\n    var data = {\n      query: query.expr,\n      start: start,\n      end: end,\n      step: query.step,\n    };\n    if (this.queryTimeout) {\n      data['timeout'] = this.queryTimeout;\n    }\n    return this._request(url, data, { requestId: query.requestId });\n  }\n\n  performInstantQuery(query, time) {\n    var url = '/api/v1/query';\n    var data = {\n      query: query.expr,\n      time: time,\n    };\n    if (this.queryTimeout) {\n      data['timeout'] = this.queryTimeout;\n    }\n    return this._request(url, data, { requestId: query.requestId });\n  }\n\n  performSuggestQuery(query, cache = false) {\n    var url = '/api/v1/label/__name__/values';\n\n    if (cache && this.metricsNameCache && this.metricsNameCache.expire > Date.now()) {\n      return this.$q.when(\n        _.filter(this.metricsNameCache.data, metricName => {\n          return metricName.indexOf(query) !== 1;\n        })\n      );\n    }\n\n    return this.metadataRequest(url).then(result => {\n      this.metricsNameCache = {\n        data: result.data.data,\n        expire: Date.now() + 60 * 1000,\n      };\n      return _.filter(result.data.data, metricName => {\n        return metricName.indexOf(query) !== 1;\n      });\n    });\n  }\n\n  metricFindQuery(query) {\n    if (!query) {\n      return this.$q.when([]);\n    }\n\n    let scopedVars = {\n      __interval: { text: this.interval, value: this.interval },\n      __interval_ms: { text: kbn.interval_to_ms(this.interval), value: kbn.interval_to_ms(this.interval) },\n      ...this.getRangeScopedVars(),\n    };\n    let interpolated = this.templateSrv.replace(query, scopedVars, this.interpolateQueryExpr);\n    var metricFindQuery = new PrometheusMetricFindQuery(this, interpolated, this.timeSrv);\n    return metricFindQuery.process();\n  }\n\n  getRangeScopedVars() {\n    let range = this.timeSrv.timeRange();\n    let msRange = range.to.diff(range.from);\n    let regularRange = kbn.secondsToHms(msRange / 1000);\n    return {\n      __range_ms: { text: msRange, value: msRange },\n      __range: { text: regularRange, value: regularRange },\n    };\n  }\n\n  annotationQuery(options) {\n    var annotation = options.annotation;\n    var expr = annotation.expr || '';\n    var tagKeys = annotation.tagKeys || '';\n    var titleFormat = annotation.titleFormat || '';\n    var textFormat = annotation.textFormat || '';\n\n    if (!expr) {\n      return this.$q.when([]);\n    }\n\n    var step = annotation.step || '60s';\n    var start = this.getPrometheusTime(options.range.from, false);\n    var end = this.getPrometheusTime(options.range.to, true);\n    // Unsetting min interval\n    const queryOptions = {\n      ...options,\n      interval: '0s',\n    };\n    const query = this.createQuery({ expr, interval: step }, queryOptions, start, end);\n\n    var self = this;\n    return this.performTimeSeriesQuery(query, query.start, query.end).then(function(results) {\n      var eventList = [];\n      tagKeys = tagKeys.split(',');\n\n      _.each(results.data.data.result, function(series) {\n        var tags = _.chain(series.metric)\n          .filter(function(v, k) {\n            return _.includes(tagKeys, k);\n          })\n          .value();\n\n        for (let value of series.values) {\n          if (value[1] === '1') {\n            var event = {\n              annotation: annotation,\n              time: Math.floor(parseFloat(value[0])) * 1000,\n              title: self.resultTransformer.renderTemplate(titleFormat, series.metric),\n              tags: tags,\n              text: self.resultTransformer.renderTemplate(textFormat, series.metric),\n            };\n\n            eventList.push(event);\n          }\n        }\n      });\n\n      return eventList;\n    });\n  }\n\n  testDatasource() {\n    let now = new Date().getTime();\n    return this.performInstantQuery({ expr: '1+1' }, now / 1000).then(response => {\n      if (response.data.status === 'success') {\n        return { status: 'success', message: 'Data source is working' };\n      } else {\n        return { status: 'error', message: response.error };\n      }\n    });\n  }\n\n  getExploreState(panel) {\n    let state = {};\n    if (panel.targets) {\n      const queries = panel.targets.map(t => ({\n        query: this.templateSrv.replace(t.expr, {}, this.interpolateQueryExpr),\n        format: t.format,\n      }));\n      state = {\n        ...state,\n        queries,\n        datasource: this.name,\n      };\n    }\n    return state;\n  }\n\n  modifyQuery(query: string, action: any): string {\n    switch (action.type) {\n      case 'ADD_FILTER': {\n        return addLabelToQuery(query, action.key, action.value);\n      }\n      case 'ADD_HISTOGRAM_QUANTILE': {\n        return `histogram_quantile(0.95, sum(rate(${query}[5m])) by (le))`;\n      }\n      case 'ADD_RATE': {\n        return `rate(${query}[5m])`;\n      }\n      default:\n        return query;\n    }\n  }\n\n  getPrometheusTime(date, roundUp) {\n    if (_.isString(date)) {\n      date = dateMath.parse(date, roundUp);\n    }\n    return Math.ceil(date.valueOf() / 1000);\n  }\n\n  getOriginalMetricName(labelData) {\n    return this.resultTransformer.getOriginalMetricName(labelData);\n  }\n}\n","import { PrometheusDatasource } from './datasource';\nimport _ from 'lodash';\n\nexport class PromCompleter {\n  labelQueryCache: any;\n  labelNameCache: any;\n  labelValueCache: any;\n  templateVariableCompletions: any;\n\n  identifierRegexps = [/\\[/, /[a-zA-Z0-9_:]/];\n\n  constructor(private datasource: PrometheusDatasource, private templateSrv) {\n    this.labelQueryCache = {};\n    this.labelNameCache = {};\n    this.labelValueCache = {};\n    this.templateVariableCompletions = this.templateSrv.variables.map(variable => {\n      return {\n        caption: '$' + variable.name,\n        value: '$' + variable.name,\n        meta: 'variable',\n        score: Number.MAX_VALUE,\n      };\n    });\n  }\n\n  getCompletions(editor, session, pos, prefix, callback) {\n    let wrappedCallback = (err, completions) => {\n      completions = completions.concat(this.templateVariableCompletions);\n      return callback(err, completions);\n    };\n\n    let token = session.getTokenAt(pos.row, pos.column);\n\n    switch (token.type) {\n      case 'entity.name.tag.label-matcher':\n        this.getCompletionsForLabelMatcherName(session, pos).then(completions => {\n          wrappedCallback(null, completions);\n        });\n        return;\n      case 'string.quoted.label-matcher':\n        this.getCompletionsForLabelMatcherValue(session, pos).then(completions => {\n          wrappedCallback(null, completions);\n        });\n        return;\n      case 'entity.name.tag.label-list-matcher':\n        this.getCompletionsForBinaryOperator(session, pos).then(completions => {\n          wrappedCallback(null, completions);\n        });\n        return;\n    }\n\n    if (token.type === 'paren.lparen' && token.value === '[') {\n      var vectors = [];\n      for (let unit of ['s', 'm', 'h']) {\n        for (let value of [1, 5, 10, 30]) {\n          vectors.push({\n            caption: value + unit,\n            value: '[' + value + unit,\n            meta: 'range vector',\n          });\n        }\n      }\n\n      vectors.unshift({\n        caption: '$__interval_ms',\n        value: '[$__interval_ms',\n        meta: 'range vector',\n      });\n\n      vectors.unshift({\n        caption: '$__interval',\n        value: '[$__interval',\n        meta: 'range vector',\n      });\n\n      wrappedCallback(null, vectors);\n      return;\n    }\n\n    var query = prefix;\n\n    return this.datasource.performSuggestQuery(query, true).then(metricNames => {\n      wrappedCallback(\n        null,\n        metricNames.map(name => {\n          let value = name;\n          if (prefix === '(') {\n            value = '(' + name;\n          }\n\n          return {\n            caption: name,\n            value: value,\n            meta: 'metric',\n          };\n        })\n      );\n    });\n  }\n\n  getCompletionsForLabelMatcherName(session, pos) {\n    let metricName = this.findMetricName(session, pos.row, pos.column);\n    if (!metricName) {\n      return Promise.resolve(this.transformToCompletions(['__name__', 'instance', 'job'], 'label name'));\n    }\n\n    if (this.labelNameCache[metricName]) {\n      return Promise.resolve(this.labelNameCache[metricName]);\n    }\n\n    return this.getLabelNameAndValueForExpression(metricName, 'metricName').then(result => {\n      var labelNames = this.transformToCompletions(\n        _.uniq(\n          _.flatten(\n            result.map(r => {\n              return Object.keys(r.metric);\n            })\n          )\n        ),\n        'label name'\n      );\n      this.labelNameCache[metricName] = labelNames;\n      return Promise.resolve(labelNames);\n    });\n  }\n\n  getCompletionsForLabelMatcherValue(session, pos) {\n    let metricName = this.findMetricName(session, pos.row, pos.column);\n    if (!metricName) {\n      return Promise.resolve([]);\n    }\n\n    var labelNameToken = this.findToken(\n      session,\n      pos.row,\n      pos.column,\n      'entity.name.tag.label-matcher',\n      null,\n      'paren.lparen.label-matcher'\n    );\n    if (!labelNameToken) {\n      return Promise.resolve([]);\n    }\n    var labelName = labelNameToken.value;\n\n    if (this.labelValueCache[metricName] && this.labelValueCache[metricName][labelName]) {\n      return Promise.resolve(this.labelValueCache[metricName][labelName]);\n    }\n\n    return this.getLabelNameAndValueForExpression(metricName, 'metricName').then(result => {\n      var labelValues = this.transformToCompletions(\n        _.uniq(\n          result.map(r => {\n            return r.metric[labelName];\n          })\n        ),\n        'label value'\n      );\n      this.labelValueCache[metricName] = this.labelValueCache[metricName] || {};\n      this.labelValueCache[metricName][labelName] = labelValues;\n      return Promise.resolve(labelValues);\n    });\n  }\n\n  getCompletionsForBinaryOperator(session, pos) {\n    let keywordOperatorToken = this.findToken(session, pos.row, pos.column, 'keyword.control', null, 'identifier');\n    if (!keywordOperatorToken) {\n      return Promise.resolve([]);\n    }\n    let rparenToken, expr;\n    switch (keywordOperatorToken.value) {\n      case 'by':\n      case 'without':\n        rparenToken = this.findToken(\n          session,\n          keywordOperatorToken.row,\n          keywordOperatorToken.column,\n          'paren.rparen',\n          null,\n          'identifier'\n        );\n        if (!rparenToken) {\n          return Promise.resolve([]);\n        }\n        expr = this.findExpressionMatchedParen(session, rparenToken.row, rparenToken.column);\n        if (expr === '') {\n          return Promise.resolve([]);\n        }\n        return this.getLabelNameAndValueForExpression(expr, 'expression').then(result => {\n          var labelNames = this.transformToCompletions(\n            _.uniq(\n              _.flatten(\n                result.map(r => {\n                  return Object.keys(r.metric);\n                })\n              )\n            ),\n            'label name'\n          );\n          this.labelNameCache[expr] = labelNames;\n          return labelNames;\n        });\n      case 'on':\n      case 'ignoring':\n      case 'group_left':\n      case 'group_right':\n        let binaryOperatorToken = this.findToken(\n          session,\n          keywordOperatorToken.row,\n          keywordOperatorToken.column,\n          'keyword.operator.binary',\n          null,\n          'identifier'\n        );\n        if (!binaryOperatorToken) {\n          return Promise.resolve([]);\n        }\n        rparenToken = this.findToken(\n          session,\n          binaryOperatorToken.row,\n          binaryOperatorToken.column,\n          'paren.rparen',\n          null,\n          'identifier'\n        );\n        if (rparenToken) {\n          expr = this.findExpressionMatchedParen(session, rparenToken.row, rparenToken.column);\n          if (expr === '') {\n            return Promise.resolve([]);\n          }\n          return this.getLabelNameAndValueForExpression(expr, 'expression').then(result => {\n            var labelNames = this.transformToCompletions(\n              _.uniq(\n                _.flatten(\n                  result.map(r => {\n                    return Object.keys(r.metric);\n                  })\n                )\n              ),\n              'label name'\n            );\n            this.labelNameCache[expr] = labelNames;\n            return labelNames;\n          });\n        } else {\n          let metricName = this.findMetricName(session, binaryOperatorToken.row, binaryOperatorToken.column);\n          return this.getLabelNameAndValueForExpression(metricName, 'metricName').then(result => {\n            var labelNames = this.transformToCompletions(\n              _.uniq(\n                _.flatten(\n                  result.map(r => {\n                    return Object.keys(r.metric);\n                  })\n                )\n              ),\n              'label name'\n            );\n            this.labelNameCache[metricName] = labelNames;\n            return Promise.resolve(labelNames);\n          });\n        }\n    }\n\n    return Promise.resolve([]);\n  }\n\n  getLabelNameAndValueForExpression(expr, type) {\n    if (this.labelQueryCache[expr]) {\n      return Promise.resolve(this.labelQueryCache[expr]);\n    }\n    let query = expr;\n    if (type === 'metricName') {\n      let op = '=~';\n      if (/[a-zA-Z_:][a-zA-Z0-9_:]*/.test(expr)) {\n        op = '=';\n      }\n      query = '{__name__' + op + '\"' + expr + '\"}';\n    }\n    return this.datasource.performInstantQuery({ expr: query }, new Date().getTime() / 1000).then(response => {\n      this.labelQueryCache[expr] = response.data.data.result;\n      return response.data.data.result;\n    });\n  }\n\n  transformToCompletions(words, meta) {\n    return words.map(name => {\n      return {\n        caption: name,\n        value: name,\n        meta: meta,\n        score: Number.MAX_VALUE,\n      };\n    });\n  }\n\n  findMetricName(session, row, column) {\n    var metricName = '';\n\n    var tokens;\n    var nameLabelNameToken = this.findToken(\n      session,\n      row,\n      column,\n      'entity.name.tag.label-matcher',\n      '__name__',\n      'paren.lparen.label-matcher'\n    );\n    if (nameLabelNameToken) {\n      tokens = session.getTokens(nameLabelNameToken.row);\n      var nameLabelValueToken = tokens[nameLabelNameToken.index + 2];\n      if (nameLabelValueToken && nameLabelValueToken.type === 'string.quoted.label-matcher') {\n        metricName = nameLabelValueToken.value.slice(1, -1); // cut begin/end quotation\n      }\n    } else {\n      var metricNameToken = this.findToken(session, row, column, 'identifier', null, null);\n      if (metricNameToken) {\n        tokens = session.getTokens(metricNameToken.row);\n        metricName = metricNameToken.value;\n      }\n    }\n\n    return metricName;\n  }\n\n  findToken(session, row, column, target, value, guard) {\n    var tokens, idx;\n    // find index and get column of previous token\n    for (var r = row; r >= 0; r--) {\n      let c;\n      tokens = session.getTokens(r);\n      if (r === row) {\n        // current row\n        c = 0;\n        for (idx = 0; idx < tokens.length; idx++) {\n          let nc = c + tokens[idx].value.length;\n          if (nc >= column) {\n            break;\n          }\n          c = nc;\n        }\n      } else {\n        idx = tokens.length - 1;\n        c =\n          _.sum(\n            tokens.map(t => {\n              return t.value.length;\n            })\n          ) - tokens[tokens.length - 1].value.length;\n      }\n\n      for (; idx >= 0; idx--) {\n        if (tokens[idx].type === guard) {\n          return null;\n        }\n\n        if (tokens[idx].type === target && (!value || tokens[idx].value === value)) {\n          tokens[idx].row = r;\n          tokens[idx].column = c;\n          tokens[idx].index = idx;\n          return tokens[idx];\n        }\n        c -= tokens[idx].value.length;\n      }\n    }\n\n    return null;\n  }\n\n  findExpressionMatchedParen(session, row, column) {\n    let tokens, idx;\n    let deep = 1;\n    let expression = ')';\n    for (let r = row; r >= 0; r--) {\n      tokens = session.getTokens(r);\n      if (r === row) {\n        // current row\n        let c = 0;\n        for (idx = 0; idx < tokens.length; idx++) {\n          c += tokens[idx].value.length;\n          if (c >= column) {\n            break;\n          }\n        }\n      } else {\n        idx = tokens.length - 1;\n      }\n\n      for (; idx >= 0; idx--) {\n        expression = tokens[idx].value + expression;\n        if (tokens[idx].type === 'paren.rparen') {\n          deep++;\n        } else if (tokens[idx].type === 'paren.lparen') {\n          deep--;\n          if (deep === 0) {\n            return expression;\n          }\n        }\n      }\n    }\n\n    return expression;\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport { PromCompleter } from './completer';\nimport './mode-prometheus';\nimport './snippets/prometheus';\n\nclass PrometheusQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  metric: any;\n  resolutions: any;\n  formats: any;\n  instant: any;\n  oldTarget: any;\n  suggestMetrics: any;\n  getMetricsAutocomplete: any;\n  linkToPrometheus: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, private templateSrv) {\n    super($scope, $injector);\n\n    var target = this.target;\n    target.expr = target.expr || '';\n    target.intervalFactor = target.intervalFactor || 1;\n    target.format = target.format || this.getDefaultFormat();\n\n    this.metric = '';\n    this.resolutions = _.map([1, 2, 3, 4, 5, 10], function(f) {\n      return { factor: f, label: '1/' + f };\n    });\n\n    this.formats = [\n      { text: 'Time series', value: 'time_series' },\n      { text: 'Table', value: 'table' },\n      { text: 'Heatmap', value: 'heatmap' },\n    ];\n\n    this.instant = false;\n\n    this.updateLink();\n  }\n\n  getCompleter(query) {\n    return new PromCompleter(this.datasource, this.templateSrv);\n  }\n\n  getDefaultFormat() {\n    if (this.panelCtrl.panel.type === 'table') {\n      return 'table';\n    } else if (this.panelCtrl.panel.type === 'heatmap') {\n      return 'heatmap';\n    }\n\n    return 'time_series';\n  }\n\n  refreshMetricData() {\n    if (!_.isEqual(this.oldTarget, this.target)) {\n      this.oldTarget = angular.copy(this.target);\n      this.panelCtrl.refresh();\n      this.updateLink();\n    }\n  }\n\n  updateLink() {\n    var range = this.panelCtrl.range;\n    if (!range) {\n      return;\n    }\n\n    var rangeDiff = Math.ceil((range.to.valueOf() - range.from.valueOf()) / 1000);\n    var endTime = range.to.utc().format('YYYY-MM-DD HH:mm');\n    var expr = {\n      'g0.expr': this.templateSrv.replace(\n        this.target.expr,\n        this.panelCtrl.panel.scopedVars,\n        this.datasource.interpolateQueryExpr\n      ),\n      'g0.range_input': rangeDiff + 's',\n      'g0.end_input': endTime,\n      'g0.step_input': this.target.step,\n      'g0.stacked': this.panelCtrl.panel.stack ? 1 : 0,\n      'g0.tab': 0,\n    };\n    var args = _.map(expr, (v, k) => {\n      return k + '=' + encodeURIComponent(v);\n    }).join('&');\n    this.linkToPrometheus = this.datasource.directUrl + '/graph?' + args;\n  }\n\n  getCollapsedText() {\n    return this.target.expr;\n  }\n}\n\nexport { PrometheusQueryCtrl };\n","export class PrometheusConfigCtrl {\n  static templateUrl = 'public/app/plugins/datasource/prometheus/partials/config.html';\n  current: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.httpMethod = this.current.jsonData.httpMethod || 'GET';\n  }\n}\n","import { PrometheusDatasource } from './datasource';\nimport { PrometheusQueryCtrl } from './query_ctrl';\nimport { PrometheusConfigCtrl } from './config_ctrl';\n\nclass PrometheusAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  PrometheusDatasource as Datasource,\n  PrometheusQueryCtrl as QueryCtrl,\n  PrometheusConfigCtrl as ConfigCtrl,\n  PrometheusAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nexport default class ResponseParser {\n  constructor(private $q) {}\n\n  processQueryResult(res) {\n    var data = [];\n\n    if (!res.data.results) {\n      return { data: data };\n    }\n\n    for (let key in res.data.results) {\n      let queryRes = res.data.results[key];\n\n      if (queryRes.series) {\n        for (let series of queryRes.series) {\n          data.push({\n            target: series.name,\n            datapoints: series.points,\n            refId: queryRes.refId,\n            meta: queryRes.meta,\n          });\n        }\n      }\n\n      if (queryRes.tables) {\n        for (let table of queryRes.tables) {\n          table.type = 'table';\n          table.refId = queryRes.refId;\n          table.meta = queryRes.meta;\n          data.push(table);\n        }\n      }\n    }\n\n    return { data: data };\n  }\n\n  parseMetricFindQueryResult(refId, results) {\n    if (!results || results.data.length === 0 || results.data.results[refId].meta.rowCount === 0) {\n      return [];\n    }\n\n    const columns = results.data.results[refId].tables[0].columns;\n    const rows = results.data.results[refId].tables[0].rows;\n    const textColIndex = this.findColIndex(columns, '__text');\n    const valueColIndex = this.findColIndex(columns, '__value');\n\n    if (columns.length === 2 && textColIndex !== -1 && valueColIndex !== -1) {\n      return this.transformToKeyValueList(rows, textColIndex, valueColIndex);\n    }\n\n    return this.transformToSimpleList(rows);\n  }\n\n  transformToKeyValueList(rows, textColIndex, valueColIndex) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      if (!this.containsKey(res, rows[i][textColIndex])) {\n        res.push({ text: rows[i][textColIndex], value: rows[i][valueColIndex] });\n      }\n    }\n\n    return res;\n  }\n\n  transformToSimpleList(rows) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < rows[i].length; j++) {\n        const value = rows[i][j];\n        if (res.indexOf(value) === -1) {\n          res.push(value);\n        }\n      }\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  findColIndex(columns, colName) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].text === colName) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  containsKey(res, key) {\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].text === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transformAnnotationResponse(options, data) {\n    const table = data.data.results[options.annotation.name].tables[0];\n\n    let timeColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n\n    for (let i = 0; i < table.columns.length; i++) {\n      if (table.columns[i].text === 'time') {\n        timeColumnIndex = i;\n      } else if (table.columns[i].text === 'text') {\n        textColumnIndex = i;\n      } else if (table.columns[i].text === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n\n    if (timeColumnIndex === -1) {\n      return this.$q.reject({ message: 'Missing mandatory time column (with time column alias) in annotation query.' });\n    }\n\n    const list = [];\n    for (let i = 0; i < table.rows.length; i++) {\n      const row = table.rows[i];\n      list.push({\n        annotation: options.annotation,\n        time: Math.floor(row[timeColumnIndex]),\n        text: row[textColumnIndex],\n        tags: row[tagsColumnIndex] ? row[tagsColumnIndex].trim().split(/\\s*,\\s*/) : [],\n      });\n    }\n\n    return list;\n  }\n}\n","import _ from 'lodash';\nimport ResponseParser from './response_parser';\n\nexport class MssqlDatasource {\n  id: any;\n  name: any;\n  responseParser: ResponseParser;\n\n  /** @ngInject **/\n  constructor(instanceSettings, private backendSrv, private $q, private templateSrv) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.responseParser = new ResponseParser(this.$q);\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value.replace(/'/g, `''`) + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    var quotedValues = _.map(value, function(val) {\n      if (typeof value === 'number') {\n        return value;\n      }\n\n      return \"'\" + val.replace(/'/g, `''`) + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  query(options) {\n    var queries = _.filter(options.targets, item => {\n      return item.hide !== true;\n    }).map(item => {\n      return {\n        refId: item.refId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        datasourceId: this.id,\n        rawSql: this.templateSrv.replace(item.rawSql, options.scopedVars, this.interpolateVariable),\n        format: item.format,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: queries,\n        },\n      })\n      .then(this.responseParser.processQueryResult);\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({ message: 'Query missing in annotation definition' });\n    }\n\n    const query = {\n      refId: options.annotation.name,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(options.annotation.rawQuery, options.scopedVars, this.interpolateVariable),\n      format: 'table',\n    };\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: [query],\n        },\n      })\n      .then(data => this.responseParser.transformAnnotationResponse(options, data));\n  }\n\n  metricFindQuery(query, optionalOptions) {\n    let refId = 'tempvar';\n    if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n      refId = optionalOptions.variable.name;\n    }\n\n    const interpolatedQuery = {\n      refId: refId,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n      format: 'table',\n    };\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          queries: [interpolatedQuery],\n        },\n      })\n      .then(data => this.responseParser.parseMetricFindQueryResult(refId, data));\n  }\n\n  testDatasource() {\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: '5m',\n          to: 'now',\n          queries: [\n            {\n              refId: 'A',\n              intervalMs: 1,\n              maxDataPoints: 1,\n              datasourceId: this.id,\n              rawSql: 'SELECT 1',\n              format: 'table',\n            },\n          ],\n        },\n      })\n      .then(res => {\n        return { status: 'success', message: 'Database Connection OK' };\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.data && err.data.message) {\n          return { status: 'error', message: err.data.message };\n        } else {\n          return { status: 'error', message: err.status };\n        }\n      });\n  }\n}\n","import _ from 'lodash';\n\nclass TestDataDatasource {\n  id: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, private backendSrv, private $q) {\n    this.id = instanceSettings.id;\n  }\n\n  query(options) {\n    var queries = _.filter(options.targets, item => {\n      return item.hide !== true;\n    }).map(item => {\n      return {\n        refId: item.refId,\n        scenarioId: item.scenarioId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        stringInput: item.stringInput,\n        points: item.points,\n        alias: item.alias,\n        datasourceId: this.id,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n\n    return this.backendSrv\n      .post('/api/tsdb/query', {\n        from: options.range.from.valueOf().toString(),\n        to: options.range.to.valueOf().toString(),\n        queries: queries,\n      })\n      .then(res => {\n        var data = [];\n\n        if (res.results) {\n          _.forEach(res.results, queryRes => {\n            for (let series of queryRes.series) {\n              data.push({\n                target: series.name,\n                datapoints: series.points,\n              });\n            }\n          });\n        }\n\n        return { data: data };\n      });\n  }\n\n  annotationQuery(options) {\n    return this.backendSrv.get('/api/annotations', {\n      from: options.range.from.valueOf(),\n      to: options.range.to.valueOf(),\n      limit: options.limit,\n      type: options.type,\n    });\n  }\n}\n\nexport { TestDataDatasource };\n","import _ from 'lodash';\nimport { QueryCtrl } from 'app/plugins/sdk';\n\nexport interface MssqlQuery {\n  refId: string;\n  format: string;\n  alias: string;\n  rawSql: string;\n}\n\nexport interface QueryMeta {\n  sql: string;\n}\n\nconst defaultQuery = `SELECT\n  $__timeEpoch(<time_column>),\n  <value column> as value,\n  <series name column> as metric\nFROM\n  <table name>\nWHERE\n  $__timeFilter(time_column)\nORDER BY\n  <time_column> ASC`;\n\nexport class MssqlQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  showLastQuerySQL: boolean;\n  formats: any[];\n  target: MssqlQuery;\n  lastQueryMeta: QueryMeta;\n  lastQueryError: string;\n  showHelp: boolean;\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.target.format = this.target.format || 'time_series';\n    this.target.alias = '';\n    this.formats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n\n    if (!this.target.rawSql) {\n      // special handling when in table panel\n      if (this.panelCtrl.panel.type === 'table') {\n        this.target.format = 'table';\n        this.target.rawSql = 'SELECT 1';\n      } else {\n        this.target.rawSql = defaultQuery;\n      }\n    }\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryMeta = null;\n    this.lastQueryError = null;\n\n    let anySeriesFromQuery = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQueryMeta = anySeriesFromQuery.meta;\n    }\n  }\n\n  onDataError(err) {\n    if (err.data && err.data.results) {\n      let queryRes = err.data.results[this.target.refId];\n      if (queryRes) {\n        this.lastQueryMeta = queryRes.meta;\n        this.lastQueryError = queryRes.error;\n      }\n    }\n  }\n}\n","import { MssqlDatasource } from './datasource';\nimport { MssqlQueryCtrl } from './query_ctrl';\n\nclass MssqlConfigCtrl {\n  static templateUrl = 'partials/config.html';\n}\n\nconst defaultQuery = `SELECT\n    <time_column> as time,\n    <text_column> as text,\n    <tags_column> as tags\n  FROM\n    <table name>\n  WHERE\n    $__timeFilter(time_column)\n  ORDER BY\n    <time_column> ASC`;\n\nclass MssqlAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  annotation: any;\n\n  /** @ngInject **/\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  MssqlDatasource,\n  MssqlDatasource as Datasource,\n  MssqlQueryCtrl as QueryCtrl,\n  MssqlConfigCtrl as ConfigCtrl,\n  MssqlAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\n\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport moment from 'moment';\n\nexport class TestDataQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  scenarioList: any;\n  scenario: any;\n  newPointValue: number;\n  newPointTime: any;\n  selectedPoint: any;\n\n  /** @ngInject **/\n  constructor($scope, $injector, private backendSrv) {\n    super($scope, $injector);\n\n    this.target.scenarioId = this.target.scenarioId || 'random_walk';\n    this.scenarioList = [];\n    this.newPointTime = moment();\n    this.selectedPoint = { text: 'Select point', value: null };\n  }\n\n  getPoints() {\n    return _.map(this.target.points, (point, index) => {\n      return {\n        text: moment(point[1]).format('MMMM Do YYYY, H:mm:ss') + ' : ' + point[0],\n        value: index,\n      };\n    });\n  }\n\n  pointSelected(option) {\n    this.selectedPoint = option;\n  }\n\n  deletePoint() {\n    this.target.points.splice(this.selectedPoint.value, 1);\n    this.selectedPoint = { text: 'Select point', value: null };\n    this.refresh();\n  }\n\n  addPoint() {\n    this.target.points = this.target.points || [];\n    this.target.points.push([this.newPointValue, this.newPointTime.valueOf()]);\n    this.target.points = _.sortBy(this.target.points, p => p[1]);\n    this.refresh();\n  }\n\n  $onInit() {\n    return this.backendSrv.get('/api/tsdb/testdata/scenarios').then(res => {\n      this.scenarioList = res;\n      this.scenario = _.find(this.scenarioList, { id: this.target.scenarioId });\n    });\n  }\n\n  scenarioChanged() {\n    this.scenario = _.find(this.scenarioList, { id: this.target.scenarioId });\n    this.target.stringInput = this.scenario.stringInput;\n\n    if (this.target.scenarioId === 'manual_entry') {\n      this.target.points = this.target.points || [];\n    } else {\n      delete this.target.points;\n    }\n\n    this.refresh();\n  }\n}\n","import { TestDataDatasource } from './datasource';\nimport { TestDataQueryCtrl } from './query_ctrl';\n\nclass TestDataAnnotationsQueryCtrl {\n  annotation: any;\n\n  constructor() {}\n\n  static template = '<h2>test data</h2>';\n}\n\nexport {\n  TestDataDatasource,\n  TestDataDatasource as Datasource,\n  TestDataQueryCtrl as QueryCtrl,\n  TestDataAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport { PanelCtrl } from 'app/plugins/sdk';\nimport Remarkable from 'remarkable';\n\nexport class TextPanelCtrl extends PanelCtrl {\n  static templateUrl = `public/app/plugins/panel/text/module.html`;\n  static scrollable = true;\n\n  remarkable: any;\n  content: string;\n  // Set and populate defaults\n  panelDefaults = {\n    mode: 'markdown', // 'html', 'markdown', 'text'\n    content: '# title',\n  };\n\n  /** @ngInject **/\n  constructor($scope, $injector, private templateSrv, private $sce) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n\n    $scope.$watch(\n      'ctrl.panel.content',\n      _.throttle(() => {\n        this.render();\n      }, 1000)\n    );\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('选项', 'public/app/plugins/panel/text/editor.html');\n    this.editorTabIndex = 1;\n\n    if (this.panel.mode === 'text') {\n      this.panel.mode = 'markdown';\n    }\n  }\n\n  onRefresh() {\n    this.render();\n  }\n\n  onRender() {\n    if (this.panel.mode === 'markdown') {\n      this.renderMarkdown(this.panel.content);\n    } else if (this.panel.mode === 'html') {\n      this.updateContent(this.panel.content);\n    }\n    this.renderingCompleted();\n  }\n\n  renderText(content) {\n    content = content\n      .replace(/&/g, '&amp;')\n      .replace(/>/g, '&gt;')\n      .replace(/</g, '&lt;')\n      .replace(/\\n/g, '<br/>');\n    this.updateContent(content);\n  }\n\n  renderMarkdown(content) {\n    if (!this.remarkable) {\n      this.remarkable = new Remarkable();\n    }\n\n    this.$scope.$applyAsync(() => {\n      this.updateContent(this.remarkable.render(content));\n    });\n  }\n\n  updateContent(html) {\n    try {\n      this.content = this.$sce.trustAsHtml(this.templateSrv.replace(html, this.panel.scopedVars));\n    } catch (e) {\n      console.log('Text panel error: ', e);\n      this.content = this.$sce.trustAsHtml(html);\n    }\n  }\n}\n\nexport { TextPanelCtrl as PanelCtrl };\n","import angular from 'angular';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport Drop from 'tether-drop';\n\n/** @ngInject */\nexport function createAnnotationToolip(element, event, plot) {\n  let injector = angular.element(document).injector();\n  let content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    function($compile, $rootScope) {\n      let eventManager = plot.getOptions().events.manager;\n      let tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = function() {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      let drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', function() {\n        setTimeout(function() {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n}\n\nlet markerElementToAttachTo = null;\n\n/** @ngInject */\nexport function createEditPopover(element, event, plot) {\n  let eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the inital marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(function() {\n    let injector = angular.element(document).injector();\n    let content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      function($compile, $rootScope) {\n        let scope = $rootScope.$new(true);\n        let drop;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = function() {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', function() {\n          // need timeout here in order call drop.destroy\n          setTimeout(function() {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n}\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  /** @ngInject */\n  constructor(object, drawFunc, clearFunc, moveFunc, left, top, width, height) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left: left, top: top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  /** @ngInject */\n  constructor(options, drawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  /** @ngInject */\n  constructor(plot) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events) {\n    let parts = _.partition(events, 'isRegion');\n    let regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      let ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      let vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a, b) => {\n      let ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      // check event is inside the graph range\n      if (this._insidePlot(event.getOptions().min) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event\n          .visual()\n          .getObject()\n          .hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    let o = this._plot.getPlotOffset(),\n      left,\n      top;\n    let xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event) {\n    let that = this;\n\n    let container = this._plot.getPlaceholder();\n    let o = this._plot.getPlotOffset();\n    let xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    let eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    let line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      let marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      let mouseenter = function() {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      let mouseleave = function() {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    let drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj) {\n        obj.show();\n      },\n      function(obj) {\n        obj.remove();\n      },\n      function(obj, position) {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width(),\n      line.height()\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event) {\n    let that = this;\n\n    let container = this._plot.getPlaceholder();\n    let o = this._plot.getPlotOffset();\n    let xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, lineWidth, regionWidth, lineStyle, color, markerTooltip;\n\n    // map the eventType to a types object\n    let eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    let topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    let timeFrom = Math.min(event.min, event.timeEnd);\n    let timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    let right = xaxis.p2c(timeTo) + o.left;\n    regionWidth = right - left;\n\n    _.each([left, right], position => {\n      let line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: position + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      });\n      line.appendTo(container);\n    });\n\n    let region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: left + 'px',\n      top: top,\n      width: Math.round(regionWidth + lineWidth) + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    let mouseenter = function() {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    let mouseleave = function() {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    let drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj) {\n        obj.show();\n      },\n      function(obj) {\n        obj.remove();\n      },\n      function(obj, position) {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width(),\n      region.height()\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x) {\n    let xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(plot) {\n  /*jshint validthis:true */\n  let that = this;\n  let eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = function() {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = function() {\n    $.each(eventMarkers._events, (index, event) => {\n      event\n        .visual()\n        .getObject()\n        .hide();\n    });\n  };\n\n  plot.showEvents = function() {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = function(events) {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push(function(plot, options) {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push(function(plot) {\n    let options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nlet defaultOptions = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n","import $ from 'jquery';\nimport { appEvents } from 'app/core/core';\n\nexport default function GraphTooltip(elem, dashboard, scope, getSeriesFn) {\n  let self = this;\n  let ctrl = scope.ctrl;\n  let panel = ctrl.panel;\n\n  let $tooltip = $('<div class=\"graph-tooltip\">');\n\n  this.destroy = function() {\n    $tooltip.remove();\n  };\n\n  this.findHoverIndexFromDataPoints = function(posX, series, last) {\n    let ps = series.datapoints.pointsize;\n    let initial = last * ps;\n    let len = series.datapoints.points.length;\n    let j;\n    for (j = initial; j < len; j += ps) {\n      // Special case of a non stepped line, highlight the very last point just before a null point\n      if (\n        (!series.lines.steps && series.datapoints.points[initial] != null && series.datapoints.points[j] == null) ||\n        //normal case\n        series.datapoints.points[j] > posX\n      ) {\n        return Math.max(j - ps, 0) / ps;\n      }\n    }\n    return j / ps - 1;\n  };\n\n  this.findHoverIndexFromData = function(posX, series) {\n    let lower = 0;\n    let upper = series.data.length - 1;\n    let middle;\n    while (true) {\n      if (lower > upper) {\n        return Math.max(upper, 0);\n      }\n      middle = Math.floor((lower + upper) / 2);\n      if (series.data[middle][0] === posX) {\n        return middle;\n      } else if (series.data[middle][0] < posX) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n  };\n\n  this.renderAndShow = function(absoluteTime, innerHtml, pos, xMode) {\n    if (xMode === 'time') {\n      innerHtml = '<div class=\"graph-tooltip-time\">' + absoluteTime + '</div>' + innerHtml;\n    }\n    $tooltip.html(innerHtml).place_tt(pos.pageX + 20, pos.pageY);\n  };\n\n  this.getMultiSeriesPlotHoverInfo = function(seriesList, pos) {\n    let value, i, series, hoverIndex, hoverDistance, pointTime, yaxis;\n    // 3 sub-arrays, 1st for hidden series, 2nd for left yaxis, 3rd for right yaxis.\n    let results: any = [[], [], []];\n\n    //now we know the current X (j) position for X and Y values\n    let last_value = 0; //needed for stacked values\n\n    let minDistance, minTime;\n\n    for (i = 0; i < seriesList.length; i++) {\n      series = seriesList[i];\n\n      if (!series.data.length || (panel.legend.hideEmpty && series.allIsNull)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (!series.data.length || (panel.legend.hideZero && series.allIsZero)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (series.hideTooltip) {\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      hoverIndex = this.findHoverIndexFromData(pos.x, series);\n      hoverDistance = pos.x - series.data[hoverIndex][0];\n      pointTime = series.data[hoverIndex][0];\n\n      // Take the closest point before the cursor, or if it does not exist, the closest after\n      if (\n        !minDistance ||\n        (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n        (hoverDistance < 0 && hoverDistance > minDistance)\n      ) {\n        minDistance = hoverDistance;\n        minTime = pointTime;\n      }\n\n      if (series.stack) {\n        if (panel.tooltip.value_type === 'individual') {\n          value = series.data[hoverIndex][1];\n        } else if (!series.stack) {\n          value = series.data[hoverIndex][1];\n        } else {\n          last_value += series.data[hoverIndex][1];\n          value = last_value;\n        }\n      } else {\n        value = series.data[hoverIndex][1];\n      }\n\n      // Highlighting multiple Points depending on the plot type\n      if (series.lines.steps || series.stack) {\n        // stacked and steppedLine plots can have series with different length.\n        // Stacked series can increase its length on each new stacked serie if null points found,\n        // to speed the index search we begin always on the last found hoverIndex.\n        hoverIndex = this.findHoverIndexFromDataPoints(pos.x, series, hoverIndex);\n      }\n\n      // Be sure we have a yaxis so that it does not brake series sorting\n      yaxis = 0;\n      if (series.yaxis) {\n        yaxis = series.yaxis.n;\n      }\n\n      results[yaxis].push({\n        value: value,\n        hoverIndex: hoverIndex,\n        color: series.color,\n        label: series.aliasEscaped,\n        time: pointTime,\n        distance: hoverDistance,\n        index: i,\n      });\n    }\n\n    // Contat the 3 sub-arrays\n    results = results[0].concat(results[1], results[2]);\n\n    // Time of the point closer to pointer\n    results.time = minTime;\n\n    return results;\n  };\n\n  elem.mouseleave(function() {\n    if (panel.tooltip.shared) {\n      let plot = elem.data().plot;\n      if (plot) {\n        $tooltip.detach();\n        plot.unhighlight();\n      }\n    }\n    appEvents.emit('graph-hover-clear');\n  });\n\n  elem.bind('plothover', function(event, pos, item) {\n    self.show(pos, item);\n\n    // broadcast to other graph panels that we are hovering!\n    pos.panelRelY = (pos.pageY - elem.offset().top) / elem.height();\n    appEvents.emit('graph-hover', { pos: pos, panel: panel });\n  });\n\n  elem.bind('plotclick', function(event, pos, item) {\n    appEvents.emit('graph-click', { pos: pos, panel: panel, item: item });\n  });\n\n  this.clear = function(plot) {\n    $tooltip.detach();\n    plot.clearCrosshair();\n    plot.unhighlight();\n  };\n\n  this.show = function(pos, item) {\n    let plot = elem.data().plot;\n    let plotData = plot.getData();\n    let xAxes = plot.getXAxes();\n    let xMode = xAxes[0].options.mode;\n    let seriesList = getSeriesFn();\n    let allSeriesMode = panel.tooltip.shared;\n    let group, value, absoluteTime, hoverInfo, i, series, seriesHtml, tooltipFormat;\n\n    // if panelRelY is defined another panel wants us to show a tooltip\n    // get pageX from position on x axis and pageY from relative position in original panel\n    if (pos.panelRelY) {\n      let pointOffset = plot.pointOffset({ x: pos.x });\n      if (Number.isNaN(pointOffset.left) || pointOffset.left < 0 || pointOffset.left > elem.width()) {\n        self.clear(plot);\n        return;\n      }\n      pos.pageX = elem.offset().left + pointOffset.left;\n      pos.pageY = elem.offset().top + elem.height() * pos.panelRelY;\n      let isVisible =\n        pos.pageY >= $(window).scrollTop() && pos.pageY <= $(window).innerHeight() + $(window).scrollTop();\n      if (!isVisible) {\n        self.clear(plot);\n        return;\n      }\n      plot.setCrosshair(pos);\n      allSeriesMode = true;\n\n      if (dashboard.sharedCrosshairModeOnly()) {\n        // if only crosshair mode we are done\n        return;\n      }\n    }\n\n    if (seriesList.length === 0) {\n      return;\n    }\n\n    if (seriesList[0].hasMsResolution) {\n      tooltipFormat = 'YYYY-MM-DD HH:mm:ss.SSS';\n    } else {\n      tooltipFormat = 'YYYY-MM-DD HH:mm:ss';\n    }\n\n    if (allSeriesMode) {\n      plot.unhighlight();\n\n      let seriesHoverInfo = self.getMultiSeriesPlotHoverInfo(plotData, pos);\n\n      seriesHtml = '';\n\n      absoluteTime = dashboard.formatDate(seriesHoverInfo.time, tooltipFormat);\n\n      // Dynamically reorder the hovercard for the current time point if the\n      // option is enabled.\n      if (panel.tooltip.sort === 2) {\n        seriesHoverInfo.sort(function(a, b) {\n          return b.value - a.value;\n        });\n      } else if (panel.tooltip.sort === 1) {\n        seriesHoverInfo.sort(function(a, b) {\n          return a.value - b.value;\n        });\n      }\n\n      for (i = 0; i < seriesHoverInfo.length; i++) {\n        hoverInfo = seriesHoverInfo[i];\n\n        if (hoverInfo.hidden) {\n          continue;\n        }\n\n        let highlightClass = '';\n        if (item && hoverInfo.index === item.seriesIndex) {\n          highlightClass = 'graph-tooltip-list-item--highlight';\n        }\n\n        series = seriesList[hoverInfo.index];\n\n        value = series.formatValue(hoverInfo.value);\n\n        seriesHtml +=\n          '<div class=\"graph-tooltip-list-item ' + highlightClass + '\"><div class=\"graph-tooltip-series-name\">';\n        seriesHtml +=\n          '<i class=\"fa fa-minus\" style=\"color:' + hoverInfo.color + ';\"></i> ' + hoverInfo.label + ':</div>';\n        seriesHtml += '<div class=\"graph-tooltip-value\">' + value + '</div></div>';\n        plot.highlight(hoverInfo.index, hoverInfo.hoverIndex);\n      }\n\n      self.renderAndShow(absoluteTime, seriesHtml, pos, xMode);\n    } else if (item) {\n      // single series tooltip\n      series = seriesList[item.seriesIndex];\n      group = '<div class=\"graph-tooltip-list-item\"><div class=\"graph-tooltip-series-name\">';\n      group +=\n        '<i class=\"fa fa-minus\" style=\"color:' + item.series.color + ';\"></i> ' + series.aliasEscaped + ':</div>';\n\n      if (panel.stack && panel.tooltip.value_type === 'individual') {\n        value = item.datapoint[1] - item.datapoint[2];\n      } else {\n        value = item.datapoint[1];\n      }\n\n      value = series.formatValue(value);\n\n      absoluteTime = dashboard.formatDate(item.datapoint[0], tooltipFormat);\n\n      group += '<div class=\"graph-tooltip-value\">' + value + '</div>';\n\n      self.renderAndShow(absoluteTime, group, pos, xMode);\n    } else {\n      // no hit\n      $tooltip.detach();\n    }\n  };\n}\n","import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup: boolean;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl) {}\n\n  getHandleHtml(handleIndex, model, valueStr) {\n    var stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt) {\n    var handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    var handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    var lastY = null;\n    var posTop;\n    var plot = this.plot;\n    var panelCtrl = this.panelCtrl;\n    var model = this.thresholds[handleIndex];\n\n    function dragging(evt) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        var diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      var graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0));\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      handleElem.off('mouseup', dragging);\n      handleElem.off('mouseleave', dragging);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(function() {\n        panelCtrl.render();\n        panelCtrl.events.emit('threshold-changed', {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    handleElem.on('mouseup', stopped);\n    handleElem.on('mouseleave', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex, defaultHandleTopPos) {\n    var model = this.thresholds[handleIndex];\n    var value = model.value;\n    var valueStr = value;\n    var handleTopPos = 0;\n\n    // handle no value\n    if (!_.isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      var valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    var handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem, data) {\n    this.hasSecondYAxis = false;\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      var thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options, panel) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    var gtLimit = Infinity;\n    var ltLimit = -Infinity;\n    var i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!_.isNumber(threshold.value)) {\n        continue;\n      }\n\n      var limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      var fillColor, lineColor;\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: fillColor,\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: fillColor,\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: lineColor,\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: lineColor,\n          });\n        }\n      }\n    }\n  }\n}\n","import _ from 'lodash';\n\n/**\n * To align two Y axes by Y level\n * @param yAxes data [{min: min_y1, min: max_y1}, {min: min_y2, max: max_y2}]\n * @param level Y level\n */\nexport function alignYLevel(yAxes, level) {\n  if (isNaN(level) || !checkCorrectAxis(yAxes)) {\n    return;\n  }\n\n  var [yLeft, yRight] = yAxes;\n  moveLevelToZero(yLeft, yRight, level);\n\n  expandStuckValues(yLeft, yRight);\n\n  // one of graphs on zero\n  var zero = yLeft.min === 0 || yRight.min === 0 || yLeft.max === 0 || yRight.max === 0;\n\n  var oneSide = checkOneSide(yLeft, yRight);\n\n  if (zero && oneSide) {\n    yLeft.min = yLeft.max > 0 ? 0 : yLeft.min;\n    yLeft.max = yLeft.max > 0 ? yLeft.max : 0;\n    yRight.min = yRight.max > 0 ? 0 : yRight.min;\n    yRight.max = yRight.max > 0 ? yRight.max : 0;\n  } else {\n    if (checkOppositeSides(yLeft, yRight)) {\n      if (yLeft.min >= 0) {\n        yLeft.min = -yLeft.max;\n        yRight.max = -yRight.min;\n      } else {\n        yLeft.max = -yLeft.min;\n        yRight.min = -yRight.max;\n      }\n    } else {\n      var rate = getRate(yLeft, yRight);\n\n      if (oneSide) {\n        // all graphs above the Y level\n        if (yLeft.min > 0) {\n          yLeft.min = yLeft.max / rate;\n          yRight.min = yRight.max / rate;\n        } else {\n          yLeft.max = yLeft.min / rate;\n          yRight.max = yRight.min / rate;\n        }\n      } else {\n        if (checkTwoCross(yLeft, yRight)) {\n          yLeft.min = yRight.min ? yRight.min * rate : yLeft.min;\n          yRight.min = yLeft.min ? yLeft.min / rate : yRight.min;\n          yLeft.max = yRight.max ? yRight.max * rate : yLeft.max;\n          yRight.max = yLeft.max ? yLeft.max / rate : yRight.max;\n        } else {\n          yLeft.min = yLeft.min > 0 ? yRight.min * rate : yLeft.min;\n          yRight.min = yRight.min > 0 ? yLeft.min / rate : yRight.min;\n          yLeft.max = yLeft.max < 0 ? yRight.max * rate : yLeft.max;\n          yRight.max = yRight.max < 0 ? yLeft.max / rate : yRight.max;\n        }\n      }\n    }\n  }\n\n  restoreLevelFromZero(yLeft, yRight, level);\n}\n\nfunction expandStuckValues(yLeft, yRight) {\n  // wide Y min and max using increased wideFactor\n  var wideFactor = 0.25;\n  if (yLeft.max === yLeft.min) {\n    yLeft.min -= wideFactor;\n    yLeft.max += wideFactor;\n  }\n  if (yRight.max === yRight.min) {\n    yRight.min -= wideFactor;\n    yRight.max += wideFactor;\n  }\n}\n\nfunction moveLevelToZero(yLeft, yRight, level) {\n  if (level !== 0) {\n    yLeft.min -= level;\n    yLeft.max -= level;\n    yRight.min -= level;\n    yRight.max -= level;\n  }\n}\n\nfunction restoreLevelFromZero(yLeft, yRight, level) {\n  if (level !== 0) {\n    yLeft.min += level;\n    yLeft.max += level;\n    yRight.min += level;\n    yRight.max += level;\n  }\n}\n\nfunction checkCorrectAxis(axis) {\n  return axis.length === 2 && checkCorrectAxes(axis[0]) && checkCorrectAxes(axis[1]);\n}\n\nfunction checkCorrectAxes(axes) {\n  return 'min' in axes && 'max' in axes;\n}\n\nfunction checkOneSide(yLeft, yRight) {\n  // on the one hand with respect to zero\n  return (yLeft.min >= 0 && yRight.min >= 0) || (yLeft.max <= 0 && yRight.max <= 0);\n}\n\nfunction checkTwoCross(yLeft, yRight) {\n  // both across zero\n  return yLeft.min <= 0 && yLeft.max >= 0 && yRight.min <= 0 && yRight.max >= 0;\n}\n\nfunction checkOppositeSides(yLeft, yRight) {\n  // on the opposite sides with respect to zero\n  return (yLeft.min >= 0 && yRight.max <= 0) || (yLeft.max <= 0 && yRight.min >= 0);\n}\n\nfunction getRate(yLeft, yRight) {\n  var rateLeft, rateRight, rate;\n  if (checkTwoCross(yLeft, yRight)) {\n    rateLeft = yRight.min ? yLeft.min / yRight.min : 0;\n    rateRight = yRight.max ? yLeft.max / yRight.max : 0;\n  } else {\n    if (checkOneSide(yLeft, yRight)) {\n      var absLeftMin = Math.abs(yLeft.min);\n      var absLeftMax = Math.abs(yLeft.max);\n      var absRightMin = Math.abs(yRight.min);\n      var absRightMax = Math.abs(yRight.max);\n      var upLeft = _.max([absLeftMin, absLeftMax]);\n      var downLeft = _.min([absLeftMin, absLeftMax]);\n      var upRight = _.max([absRightMin, absRightMax]);\n      var downRight = _.min([absRightMin, absRightMax]);\n\n      rateLeft = downLeft ? upLeft / downLeft : upLeft;\n      rateRight = downRight ? upRight / downRight : upRight;\n    } else {\n      if (yLeft.min > 0 || yRight.min > 0) {\n        rateLeft = yLeft.max / yRight.max;\n        rateRight = 0;\n      } else {\n        rateLeft = 0;\n        rateRight = yLeft.min / yRight.min;\n      }\n    }\n  }\n\n  rate = rateLeft > rateRight ? rateLeft : rateRight;\n\n  return rate;\n}\n","import _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\n\n/**\n * Convert series into array of series values.\n * @param data Array of series\n */\nexport function getSeriesValues(dataList: TimeSeries[]): number[] {\n  const VALUE_INDEX = 0;\n  let values = [];\n\n  // Count histogam stats\n  for (let i = 0; i < dataList.length; i++) {\n    let series = dataList[i];\n    let datapoints = series.datapoints;\n    for (let j = 0; j < datapoints.length; j++) {\n      if (datapoints[j][VALUE_INDEX] !== null) {\n        values.push(datapoints[j][VALUE_INDEX]);\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert array of values into timeseries-like histogram:\n * [[val_1, count_1], [val_2, count_2], ..., [val_n, count_n]]\n * @param values\n * @param bucketSize\n */\nexport function convertValuesToHistogram(values: number[], bucketSize: number, min: number, max: number): any[] {\n  let histogram = {};\n\n  let minBound = getBucketBound(min, bucketSize);\n  let maxBound = getBucketBound(max, bucketSize);\n  let bound = minBound;\n  let n = 0;\n  while (bound <= maxBound) {\n    histogram[bound] = 0;\n    bound = minBound + bucketSize * n;\n    n++;\n  }\n\n  for (let i = 0; i < values.length; i++) {\n    let bound = getBucketBound(values[i], bucketSize);\n    histogram[bound] = histogram[bound] + 1;\n  }\n\n  let histogam_series = _.map(histogram, (count, bound) => {\n    return [Number(bound), count];\n  });\n\n  // Sort by Y axis values\n  return _.sortBy(histogam_series, point => point[0]);\n}\n\n/**\n * Convert series into array of histogram data.\n * @param data Array of series\n * @param bucketSize\n */\nexport function convertToHistogramData(\n  data: any,\n  bucketSize: number,\n  hiddenSeries: any,\n  min: number,\n  max: number\n): any[] {\n  return data.map(series => {\n    let values = getSeriesValues([series]);\n    series.histogram = true;\n    if (!hiddenSeries[series.alias]) {\n      let histogram = convertValuesToHistogram(values, bucketSize, min, max);\n      series.data = histogram;\n    } else {\n      series.data = [];\n    }\n    return series;\n  });\n}\n\nfunction getBucketBound(value: number, bucketSize: number): number {\n  return Math.floor(value / bucketSize) * bucketSize;\n}\n","import 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport './jquery.flot.events';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { appEvents, coreModule, updateLegendValues } from 'app/core/core';\nimport GraphTooltip from './graph_tooltip';\nimport { ThresholdManager } from './threshold_manager';\nimport { EventManager } from 'app/features/annotations/all';\nimport { convertToHistogramData } from './histogram';\nimport { alignYLevel } from './align_yaxes';\nimport config from 'app/core/config';\n\n/** @ngInject **/\nfunction graphDirective(timeSrv, popoverSrv, contextSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: function(scope, elem) {\n      var ctrl = scope.ctrl;\n      var dashboard = ctrl.dashboard;\n      var panel = ctrl.panel;\n      var annotations = [];\n      var data;\n      var plot;\n      var sortedSeries;\n      var panelWidth = 0;\n      var eventManager = new EventManager(ctrl);\n      var thresholdManager = new ThresholdManager(ctrl);\n      var tooltip = new GraphTooltip(elem, dashboard, scope, function() {\n        return sortedSeries;\n      });\n\n      // panel events\n      ctrl.events.on('panel-teardown', () => {\n        thresholdManager = null;\n\n        if (plot) {\n          plot.destroy();\n          plot = null;\n        }\n      });\n\n      /**\n       * Split graph rendering into two parts.\n       * First, calculate series stats in buildFlotPairs() function. Then legend rendering started\n       * (see ctrl.events.on('render') in legend.ts).\n       * When legend is rendered it emits 'legend-rendering-complete' and graph rendered.\n       */\n      ctrl.events.on('render', renderData => {\n        data = renderData || data;\n        if (!data) {\n          return;\n        }\n        annotations = ctrl.annotations || [];\n        buildFlotPairs(data);\n        const graphHeight = elem.height();\n        updateLegendValues(data, panel, graphHeight);\n\n        ctrl.events.emit('render-legend');\n      });\n\n      ctrl.events.on('legend-rendering-complete', () => {\n        render_panel();\n      });\n\n      // global events\n      appEvents.on(\n        'graph-hover',\n        evt => {\n          // ignore other graph hover events if shared tooltip is disabled\n          if (!dashboard.sharedTooltipModeEnabled()) {\n            return;\n          }\n\n          // ignore if we are the emitter\n          if (!plot || evt.panel.id === panel.id || ctrl.otherPanelInFullscreenMode()) {\n            return;\n          }\n\n          tooltip.show(evt.pos);\n        },\n        scope\n      );\n\n      appEvents.on(\n        'graph-hover-clear',\n        (event, info) => {\n          if (plot) {\n            tooltip.clear(plot);\n          }\n        },\n        scope\n      );\n\n      function shouldAbortRender() {\n        if (!data) {\n          return true;\n        }\n\n        if (panelWidth === 0) {\n          return true;\n        }\n\n        return false;\n      }\n\n      function drawHook(plot) {\n        // add left axis labels\n        if (panel.yaxes[0].label && panel.yaxes[0].show) {\n          $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n            .text(panel.yaxes[0].label)\n            .appendTo(elem);\n        }\n\n        // add right axis labels\n        if (panel.yaxes[1].label && panel.yaxes[1].show) {\n          $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n            .text(panel.yaxes[1].label)\n            .appendTo(elem);\n        }\n\n        if (ctrl.dataWarning) {\n          $(`<div class=\"datapoints-warning flot-temp-elem\">${ctrl.dataWarning.title}</div>`).appendTo(elem);\n        }\n\n        thresholdManager.draw(plot);\n      }\n\n      function processOffsetHook(plot, gridMargin) {\n        var left = panel.yaxes[0];\n        var right = panel.yaxes[1];\n        if (left.show && left.label) {\n          gridMargin.left = 20;\n        }\n        if (right.show && right.label) {\n          gridMargin.right = 20;\n        }\n\n        // apply y-axis min/max options\n        var yaxis = plot.getYAxes();\n        for (var i = 0; i < yaxis.length; i++) {\n          var axis = yaxis[i];\n          var panelOptions = panel.yaxes[i];\n          axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n          axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n        }\n      }\n\n      function processRangeHook(plot) {\n        var yAxes = plot.getYAxes();\n        const align = panel.yaxis.align || false;\n\n        if (yAxes.length > 1 && align === true) {\n          const level = panel.yaxis.alignLevel || 0;\n          alignYLevel(yAxes, parseFloat(level));\n        }\n      }\n\n      // Series could have different timeSteps,\n      // let's find the smallest one so that bars are correctly rendered.\n      // In addition, only take series which are rendered as bars for this.\n      function getMinTimeStepOfSeries(data) {\n        var min = Number.MAX_VALUE;\n\n        for (let i = 0; i < data.length; i++) {\n          if (!data[i].stats.timeStep) {\n            continue;\n          }\n          if (panel.bars) {\n            if (data[i].bars && data[i].bars.show === false) {\n              continue;\n            }\n          } else {\n            if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n              continue;\n            }\n          }\n\n          if (data[i].stats.timeStep < min) {\n            min = data[i].stats.timeStep;\n          }\n        }\n\n        return min;\n      }\n\n      // Function for rendering panel\n      function render_panel() {\n        panelWidth = elem.width();\n        if (shouldAbortRender()) {\n          return;\n        }\n\n        // give space to alert editing\n        thresholdManager.prepare(elem, data);\n\n        // un-check dashes if lines are unchecked\n        panel.dashes = panel.lines ? panel.dashes : false;\n\n        // Populate element\n        let options: any = buildFlotOptions(panel);\n        prepareXAxis(options, panel);\n        configureYAxisOptions(data, options);\n        thresholdManager.addFlotOptions(options, panel);\n        eventManager.addFlotEvents(annotations, options);\n\n        sortedSeries = sortSeries(data, panel);\n        callPlot(options, true);\n      }\n\n      function buildFlotPairs(data) {\n        for (let i = 0; i < data.length; i++) {\n          let series = data[i];\n          series.data = series.getFlotPairs(series.nullPointMode || panel.nullPointMode);\n\n          // if hidden remove points and disable stack\n          if (ctrl.hiddenSeries[series.alias]) {\n            series.data = [];\n            series.stack = false;\n          }\n        }\n      }\n\n      function prepareXAxis(options, panel) {\n        switch (panel.xaxis.mode) {\n          case 'series': {\n            options.series.bars.barWidth = 0.7;\n            options.series.bars.align = 'center';\n\n            for (let i = 0; i < data.length; i++) {\n              let series = data[i];\n              series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n            }\n\n            addXSeriesAxis(options);\n            break;\n          }\n          case 'histogram': {\n            let bucketSize: number;\n\n            if (data.length) {\n              let histMin = _.min(_.map(data, s => s.stats.min));\n              let histMax = _.max(_.map(data, s => s.stats.max));\n              let ticks = panel.xaxis.buckets || panelWidth / 50;\n              bucketSize = tickStep(histMin, histMax, ticks);\n              options.series.bars.barWidth = bucketSize * 0.8;\n              data = convertToHistogramData(data, bucketSize, ctrl.hiddenSeries, histMin, histMax);\n            } else {\n              bucketSize = 0;\n            }\n\n            addXHistogramAxis(options, bucketSize);\n            break;\n          }\n          case 'table': {\n            options.series.bars.barWidth = 0.7;\n            options.series.bars.align = 'center';\n            addXTableAxis(options);\n            break;\n          }\n          default: {\n            options.series.bars.barWidth = getMinTimeStepOfSeries(data) / 1.5;\n            addTimeAxis(options);\n            break;\n          }\n        }\n      }\n\n      function callPlot(options, incrementRenderCounter) {\n        try {\n          plot = $.plot(elem, sortedSeries, options);\n          if (ctrl.renderError) {\n            delete ctrl.error;\n            delete ctrl.inspector;\n          }\n        } catch (e) {\n          console.log('flotcharts error', e);\n          ctrl.error = e.message || 'Render Error';\n          ctrl.renderError = true;\n          ctrl.inspector = { error: e };\n        }\n\n        if (incrementRenderCounter) {\n          ctrl.renderingCompleted();\n        }\n      }\n\n      function buildFlotOptions(panel) {\n        let gridColor = '#c8c8c8';\n        if (config.bootData.user.lightTheme === true) {\n          gridColor = '#a1a1a1';\n        }\n        const stack = panel.stack ? true : null;\n        let options = {\n          hooks: {\n            draw: [drawHook],\n            processOffset: [processOffsetHook],\n            processRange: [processRangeHook],\n          },\n          legend: { show: false },\n          series: {\n            stackpercent: panel.stack ? panel.percentage : false,\n            stack: panel.percentage ? null : stack,\n            lines: {\n              show: panel.lines,\n              zero: false,\n              fill: translateFillOption(panel.fill),\n              lineWidth: panel.dashes ? 0 : panel.linewidth,\n              steps: panel.steppedLine,\n            },\n            dashes: {\n              show: panel.dashes,\n              lineWidth: panel.linewidth,\n              dashLength: [panel.dashLength, panel.spaceLength],\n            },\n            bars: {\n              show: panel.bars,\n              fill: 1,\n              barWidth: 1,\n              zero: false,\n              lineWidth: 0,\n            },\n            points: {\n              show: panel.points,\n              fill: 1,\n              fillColor: false,\n              radius: panel.points ? panel.pointradius : 2,\n            },\n            shadowSize: 0,\n          },\n          yaxes: [],\n          xaxis: {},\n          grid: {\n            minBorderMargin: 0,\n            markings: [],\n            backgroundColor: null,\n            borderWidth: 0,\n            hoverable: true,\n            clickable: true,\n            color: gridColor,\n            margin: { left: 0, right: 0 },\n            labelMarginX: 0,\n          },\n          selection: {\n            mode: 'x',\n            color: '#666',\n          },\n          crosshair: {\n            mode: 'x',\n          },\n        };\n        return options;\n      }\n\n      function sortSeries(series, panel) {\n        var sortBy = panel.legend.sort;\n        var sortOrder = panel.legend.sortDesc;\n        var haveSortBy = sortBy !== null && sortBy !== undefined;\n        var haveSortOrder = sortOrder !== null && sortOrder !== undefined;\n        var shouldSortBy = panel.stack && haveSortBy && haveSortOrder;\n        var sortDesc = panel.legend.sortDesc === true ? -1 : 1;\n\n        if (shouldSortBy) {\n          return _.sortBy(series, s => s.stats[sortBy] * sortDesc);\n        } else {\n          return _.sortBy(series, s => s.zindex);\n        }\n      }\n\n      function translateFillOption(fill) {\n        if (panel.percentage && panel.stack) {\n          return fill === 0 ? 0.001 : fill / 10;\n        } else {\n          return fill / 10;\n        }\n      }\n\n      function addTimeAxis(options) {\n        var ticks = panelWidth / 100;\n        var min = _.isUndefined(ctrl.range.from) ? null : ctrl.range.from.valueOf();\n        var max = _.isUndefined(ctrl.range.to) ? null : ctrl.range.to.valueOf();\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: 'time',\n          min: min,\n          max: max,\n          label: 'Datetime',\n          ticks: ticks,\n          timeformat: time_format(ticks, min, max),\n        };\n      }\n\n      function addXSeriesAxis(options) {\n        var ticks = _.map(data, function(series, index) {\n          return [index + 1, series.alias];\n        });\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: 0,\n          max: ticks.length + 1,\n          label: 'Datetime',\n          ticks: ticks,\n        };\n      }\n\n      function addXHistogramAxis(options, bucketSize) {\n        let ticks, min, max;\n        let defaultTicks = panelWidth / 50;\n\n        if (data.length && bucketSize) {\n          let tick_values = [];\n          for (let d of data) {\n            for (let point of d.data) {\n              tick_values[point[0]] = true;\n            }\n          }\n          ticks = Object.keys(tick_values).map(v => Number(v));\n          min = _.min(ticks);\n          max = _.max(ticks);\n\n          // Adjust tick step\n          let tickStep = bucketSize;\n          let ticks_num = Math.floor((max - min) / tickStep);\n          while (ticks_num > defaultTicks) {\n            tickStep = tickStep * 2;\n            ticks_num = Math.ceil((max - min) / tickStep);\n          }\n\n          // Expand ticks for pretty view\n          min = Math.floor(min / tickStep) * tickStep;\n          // 1.01 is 101% - ensure we have enough space for last bar\n          max = Math.ceil(max * 1.01 / tickStep) * tickStep;\n\n          ticks = [];\n          for (let i = min; i <= max; i += tickStep) {\n            ticks.push(i);\n          }\n        } else {\n          // Set defaults if no data\n          ticks = defaultTicks / 2;\n          min = 0;\n          max = 1;\n        }\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: min,\n          max: max,\n          label: 'Histogram',\n          ticks: ticks,\n        };\n\n        // Use 'short' format for histogram values\n        configureAxisMode(options.xaxis, 'short');\n      }\n\n      function addXTableAxis(options) {\n        var ticks = _.map(data, function(series, seriesIndex) {\n          return _.map(series.datapoints, function(point, pointIndex) {\n            var tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n            return [tickIndex + 1, point[1]];\n          });\n        });\n        ticks = _.flatten(ticks, true);\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: 0,\n          max: ticks.length + 1,\n          label: 'Datetime',\n          ticks: ticks,\n        };\n      }\n\n      function configureYAxisOptions(data, options) {\n        var defaults = {\n          position: 'left',\n          show: panel.yaxes[0].show,\n          index: 1,\n          logBase: panel.yaxes[0].logBase || 1,\n          min: parseNumber(panel.yaxes[0].min),\n          max: parseNumber(panel.yaxes[0].max),\n          tickDecimals: panel.yaxes[0].decimals,\n        };\n\n        options.yaxes.push(defaults);\n\n        if (_.find(data, { yaxis: 2 })) {\n          var secondY = _.clone(defaults);\n          secondY.index = 2;\n          secondY.show = panel.yaxes[1].show;\n          secondY.logBase = panel.yaxes[1].logBase || 1;\n          secondY.position = 'right';\n          secondY.min = parseNumber(panel.yaxes[1].min);\n          secondY.max = parseNumber(panel.yaxes[1].max);\n          secondY.tickDecimals = panel.yaxes[1].decimals;\n          options.yaxes.push(secondY);\n\n          applyLogScale(options.yaxes[1], data);\n          configureAxisMode(options.yaxes[1], panel.percentage && panel.stack ? 'percent' : panel.yaxes[1].format);\n        }\n        applyLogScale(options.yaxes[0], data);\n        configureAxisMode(options.yaxes[0], panel.percentage && panel.stack ? 'percent' : panel.yaxes[0].format);\n      }\n\n      function parseNumber(value: any) {\n        if (value === null || typeof value === 'undefined') {\n          return null;\n        }\n\n        return _.toNumber(value);\n      }\n\n      function applyLogScale(axis, data) {\n        if (axis.logBase === 1) {\n          return;\n        }\n\n        const minSetToZero = axis.min === 0;\n\n        if (axis.min < Number.MIN_VALUE) {\n          axis.min = null;\n        }\n        if (axis.max < Number.MIN_VALUE) {\n          axis.max = null;\n        }\n\n        var series, i;\n        var max = axis.max,\n          min = axis.min;\n\n        for (i = 0; i < data.length; i++) {\n          series = data[i];\n          if (series.yaxis === axis.index) {\n            if (!max || max < series.stats.max) {\n              max = series.stats.max;\n            }\n            if (!min || min > series.stats.logmin) {\n              min = series.stats.logmin;\n            }\n          }\n        }\n\n        axis.transform = function(v) {\n          return v < Number.MIN_VALUE ? null : Math.log(v) / Math.log(axis.logBase);\n        };\n        axis.inverseTransform = function(v) {\n          return Math.pow(axis.logBase, v);\n        };\n\n        if (!max && !min) {\n          max = axis.inverseTransform(+2);\n          min = axis.inverseTransform(-2);\n        } else if (!max) {\n          max = min * axis.inverseTransform(+4);\n        } else if (!min) {\n          min = max * axis.inverseTransform(-4);\n        }\n\n        if (axis.min) {\n          min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n        } else {\n          min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n        }\n        if (axis.max) {\n          max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n        } else {\n          max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n        }\n\n        if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n          return;\n        }\n\n        if (Number.isFinite(min) && Number.isFinite(max)) {\n          if (minSetToZero) {\n            axis.min = 0.1;\n            min = 1;\n          }\n\n          axis.ticks = generateTicksForLogScaleYAxis(min, max, axis.logBase);\n          if (minSetToZero) {\n            axis.ticks.unshift(0.1);\n          }\n          if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n            axis.max = axis.ticks[axis.ticks.length - 1];\n          }\n        } else {\n          axis.ticks = [1, 2];\n          delete axis.min;\n          delete axis.max;\n        }\n      }\n\n      function generateTicksForLogScaleYAxis(min, max, logBase) {\n        let ticks = [];\n\n        var nextTick;\n        for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n          ticks.push(nextTick);\n        }\n\n        const maxNumTicks = Math.ceil(ctrl.height / 25);\n        const numTicks = ticks.length;\n        if (numTicks > maxNumTicks) {\n          const factor = Math.ceil(numTicks / maxNumTicks) * logBase;\n          ticks = [];\n\n          for (nextTick = min; nextTick <= max * factor; nextTick *= factor) {\n            ticks.push(nextTick);\n          }\n        }\n\n        return ticks;\n      }\n\n      function configureAxisMode(axis, format) {\n        axis.tickFormatter = function(val, axis) {\n          if (!kbn.valueFormats[format]) {\n            throw new Error(`Unit '${format}' is not supported`);\n          }\n          return kbn.valueFormats[format](val, axis.tickDecimals, axis.scaledDecimals);\n        };\n      }\n\n      function time_format(ticks, min, max) {\n        if (min && max && ticks) {\n          var range = max - min;\n          var secPerTick = range / ticks / 1000;\n          var oneDay = 86400000;\n          var oneYear = 31536000000;\n\n          if (secPerTick <= 45) {\n            return '%H:%M:%S';\n          }\n          if (secPerTick <= 7200 || range <= oneDay) {\n            return '%H:%M';\n          }\n          if (secPerTick <= 80000) {\n            return '%m/%d %H:%M';\n          }\n          if (secPerTick <= 2419200 || range <= oneYear) {\n            return '%m/%d';\n          }\n          return '%Y-%m';\n        }\n\n        return '%H:%M';\n      }\n\n      elem.bind('plotselected', function(event, ranges) {\n        if (panel.xaxis.mode !== 'time') {\n          // Skip if panel in histogram or series mode\n          plot.clearSelection();\n          return;\n        }\n\n        if ((ranges.ctrlKey || ranges.metaKey) && (dashboard.meta.canEdit || dashboard.meta.canMakeEditable)) {\n          // Add annotation\n          setTimeout(() => {\n            eventManager.updateTime(ranges.xaxis);\n          }, 100);\n        } else {\n          scope.$apply(function() {\n            timeSrv.setTime({\n              from: moment.utc(ranges.xaxis.from),\n              to: moment.utc(ranges.xaxis.to),\n            });\n          });\n        }\n      });\n\n      elem.bind('plotclick', function(event, pos, item) {\n        if (panel.xaxis.mode !== 'time') {\n          // Skip if panel in histogram or series mode\n          return;\n        }\n\n        if ((pos.ctrlKey || pos.metaKey) && (dashboard.meta.canEdit || dashboard.meta.canMakeEditable)) {\n          // Skip if range selected (added in \"plotselected\" event handler)\n          let isRangeSelection = pos.x !== pos.x1;\n          if (!isRangeSelection) {\n            setTimeout(() => {\n              eventManager.updateTime({ from: pos.x, to: null });\n            }, 100);\n          }\n        }\n      });\n\n      scope.$on('$destroy', function() {\n        tooltip.destroy();\n        elem.off();\n        elem.remove();\n      });\n    },\n  };\n}\n\ncoreModule.directive('grafanaGraph', graphDirective);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport baron from 'baron';\n\nvar module = angular.module('grafana.directives');\n\nmodule.directive('graphLegend', function(popoverSrv, $timeout) {\n  return {\n    link: function(scope, elem) {\n      var firstRender = true;\n      var ctrl = scope.ctrl;\n      var panel = ctrl.panel;\n      var data;\n      var seriesList;\n      var i;\n      var legendScrollbar;\n      const legendRightDefaultWidth = 10;\n      let legendElem = elem.parent();\n\n      scope.$on('$destroy', function() {\n        destroyScrollbar();\n      });\n\n      ctrl.events.on('render-legend', () => {\n        data = ctrl.seriesList;\n        if (data) {\n          render();\n        }\n        ctrl.events.emit('legend-rendering-complete');\n      });\n\n      function getSeriesIndexForElement(el) {\n        return el.parents('[data-series-index]').data('series-index');\n      }\n\n      function openColorSelector(e) {\n        // if we clicked inside poup container ignore click\n        if ($(e.target).parents('.popover').length) {\n          return;\n        }\n\n        var el = $(e.currentTarget).find('.fa-minus');\n        var index = getSeriesIndexForElement(el);\n        var series = seriesList[index];\n\n        $timeout(function() {\n          popoverSrv.show({\n            element: el[0],\n            position: 'bottom left',\n            targetAttachment: 'top left',\n            template:\n              '<series-color-picker series=\"series\" onToggleAxis=\"toggleAxis\" onColorChange=\"colorSelected\">' +\n              '</series-color-picker>',\n            openOn: 'hover',\n            model: {\n              series: series,\n              toggleAxis: function() {\n                ctrl.toggleAxis(series);\n              },\n              colorSelected: function(color) {\n                ctrl.changeSeriesColor(series, color);\n              },\n            },\n          });\n        });\n      }\n\n      function toggleSeries(e) {\n        var el = $(e.currentTarget);\n        var index = getSeriesIndexForElement(el);\n        var seriesInfo = seriesList[index];\n        var scrollPosition = $(elem.children('tbody')).scrollTop();\n        ctrl.toggleSeries(seriesInfo, e);\n        $(elem.children('tbody')).scrollTop(scrollPosition);\n      }\n\n      function sortLegend(e) {\n        var el = $(e.currentTarget);\n        var stat = el.data('stat');\n\n        if (stat !== panel.legend.sort) {\n          panel.legend.sortDesc = null;\n        }\n\n        // if already sort ascending, disable sorting\n        if (panel.legend.sortDesc === false) {\n          panel.legend.sort = null;\n          panel.legend.sortDesc = null;\n          ctrl.render();\n          return;\n        }\n\n        panel.legend.sortDesc = !panel.legend.sortDesc;\n        panel.legend.sort = stat;\n        ctrl.render();\n      }\n\n      function getTableHeaderHtml(statName) {\n        if (!panel.legend[statName]) {\n          return '';\n        }\n        var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + statName;\n\n        if (panel.legend.sort === statName) {\n          var cssClass = panel.legend.sortDesc ? 'fa fa-caret-down' : 'fa fa-caret-up';\n          html += ' <span class=\"' + cssClass + '\"></span>';\n        }\n\n        return html + '</th>';\n      }\n\n      function render() {\n        let legendWidth = legendElem.width();\n        if (!ctrl.panel.legend.show) {\n          elem.empty();\n          firstRender = true;\n          return;\n        }\n\n        if (firstRender) {\n          elem.on('click', '.graph-legend-icon', openColorSelector);\n          elem.on('click', '.graph-legend-alias', toggleSeries);\n          elem.on('click', 'th', sortLegend);\n          firstRender = false;\n        }\n\n        seriesList = data;\n\n        elem.empty();\n\n        // Set min-width if side style and there is a value, otherwise remove the CSS property\n        // Set width so it works with IE11\n        var width: any = panel.legend.rightSide && panel.legend.sideWidth ? panel.legend.sideWidth + 'px' : '';\n        var ieWidth: any = panel.legend.rightSide && panel.legend.sideWidth ? panel.legend.sideWidth - 1 + 'px' : '';\n        legendElem.css('min-width', width);\n        legendElem.css('width', ieWidth);\n\n        elem.toggleClass('graph-legend-table', panel.legend.alignAsTable === true);\n\n        var tableHeaderElem;\n        if (panel.legend.alignAsTable) {\n          var header = '<tr>';\n          header += '<th colspan=\"2\" style=\"text-align:left\"></th>';\n          if (panel.legend.values) {\n            header += getTableHeaderHtml('min');\n            header += getTableHeaderHtml('max');\n            header += getTableHeaderHtml('avg');\n            header += getTableHeaderHtml('current');\n            header += getTableHeaderHtml('total');\n          }\n          header += '</tr>';\n          tableHeaderElem = $(header);\n        }\n\n        if (panel.legend.sort) {\n          seriesList = _.sortBy(seriesList, function(series) {\n            let sort = series.stats[panel.legend.sort];\n            if (sort === null) {\n              sort = -Infinity;\n            }\n            return sort;\n          });\n          if (panel.legend.sortDesc) {\n            seriesList = seriesList.reverse();\n          }\n        }\n\n        // render first time for getting proper legend height\n        if (!panel.legend.rightSide || (panel.legend.rightSide && legendWidth !== legendRightDefaultWidth)) {\n          renderLegendElement(tableHeaderElem);\n          elem.empty();\n        }\n\n        renderLegendElement(tableHeaderElem);\n      }\n\n      function renderSeriesLegendElements() {\n        let seriesElements = [];\n        for (i = 0; i < seriesList.length; i++) {\n          var series = seriesList[i];\n\n          if (series.hideFromLegend(panel.legend)) {\n            continue;\n          }\n\n          var html = '<div class=\"graph-legend-series';\n\n          if (series.yaxis === 2) {\n            html += ' graph-legend-series--right-y';\n          }\n          if (ctrl.hiddenSeries[series.alias]) {\n            html += ' graph-legend-series-hidden';\n          }\n          html += '\" data-series-index=\"' + i + '\">';\n          html += '<div class=\"graph-legend-icon\">';\n          html += '<i class=\"fa fa-minus pointer\" style=\"color:' + series.color + '\"></i>';\n          html += '</div>';\n\n          html +=\n            '<a class=\"graph-legend-alias pointer\" title=\"' + series.aliasEscaped + '\">' + series.aliasEscaped + '</a>';\n\n          if (panel.legend.values) {\n            var avg = series.formatValue(series.stats.avg);\n            var current = series.formatValue(series.stats.current);\n            var min = series.formatValue(series.stats.min);\n            var max = series.formatValue(series.stats.max);\n            var total = series.formatValue(series.stats.total);\n\n            if (panel.legend.min) {\n              html += '<div class=\"graph-legend-value min\">' + min + '</div>';\n            }\n            if (panel.legend.max) {\n              html += '<div class=\"graph-legend-value max\">' + max + '</div>';\n            }\n            if (panel.legend.avg) {\n              html += '<div class=\"graph-legend-value avg\">' + avg + '</div>';\n            }\n            if (panel.legend.current) {\n              html += '<div class=\"graph-legend-value current\">' + current + '</div>';\n            }\n            if (panel.legend.total) {\n              html += '<div class=\"graph-legend-value total\">' + total + '</div>';\n            }\n          }\n\n          html += '</div>';\n          seriesElements.push($(html));\n        }\n        return seriesElements;\n      }\n\n      function renderLegendElement(tableHeaderElem) {\n        let legendWidth = elem.width();\n\n        var seriesElements = renderSeriesLegendElements();\n\n        if (panel.legend.alignAsTable) {\n          var tbodyElem = $('<tbody></tbody>');\n          tbodyElem.append(tableHeaderElem);\n          tbodyElem.append(seriesElements);\n          elem.append(tbodyElem);\n          tbodyElem.wrap('<div class=\"graph-legend-scroll\"></div>');\n        } else {\n          elem.append('<div class=\"graph-legend-scroll\"></div>');\n          elem.find('.graph-legend-scroll').append(seriesElements);\n        }\n\n        if (!panel.legend.rightSide || (panel.legend.rightSide && legendWidth !== legendRightDefaultWidth)) {\n          addScrollbar();\n        } else {\n          destroyScrollbar();\n        }\n      }\n\n      function addScrollbar() {\n        const scrollRootClass = 'baron baron__root';\n        const scrollerClass = 'baron__scroller';\n        const scrollBarHTML = `\n          <div class=\"baron__track\">\n            <div class=\"baron__bar\"></div>\n          </div>\n        `;\n\n        let scrollRoot = elem;\n        let scroller = elem.find('.graph-legend-scroll');\n\n        // clear existing scroll bar track to prevent duplication\n        scrollRoot.find('.baron__track').remove();\n\n        scrollRoot.addClass(scrollRootClass);\n        $(scrollBarHTML).appendTo(scrollRoot);\n        scroller.addClass(scrollerClass);\n\n        let scrollbarParams = {\n          root: scrollRoot[0],\n          scroller: scroller[0],\n          bar: '.baron__bar',\n          track: '.baron__track',\n          barOnCls: '_scrollbar',\n          scrollingCls: '_scrolling',\n        };\n\n        if (!legendScrollbar) {\n          legendScrollbar = baron(scrollbarParams);\n        } else {\n          destroyScrollbar();\n          legendScrollbar = baron(scrollbarParams);\n        }\n\n        // #11830 - compensates for Firefox scrollbar calculation error in the baron framework\n        scroller[0].style.marginRight = '-' + (scroller[0].offsetWidth - scroller[0].clientWidth) + 'px';\n\n        legendScrollbar.scroll();\n      }\n\n      function destroyScrollbar() {\n        if (legendScrollbar) {\n          legendScrollbar.dispose();\n          legendScrollbar = undefined;\n        }\n      }\n    },\n  };\n});\n","import _ from 'lodash';\nimport angular from 'angular';\n\n/** @ngInject */\nexport function SeriesOverridesCtrl($scope, $element, popoverSrv) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n\n  $scope.addOverrideOption = function(name, propertyName, values) {\n    var option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.lenght,\n      values: values,\n      submenu: _.map(values, function(value) {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = function(item, subItem) {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = function(color) {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.openColorSelector = function(color) {\n    var fakeSeries = { color: color };\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker series=\"series\" onColorChange=\"colorSelected\" />',\n      model: {\n        autoClose: true,\n        colorSelected: $scope.colorSelected,\n        series: fakeSeries,\n      },\n      onClose: function() {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = function(option) {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = function() {\n    return _.map($scope.ctrl.seriesList, function(series) {\n      return series.alias;\n    });\n  };\n\n  $scope.updateCurrentOverrides = function() {\n    $scope.currentOverrides = [];\n    _.each($scope.overrideMenu, function(option) {\n      var value = $scope.override[option.propertyName];\n      if (_.isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('条状', 'bars', [true, false]);\n  $scope.addOverrideOption('线条', 'lines', [true, false]);\n  $scope.addOverrideOption('填充线条', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('线条宽度', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('空点模式', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('填满以下', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('楼梯线', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('虚线', 'dashes', [true, false]);\n  $scope.addOverrideOption('虚线长度', 'dashLength', [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ]);\n  $scope.addOverrideOption('虚线空间', 'spaceLength', [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ]);\n  $scope.addOverrideOption('点状', 'points', [true, false]);\n  $scope.addOverrideOption('点半径', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('栈式', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('颜色', 'color', ['change']);\n  $scope.addOverrideOption('Y-轴', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-索引', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('转换', 'transform', ['negative-Y']);\n  $scope.addOverrideOption('图例', 'legend', [true, false]);\n  $scope.addOverrideOption('提示文本框中隐藏', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n\nangular.module('grafana.controllers').controller('SeriesOverridesCtrl', SeriesOverridesCtrl);\n","import coreModule from 'app/core/core_module';\n\nexport class ThresholdFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled: boolean;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert) {\n      this.disabled = true;\n    }\n\n    var unbindDestroy = $scope.$on('$destroy', () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({\n      value: undefined,\n      colorMode: 'critical',\n      op: 'gt',\n      fill: true,\n      line: true,\n      yaxis: 'left',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index) {\n    return newColor => {\n      this.panel.thresholds[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index) {\n    return newColor => {\n      this.panel.thresholds[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\nvar template = `\n<div class=\"gf-form-group\">\n  <h5>阈值</h5>\n  <p class=\"muted\" ng-show=\"ctrl.disabled\">\n    <strong>已禁用</strong>查看阈值选项\n    查看报警选项卡更新阈值。 <br>\n    要重新启用阈值，必须从该面板中删除报警规则。\n  </p>\n  <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n    <div class=\"gf-form-inline\" ng-repeat=\"threshold in ctrl.panel.thresholds\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">T{{$index+1}}</label>\n      </div>\n\n      <div class=\"gf-form\">\n        <div class=\"gf-form-select-wrapper\">\n          <select class=\"gf-form-input\" ng-model=\"threshold.op\"\n                  ng-options=\"f for f in ['gt', 'lt']\" ng-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></select>\n        </div>\n        <input type=\"number\" ng-model=\"threshold.value\" class=\"gf-form-input width-8\"\n               ng-change=\"ctrl.render()\" placeholder=\"值\" ng-disabled=\"ctrl.disabled\">\n      </div>\n\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">颜色</label>\n        <div class=\"gf-form-select-wrapper\">\n          <select class=\"gf-form-input\" ng-model=\"threshold.colorMode\"\n                  ng-options=\"f for f in ['custom', 'critical', 'warning', 'ok']\" ng-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\">\n          </select>\n        </div>\n      </div>\n\n      <gf-form-switch class=\"gf-form\" label=\"Fill\" checked=\"threshold.fill\"\n                      on-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></gf-form-switch>\n\n      <div class=\"gf-form\" ng-if=\"threshold.fill && threshold.colorMode === 'custom'\">\n        <label class=\"gf-form-label\">填充颜色</label>\n        <span class=\"gf-form-label\">\n          <color-picker color=\"threshold.fillColor\" onChange=\"ctrl.onFillColorChange($index)\"></color-picker>\n        </span>\n      </div>\n\n      <gf-form-switch class=\"gf-form\" label=\"线段\" checked=\"threshold.line\"\n                      on-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></gf-form-switch>\n\n      <div class=\"gf-form\" ng-if=\"threshold.line && threshold.colorMode === 'custom'\">\n        <label class=\"gf-form-label\">线段颜色</label>\n        <span class=\"gf-form-label\">\n          <color-picker color=\"threshold.lineColor\" onChange=\"ctrl.onLineColorChange($index)\"></color-picker>\n        </span>\n      </div>\n\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">Y-轴</label>\n        <div class=\"gf-form-select-wrapper\">\n          <select class=\"gf-form-input\" ng-model=\"threshold.yaxis\"\n                  ng-init=\"threshold.yaxis = threshold.yaxis === 'left' || threshold.yaxis === 'right' ? threshold.yaxis : 'left'\"\n                  ng-options=\"f for f in ['left', 'right']\" ng-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\">\n          </select>\n        </div>\n      </div>\n\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">\n          <a class=\"pointer\" ng-click=\"ctrl.removeThreshold($index)\" ng-disabled=\"ctrl.disabled\">\n            <i class=\"fa fa-trash\"></i>\n          </a>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"gf-form-button-row\">\n      <button class=\"btn btn-inverse\" ng-click=\"ctrl.addThreshold()\" ng-disabled=\"ctrl.disabled\">\n        <i class=\"fa fa-plus\"></i>&nbsp;Add Threshold\n      </button>\n    </div>\n  </div>\n</div>\n`;\n\ncoreModule.directive('graphThresholdForm', function() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","var template = `\n<div class=\"graph-panel\" ng-class=\"{'graph-panel--legend-right': ctrl.panel.legend.rightSide}\">\n  <div class=\"graph-panel__chart\" grafana-graph ng-dblclick=\"ctrl.zoomOut()\">\n  </div>\n\n  <div class=\"graph-legend\">\n    <div class=\"graph-legend-content\" graph-legend></div>\n  </div>\n</div>\n`;\n\nexport default template;\n","import _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport colors from 'app/core/utils/colors';\n\nexport class DataProcessor {\n  constructor(private panel) {}\n\n  getSeriesList(options) {\n    if (!options.dataList || options.dataList.length === 0) {\n      return [];\n    }\n\n    // auto detect xaxis mode\n    var firstItem;\n    if (options.dataList && options.dataList.length > 0) {\n      firstItem = options.dataList[0];\n      let autoDetectMode = this.getAutoDetectXAxisMode(firstItem);\n      if (this.panel.xaxis.mode !== autoDetectMode) {\n        this.panel.xaxis.mode = autoDetectMode;\n        this.setPanelDefaultsForNewXAxisMode();\n      }\n    }\n\n    switch (this.panel.xaxis.mode) {\n      case 'series':\n      case 'time': {\n        return options.dataList.map((item, index) => {\n          return this.timeSeriesHandler(item, index, options);\n        });\n      }\n      case 'histogram': {\n        let histogramDataList;\n        if (this.panel.stack) {\n          histogramDataList = options.dataList;\n        } else {\n          histogramDataList = [\n            {\n              target: 'count',\n              datapoints: _.concat([], _.flatten(_.map(options.dataList, 'datapoints'))),\n            },\n          ];\n        }\n        return histogramDataList.map((item, index) => {\n          return this.timeSeriesHandler(item, index, options);\n        });\n      }\n      case 'field': {\n        return this.customHandler(firstItem);\n      }\n    }\n  }\n\n  getAutoDetectXAxisMode(firstItem) {\n    switch (firstItem.type) {\n      case 'docs':\n        return 'field';\n      case 'table':\n        return 'field';\n      default: {\n        if (this.panel.xaxis.mode === 'series') {\n          return 'series';\n        }\n        if (this.panel.xaxis.mode === 'histogram') {\n          return 'histogram';\n        }\n        return 'time';\n      }\n    }\n  }\n\n  setPanelDefaultsForNewXAxisMode() {\n    switch (this.panel.xaxis.mode) {\n      case 'time': {\n        this.panel.bars = false;\n        this.panel.lines = true;\n        this.panel.points = false;\n        this.panel.legend.show = true;\n        this.panel.tooltip.shared = true;\n        this.panel.xaxis.values = [];\n        break;\n      }\n      case 'series': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        this.panel.xaxis.values = ['total'];\n        break;\n      }\n      case 'histogram': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        break;\n      }\n    }\n  }\n\n  timeSeriesHandler(seriesData, index, options) {\n    var datapoints = seriesData.datapoints || [];\n    var alias = seriesData.target;\n\n    var colorIndex = index % colors.length;\n    var color = this.panel.aliasColors[alias] || colors[colorIndex];\n\n    var series = new TimeSeries({\n      datapoints: datapoints,\n      alias: alias,\n      color: color,\n      unit: seriesData.unit,\n    });\n\n    if (datapoints && datapoints.length > 0) {\n      var last = datapoints[datapoints.length - 1][1];\n      var from = options.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n\n    return series;\n  }\n\n  customHandler(dataItem) {\n    let nameField = this.panel.xaxis.name;\n    if (!nameField) {\n      throw {\n        message: 'No field name specified to use for x-axis, check your axes settings',\n      };\n    }\n    return [];\n  }\n\n  validateXAxisSeriesValue() {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        if (this.panel.xaxis.values.length === 0) {\n          this.panel.xaxis.values = ['total'];\n          return;\n        }\n\n        var validOptions = this.getXAxisValueOptions({});\n        var found = _.find(validOptions, { value: this.panel.xaxis.values[0] });\n        if (!found) {\n          this.panel.xaxis.values = ['total'];\n        }\n        return;\n      }\n    }\n  }\n\n  getDataFieldNames(dataList, onlyNumbers) {\n    if (dataList.length === 0) {\n      return [];\n    }\n\n    let fields = [];\n    var firstItem = dataList[0];\n    let fieldParts = [];\n\n    function getPropertiesRecursive(obj) {\n      _.forEach(obj, (value, key) => {\n        if (_.isObject(value)) {\n          fieldParts.push(key);\n          getPropertiesRecursive(value);\n        } else {\n          if (!onlyNumbers || _.isNumber(value)) {\n            let field = fieldParts.concat(key).join('.');\n            fields.push(field);\n          }\n        }\n      });\n      fieldParts.pop();\n    }\n\n    if (firstItem.type === 'docs') {\n      if (firstItem.datapoints.length === 0) {\n        return [];\n      }\n      getPropertiesRecursive(firstItem.datapoints[0]);\n    }\n\n    return fields;\n  }\n\n  getXAxisValueOptions(options) {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        return [\n          { text: 'Avg', value: 'avg' },\n          { text: 'Min', value: 'min' },\n          { text: 'Max', value: 'max' },\n          { text: 'Total', value: 'total' },\n          { text: 'Count', value: 'count' },\n        ];\n      }\n    }\n\n    return [];\n  }\n\n  pluckDeep(obj: any, property: string) {\n    let propertyParts = property.split('.');\n    let value = obj;\n    for (let i = 0; i < propertyParts.length; ++i) {\n      if (value[propertyParts[i]]) {\n        value = value[propertyParts[i]];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n}\n","import './graph';\nimport './legend';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\n\nimport template from './template';\nimport _ from 'lodash';\nimport config from 'app/core/config';\nimport { MetricsPanelCtrl, alertTab } from 'app/plugins/sdk';\nimport { DataProcessor } from './data_processor';\nimport { axesEditorComponent } from './axes_editor';\n\nclass GraphCtrl extends MetricsPanelCtrl {\n  static template = template;\n\n  hiddenSeries: any = {};\n  seriesList: any = [];\n  dataList: any = [];\n  annotations: any = [];\n  alertState: any;\n\n  annotationsPromise: any;\n  dataWarning: any;\n  colors: any = [];\n  subTabIndex: number;\n  processor: DataProcessor;\n\n  panelDefaults = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null,\n    },\n    yaxis: {\n      align: false,\n      alignLevel: null,\n    },\n    // show/hide lines\n    lines: true,\n    // fill factor\n    fill: 1,\n    // line width in pixels\n    linewidth: 1,\n    // show/hide dashed line\n    dashes: false,\n    // length of a dash\n    dashLength: 10,\n    // length of space between two dashes\n    spaceLength: 10,\n    // show hide points\n    points: false,\n    // point radius in pixels\n    pointradius: 5,\n    // show hide bars\n    bars: false,\n    // enable/disable stacking\n    stack: false,\n    // stack percentage mode\n    percentage: false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false,\n    },\n    // how null points should be handled\n    nullPointMode: 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip: {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, private annotationsSrv) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n    _.defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    _.defaults(this.panel.legend, this.panelDefaults.legend);\n    _.defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n\n    this.processor = new DataProcessor(this.panel);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('坐标轴', axesEditorComponent, 2);\n    this.addEditorTab('图例', 'public/app/plugins/panel/graph/tab_legend.html', 3);\n    this.addEditorTab('展示', 'public/app/plugins/panel/graph/tab_display.html', 4);\n\n    if (config.alertingEnabled) {\n      this.addEditorTab('报警', alertTab, 5);\n    }\n\n    this.subTabIndex = 0;\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: '导出 CSV', click: 'ctrl.exportCsv()' });\n    actions.push({ text: '启用图例', click: 'ctrl.toggleLegend()' });\n  }\n\n  issueQueries(datasource) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n    return super.issueQueries(datasource);\n  }\n\n  zoomOut(evt) {\n    this.publishAppEvent('zoom-out', 2);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.annotations = [];\n    this.render([]);\n  }\n\n  onDataReceived(dataList) {\n    this.dataList = dataList;\n    this.seriesList = this.processor.getSeriesList({\n      dataList: dataList,\n      range: this.range,\n    });\n\n    this.dataWarning = null;\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      this.dataWarning = {\n        title: '暂无数据点',\n        tip: '数据查询中无数据点返回',\n      };\n    } else {\n      for (let series of this.seriesList) {\n        if (series.isOutsideRange) {\n          this.dataWarning = {\n            title: '数据点不在时间范围内',\n            tip: '由时区失配或时间过滤设置不当引起',\n          };\n          break;\n        }\n      }\n    }\n\n    this.annotationsPromise.then(\n      result => {\n        this.loading = false;\n        this.alertState = result.alertState;\n        this.annotations = result.annotations;\n        this.render(this.seriesList);\n      },\n      () => {\n        this.loading = false;\n        this.render(this.seriesList);\n      }\n    );\n  }\n\n  onRender() {\n    if (!this.seriesList) {\n      return;\n    }\n\n    for (let series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis - 1].format = series.unit;\n      }\n    }\n  }\n\n  changeSeriesColor(series, color) {\n    series.setColor(color);\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  toggleSeries(serie, event) {\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (this.hiddenSeries[serie.alias]) {\n        delete this.hiddenSeries[serie.alias];\n      } else {\n        this.hiddenSeries[serie.alias] = true;\n      }\n    } else {\n      this.toggleSeriesExclusiveMode(serie);\n    }\n    this.render();\n  }\n\n  toggleSeriesExclusiveMode(serie) {\n    var hidden = this.hiddenSeries;\n\n    if (hidden[serie.alias]) {\n      delete hidden[serie.alias];\n    }\n\n    // check if every other series is hidden\n    var alreadyExclusive = _.every(this.seriesList, value => {\n      if (value.alias === serie.alias) {\n        return true;\n      }\n\n      return hidden[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      _.each(this.seriesList, value => {\n        delete this.hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      _.each(this.seriesList, value => {\n        if (value.alias === serie.alias) {\n          return;\n        }\n\n        this.hiddenSeries[value.alias] = true;\n      });\n    }\n  }\n\n  toggleAxis(info) {\n    var override = _.find(this.panel.seriesOverrides, { alias: info.alias });\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    info.yaxis = override.yaxis = info.yaxis === 2 ? 1 : 2;\n    this.render();\n  }\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.refresh();\n  }\n\n  legendValuesOptionChanged() {\n    var legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  exportCsv() {\n    var scope = this.$scope.$new(true);\n    scope.seriesList = this.seriesList;\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal data=\"seriesList\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n}\n\nexport { GraphCtrl, GraphCtrl as PanelCtrl };\n","import kbn from 'app/core/utils/kbn';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  unitFormats: any;\n  logScales: any;\n  xAxisModes: any;\n  xAxisStatOptions: any;\n  xNameSegment: any;\n\n  /** @ngInject **/\n  constructor(private $scope, private $q) {\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.xAxisModes = {\n      Time: 'time',\n      Series: 'series',\n      Histogram: 'histogram',\n      // 'Data field': 'field',\n    };\n\n    this.xAxisStatOptions = [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Count', value: 'count' },\n      { text: 'Current', value: 'current' },\n    ];\n\n    if (this.panel.xaxis.mode === 'custom') {\n      if (!this.panel.xaxis.name) {\n        this.panel.xaxis.name = 'specify field';\n      }\n    }\n  }\n\n  setUnitFormat(axis, subItem) {\n    axis.format = subItem.value;\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  xAxisModeChanged() {\n    this.panelCtrl.processor.setPanelDefaultsForNewXAxisMode();\n    this.panelCtrl.onDataReceived(this.panelCtrl.dataList);\n  }\n\n  xAxisValueChanged() {\n    this.panelCtrl.onDataReceived(this.panelCtrl.dataList);\n  }\n\n  getDataFieldNames(onlyNumbers) {\n    var props = this.panelCtrl.processor.getDataFieldNames(this.panelCtrl.dataList, onlyNumbers);\n    var items = props.map(prop => {\n      return { text: prop, value: prop };\n    });\n\n    return this.$q.when(items);\n  }\n}\n\n/** @ngInject **/\nexport function axesEditorComponent() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/graph/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import _ from 'lodash';\nimport { PanelCtrl } from 'app/plugins/sdk';\nimport impressionSrv from 'app/core/services/impression_srv';\n\nclass DashListCtrl extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  groups: any[];\n  modes: any[];\n\n  panelDefaults = {\n    query: '',\n    limit: 10,\n    tags: [],\n    recent: false,\n    search: false,\n    starred: true,\n    headings: true,\n    folderId: null,\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, private backendSrv, private dashboardSrv) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    if (this.panel.tag) {\n      this.panel.tags = [this.panel.tag];\n      delete this.panel.tag;\n    }\n\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.groups = [\n      { list: [], show: false, header: '收藏的仪表盘' },\n      { list: [], show: false, header: '最近查看的仪表盘' },\n      { list: [], show: false, header: '搜索' },\n    ];\n\n    // update capability\n    if (this.panel.mode) {\n      if (this.panel.mode === 'starred') {\n        this.panel.starred = true;\n        this.panel.headings = false;\n      }\n      if (this.panel.mode === 'recently viewed') {\n        this.panel.recent = true;\n        this.panel.starred = false;\n        this.panel.headings = false;\n      }\n      if (this.panel.mode === 'search') {\n        this.panel.search = true;\n        this.panel.starred = false;\n        this.panel.headings = false;\n      }\n      delete this.panel.mode;\n    }\n  }\n\n  onInitEditMode() {\n    this.editorTabIndex = 1;\n    this.modes = ['starred', 'search', 'recently viewed'];\n    this.addEditorTab('选项', 'public/app/plugins/panel/dashlist/editor.html');\n  }\n\n  onRefresh() {\n    var promises = [];\n\n    promises.push(this.getRecentDashboards());\n    promises.push(this.getStarred());\n    promises.push(this.getSearch());\n\n    return Promise.all(promises).then(this.renderingCompleted.bind(this));\n  }\n\n  getSearch() {\n    this.groups[2].show = this.panel.search;\n    if (!this.panel.search) {\n      return Promise.resolve();\n    }\n\n    var params = {\n      limit: this.panel.limit,\n      query: this.panel.query,\n      tag: this.panel.tags,\n      folderIds: this.panel.folderId,\n      type: 'dash-db',\n    };\n\n    return this.backendSrv.search(params).then(result => {\n      this.groups[2].list = result;\n    });\n  }\n\n  getStarred() {\n    this.groups[0].show = this.panel.starred;\n    if (!this.panel.starred) {\n      return Promise.resolve();\n    }\n\n    var params = { limit: this.panel.limit, starred: 'true' };\n    return this.backendSrv.search(params).then(result => {\n      this.groups[0].list = result;\n    });\n  }\n\n  starDashboard(dash, evt) {\n    this.dashboardSrv.starDashboard(dash.id, dash.isStarred).then(newState => {\n      dash.isStarred = newState;\n    });\n\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  getRecentDashboards() {\n    this.groups[1].show = this.panel.recent;\n    if (!this.panel.recent) {\n      return Promise.resolve();\n    }\n\n    var dashIds = _.take(impressionSrv.getDashboardOpened(), this.panel.limit);\n    return this.backendSrv.search({ dashboardIds: dashIds, limit: this.panel.limit }).then(result => {\n      this.groups[1].list = dashIds\n        .map(orderId => {\n          return _.find(result, dashboard => {\n            return dashboard.id === orderId;\n          });\n        })\n        .filter(el => {\n          return el !== undefined;\n        });\n    });\n  }\n\n  onFolderChange(folder: any) {\n    this.panel.folderId = folder.id;\n    this.refresh();\n  }\n}\n\nexport { DashListCtrl, DashListCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport { PanelCtrl } from '../../../features/panel/panel_ctrl';\n\nclass PluginListCtrl extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  pluginList: any[];\n  viewModel: any;\n\n  // Set and populate defaults\n  panelDefaults = {};\n\n  /** @ngInject */\n  constructor($scope, $injector, private backendSrv) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.pluginList = [];\n    this.viewModel = [\n      { header: '已安装应用', list: [], type: 'app' },\n      { header: '已安装插件', list: [], type: 'panel' },\n      { header: '已安装数据源', list: [], type: 'datasource' },\n    ];\n\n    this.update();\n  }\n\n  onInitEditMode() {\n    this.editorTabIndex = 1;\n    this.addEditorTab('Options', 'public/app/plugins/panel/pluginlist/editor.html');\n  }\n\n  gotoPlugin(plugin, evt) {\n    if (evt) {\n      evt.stopPropagation();\n    }\n    this.$location.url(`plugins/${plugin.id}/edit`);\n  }\n\n  updateAvailable(plugin, $event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    var modalScope = this.$scope.$new(true);\n    modalScope.plugin = plugin;\n\n    this.publishAppEvent('show-modal', {\n      src: 'public/app/features/plugins/partials/update_instructions.html',\n      scope: modalScope,\n    });\n  }\n\n  update() {\n    this.backendSrv.get('api/plugins', { embedded: 0, core: 0 }).then(plugins => {\n      this.pluginList = plugins;\n      this.viewModel[0].list = _.filter(plugins, { type: 'app' });\n      this.viewModel[1].list = _.filter(plugins, { type: 'panel' });\n      this.viewModel[2].list = _.filter(plugins, { type: 'datasource' });\n\n      for (let plugin of this.pluginList) {\n        if (plugin.hasUpdate) {\n          plugin.state = 'has-update';\n        } else if (!plugin.enabled) {\n          plugin.state = 'not-enabled';\n        }\n      }\n    });\n  }\n}\n\nexport { PluginListCtrl, PluginListCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport moment from 'moment';\nimport alertDef from '../../../features/alerting/alert_def';\nimport { PanelCtrl } from 'app/plugins/sdk';\n\nimport * as dateMath from 'app/core/utils/datemath';\n\nclass AlertListPanel extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  showOptions = [{ text: '当前状态', value: 'current' }, { text: '近期状态改变', value: 'changes' }];\n\n  sortOrderOptions = [\n    { text: '字母序 (升序)', value: 1 },\n    { text: '字母序 (降序)', value: 2 },\n    { text: '重要因子', value: 3 },\n  ];\n\n  stateFilter: any = {};\n  currentAlerts: any = [];\n  alertHistory: any = [];\n  noAlertsMessage: string;\n\n  // Set and populate defaults\n  panelDefaults = {\n    show: 'current',\n    limit: 10,\n    stateFilter: [],\n    onlyAlertsOnDashboard: false,\n    sortOrder: 1,\n    dashboardFilter: '',\n    nameFilter: '',\n    folderId: null,\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, private backendSrv) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n\n    for (let key in this.panel.stateFilter) {\n      this.stateFilter[this.panel.stateFilter[key]] = true;\n    }\n  }\n\n  sortResult(alerts) {\n    if (this.panel.sortOrder === 3) {\n      return _.sortBy(alerts, a => {\n        return alertDef.alertStateSortScore[a.state];\n      });\n    }\n\n    var result = _.sortBy(alerts, a => {\n      return a.name.toLowerCase();\n    });\n    if (this.panel.sortOrder === 2) {\n      result.reverse();\n    }\n\n    return result;\n  }\n\n  updateStateFilter() {\n    var result = [];\n\n    for (let key in this.stateFilter) {\n      if (this.stateFilter[key]) {\n        result.push(key);\n      }\n    }\n\n    this.panel.stateFilter = result;\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    let getAlertsPromise;\n\n    if (this.panel.show === 'current') {\n      getAlertsPromise = this.getCurrentAlertState();\n    }\n\n    if (this.panel.show === 'changes') {\n      getAlertsPromise = this.getStateChanges();\n    }\n\n    getAlertsPromise.then(() => {\n      this.renderingCompleted();\n    });\n  }\n\n  onFolderChange(folder: any) {\n    this.panel.folderId = folder.id;\n    this.refresh();\n  }\n\n  getStateChanges() {\n    var params: any = {\n      limit: this.panel.limit,\n      type: 'alert',\n      newState: this.panel.stateFilter,\n    };\n\n    if (this.panel.onlyAlertsOnDashboard) {\n      params.dashboardId = this.dashboard.id;\n    }\n\n    params.from = dateMath.parse(this.dashboard.time.from).unix() * 1000;\n    params.to = dateMath.parse(this.dashboard.time.to).unix() * 1000;\n\n    return this.backendSrv.get(`/api/annotations`, params).then(res => {\n      this.alertHistory = _.map(res, al => {\n        al.time = this.dashboard.formatDate(al.time, 'MMM D, YYYY HH:mm:ss');\n        al.stateModel = alertDef.getStateDisplayModel(al.newState);\n        al.info = alertDef.getAlertAnnotationInfo(al);\n        return al;\n      });\n\n      this.noAlertsMessage = this.alertHistory.length === 0 ? '近期暂无报警状态变更' : '';\n\n      return this.alertHistory;\n    });\n  }\n\n  getCurrentAlertState() {\n    var params: any = {\n      state: this.panel.stateFilter,\n    };\n\n    if (this.panel.nameFilter) {\n      params.query = this.panel.nameFilter;\n    }\n\n    if (this.panel.folderId >= 0) {\n      params.folderId = this.panel.folderId;\n    }\n\n    if (this.panel.dashboardFilter) {\n      params.dashboardQuery = this.panel.dashboardFilter;\n    }\n\n    if (this.panel.onlyAlertsOnDashboard) {\n      params.dashboardId = this.dashboard.id;\n    }\n\n    if (this.panel.dashboardTags) {\n      params.dashboardTag = this.panel.dashboardTags;\n    }\n\n    return this.backendSrv.get(`/api/alerts`, params).then(res => {\n      this.currentAlerts = this.sortResult(\n        _.map(res, al => {\n          al.stateModel = alertDef.getStateDisplayModel(al.state);\n          al.newStateDateAgo = moment(al.newStateDate)\n            .locale('en')\n            .fromNow(true);\n          return al;\n        })\n      );\n      if (this.currentAlerts.length > this.panel.limit) {\n        this.currentAlerts = this.currentAlerts.slice(0, this.panel.limit);\n      }\n      this.noAlertsMessage = this.currentAlerts.length === 0 ? '没有警报' : '';\n\n      return this.currentAlerts;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('选项', 'public/app/plugins/panel/alertlist/editor.html');\n  }\n}\n\nexport { AlertListPanel, AlertListPanel as PanelCtrl };\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as d3 from 'd3';\nimport { contextSrv } from 'app/core/core';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { getColorScale, getOpacityScale } from './color_scale';\n\nlet module = angular.module('grafana.directives');\n\nconst LEGEND_HEIGHT_PX = 6;\nconst LEGEND_WIDTH_PX = 100;\nconst LEGEND_TICK_SIZE = 0;\nconst LEGEND_VALUE_MARGIN = 0;\n\n/**\n * Color legend for heatmap editor.\n */\nmodule.directive('colorLegend', function() {\n  return {\n    restrict: 'E',\n    template: '<div class=\"heatmap-color-legend\"><svg width=\"16.5rem\" height=\"24px\"></svg></div>',\n    link: function(scope, elem, attrs) {\n      let ctrl = scope.ctrl;\n      let panel = scope.ctrl.panel;\n\n      render();\n\n      ctrl.events.on('render', function() {\n        render();\n      });\n\n      function render() {\n        let legendElem = $(elem).find('svg');\n        let legendWidth = Math.floor(legendElem.outerWidth());\n\n        if (panel.color.mode === 'spectrum') {\n          let colorScheme = _.find(ctrl.colorSchemes, {\n            value: panel.color.colorScheme,\n          });\n          let colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, legendWidth);\n          drawSimpleColorLegend(elem, colorScale);\n        } else if (panel.color.mode === 'opacity') {\n          let colorOptions = panel.color;\n          drawSimpleOpacityLegend(elem, colorOptions);\n        }\n      }\n    },\n  };\n});\n\n/**\n * Heatmap legend with scale values.\n */\nmodule.directive('heatmapLegend', function() {\n  return {\n    restrict: 'E',\n    template: `<div class=\"heatmap-color-legend\"><svg width=\"${LEGEND_WIDTH_PX}px\" height=\"${LEGEND_HEIGHT_PX}px\"></svg></div>`,\n    link: function(scope, elem, attrs) {\n      let ctrl = scope.ctrl;\n      let panel = scope.ctrl.panel;\n\n      render();\n      ctrl.events.on('render', function() {\n        render();\n      });\n\n      function render() {\n        clearLegend(elem);\n        if (!_.isEmpty(ctrl.data) && !_.isEmpty(ctrl.data.cards)) {\n          let rangeFrom = 0;\n          let rangeTo = ctrl.data.cardStats.max;\n          let maxValue = panel.color.max || rangeTo;\n          let minValue = panel.color.min || 0;\n\n          if (panel.color.mode === 'spectrum') {\n            let colorScheme = _.find(ctrl.colorSchemes, {\n              value: panel.color.colorScheme,\n            });\n            drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue);\n          } else if (panel.color.mode === 'opacity') {\n            let colorOptions = panel.color;\n            drawOpacityLegend(elem, colorOptions, rangeFrom, rangeTo, maxValue, minValue);\n          }\n        }\n      }\n    },\n  };\n});\n\nfunction drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue) {\n  let legendElem = $(elem).find('svg');\n  let legend = d3.select(legendElem.get(0));\n  clearLegend(elem);\n\n  let legendWidth = Math.floor(legendElem.outerWidth()) - 30;\n  let legendHeight = legendElem.attr('height');\n\n  let rangeStep = 1;\n  if (rangeTo - rangeFrom > legendWidth) {\n    rangeStep = Math.floor((rangeTo - rangeFrom) / legendWidth);\n  }\n  let widthFactor = legendWidth / (rangeTo - rangeFrom);\n  let valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n  let colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n  legend\n    .selectAll('.heatmap-color-legend-rect')\n    .data(valuesRange)\n    .enter()\n    .append('rect')\n    .attr('x', d => d * widthFactor)\n    .attr('y', 0)\n    .attr('width', rangeStep * widthFactor + 1) // Overlap rectangles to prevent gaps\n    .attr('height', legendHeight)\n    .attr('stroke-width', 0)\n    .attr('fill', d => colorScale(d));\n\n  drawLegendValues(elem, colorScale, rangeFrom, rangeTo, maxValue, minValue, legendWidth);\n}\n\nfunction drawOpacityLegend(elem, options, rangeFrom, rangeTo, maxValue, minValue) {\n  let legendElem = $(elem).find('svg');\n  let legend = d3.select(legendElem.get(0));\n  clearLegend(elem);\n\n  let legendWidth = Math.floor(legendElem.outerWidth()) - 30;\n  let legendHeight = legendElem.attr('height');\n\n  let rangeStep = 1;\n  if (rangeTo - rangeFrom > legendWidth) {\n    rangeStep = Math.floor((rangeTo - rangeFrom) / legendWidth);\n  }\n  let widthFactor = legendWidth / (rangeTo - rangeFrom);\n  let valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n  let opacityScale = getOpacityScale(options, maxValue, minValue);\n  legend\n    .selectAll('.heatmap-opacity-legend-rect')\n    .data(valuesRange)\n    .enter()\n    .append('rect')\n    .attr('x', d => d * widthFactor)\n    .attr('y', 0)\n    .attr('width', rangeStep * widthFactor)\n    .attr('height', legendHeight)\n    .attr('stroke-width', 0)\n    .attr('fill', options.cardColor)\n    .style('opacity', d => opacityScale(d));\n\n  drawLegendValues(elem, opacityScale, rangeFrom, rangeTo, maxValue, minValue, legendWidth);\n}\n\nfunction drawLegendValues(elem, colorScale, rangeFrom, rangeTo, maxValue, minValue, legendWidth) {\n  let legendElem = $(elem).find('svg');\n  let legend = d3.select(legendElem.get(0));\n\n  if (legendWidth <= 0 || legendElem.get(0).childNodes.length === 0) {\n    return;\n  }\n\n  let legendValueScale = d3\n    .scaleLinear()\n    .domain([0, rangeTo])\n    .range([0, legendWidth]);\n\n  let ticks = buildLegendTicks(0, rangeTo, maxValue, minValue);\n  let xAxis = d3\n    .axisBottom(legendValueScale)\n    .tickValues(ticks)\n    .tickSize(LEGEND_TICK_SIZE);\n\n  let colorRect = legendElem.find(':first-child');\n  let posY = getSvgElemHeight(legendElem) + LEGEND_VALUE_MARGIN;\n  let posX = getSvgElemX(colorRect);\n\n  d3\n    .select(legendElem.get(0))\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + posX + ',' + posY + ')')\n    .call(xAxis);\n\n  legend\n    .select('.axis')\n    .select('.domain')\n    .remove();\n}\n\nfunction drawSimpleColorLegend(elem, colorScale) {\n  let legendElem = $(elem).find('svg');\n  clearLegend(elem);\n\n  let legendWidth = Math.floor(legendElem.outerWidth());\n  let legendHeight = legendElem.attr('height');\n\n  if (legendWidth) {\n    let valuesNumber = Math.floor(legendWidth / 2);\n    let rangeStep = Math.floor(legendWidth / valuesNumber);\n    let valuesRange = d3.range(0, legendWidth, rangeStep);\n\n    let legend = d3.select(legendElem.get(0));\n    var legendRects = legend.selectAll('.heatmap-color-legend-rect').data(valuesRange);\n\n    legendRects\n      .enter()\n      .append('rect')\n      .attr('x', d => d)\n      .attr('y', 0)\n      .attr('width', rangeStep + 1) // Overlap rectangles to prevent gaps\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr('fill', d => colorScale(d));\n  }\n}\n\nfunction drawSimpleOpacityLegend(elem, options) {\n  let legendElem = $(elem).find('svg');\n  clearLegend(elem);\n\n  let legend = d3.select(legendElem.get(0));\n  let legendWidth = Math.floor(legendElem.outerWidth());\n  let legendHeight = legendElem.attr('height');\n\n  if (legendWidth) {\n    let legendOpacityScale;\n    if (options.colorScale === 'linear') {\n      legendOpacityScale = d3\n        .scaleLinear()\n        .domain([0, legendWidth])\n        .range([0, 1]);\n    } else if (options.colorScale === 'sqrt') {\n      legendOpacityScale = d3\n        .scalePow()\n        .exponent(options.exponent)\n        .domain([0, legendWidth])\n        .range([0, 1]);\n    }\n\n    let rangeStep = 10;\n    let valuesRange = d3.range(0, legendWidth, rangeStep);\n    var legendRects = legend.selectAll('.heatmap-opacity-legend-rect').data(valuesRange);\n\n    legendRects\n      .enter()\n      .append('rect')\n      .attr('x', d => d)\n      .attr('y', 0)\n      .attr('width', rangeStep)\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr('fill', options.cardColor)\n      .style('opacity', d => legendOpacityScale(d));\n  }\n}\n\nfunction clearLegend(elem) {\n  let legendElem = $(elem).find('svg');\n  legendElem.empty();\n}\n\nfunction getSvgElemX(elem) {\n  let svgElem = elem.get(0);\n  if (svgElem && svgElem.x && svgElem.x.baseVal) {\n    return svgElem.x.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction getSvgElemHeight(elem) {\n  let svgElem = elem.get(0);\n  if (svgElem && svgElem.height && svgElem.height.baseVal) {\n    return svgElem.height.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction buildLegendTicks(rangeFrom, rangeTo, maxValue, minValue) {\n  let range = rangeTo - rangeFrom;\n  let tickStepSize = tickStep(rangeFrom, rangeTo, 3);\n  let ticksNum = Math.round(range / tickStepSize);\n  let ticks = [];\n\n  for (let i = 0; i < ticksNum; i++) {\n    let current = tickStepSize * i;\n    // Add user-defined min and max if it had been set\n    if (isValueCloseTo(minValue, current, tickStepSize)) {\n      ticks.push(minValue);\n      continue;\n    } else if (minValue < current) {\n      ticks.push(minValue);\n    }\n    if (isValueCloseTo(maxValue, current, tickStepSize)) {\n      ticks.push(maxValue);\n      continue;\n    } else if (maxValue < current) {\n      ticks.push(maxValue);\n    }\n    ticks.push(tickStepSize * i);\n  }\n  if (!isValueCloseTo(maxValue, rangeTo, tickStepSize)) {\n    ticks.push(maxValue);\n  }\n  ticks.push(rangeTo);\n  ticks = _.sortBy(_.uniq(ticks));\n  return ticks;\n}\n\nfunction isValueCloseTo(val, valueTo, step) {\n  let diff = Math.abs(val - valueTo);\n  return diff < step * 0.3;\n}\n","import * as d3 from 'd3';\nimport * as d3ScaleChromatic from 'd3-scale-chromatic';\n\nexport function getColorScale(colorScheme: any, lightTheme: boolean, maxValue: number, minValue = 0): (d: any) => any {\n  let colorInterpolator = d3ScaleChromatic[colorScheme.value];\n  let colorScaleInverted = colorScheme.invert === 'always' || colorScheme.invert === (lightTheme ? 'light' : 'dark');\n\n  let start = colorScaleInverted ? maxValue : minValue;\n  let end = colorScaleInverted ? minValue : maxValue;\n\n  return d3.scaleSequential(colorInterpolator).domain([start, end]);\n}\n\nexport function getOpacityScale(options, maxValue, minValue = 0) {\n  let legendOpacityScale;\n  if (options.colorScale === 'linear') {\n    legendOpacityScale = d3\n      .scaleLinear()\n      .domain([minValue, maxValue])\n      .range([0, 1]);\n  } else if (options.colorScale === 'sqrt') {\n    legendOpacityScale = d3\n      .scalePow()\n      .exponent(options.exponent)\n      .domain([minValue, maxValue])\n      .range([0, 1]);\n  }\n  return legendOpacityScale;\n}\n","export class HeatmapDisplayEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function heatmapDisplayEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/display_editor.html',\n    controller: HeatmapDisplayEditorCtrl,\n  };\n}\n","import _ from 'lodash';\n\nlet VALUE_INDEX = 0;\nlet TIME_INDEX = 1;\n\ninterface XBucket {\n  x: number;\n  buckets: any;\n}\n\ninterface YBucket {\n  y: number;\n  values: number[];\n}\n\n/**\n * Convert histogram represented by the list of series to heatmap object.\n * @param seriesList List of time series\n */\nfunction histogramToHeatmap(seriesList) {\n  let heatmap = {};\n\n  for (let i = 0; i < seriesList.length; i++) {\n    let series = seriesList[i];\n    let bound = i;\n    if (isNaN(bound)) {\n      return heatmap;\n    }\n\n    for (let point of series.datapoints) {\n      let count = point[VALUE_INDEX];\n      let time = point[TIME_INDEX];\n\n      if (!_.isNumber(count)) {\n        continue;\n      }\n\n      let bucket = heatmap[time];\n      if (!bucket) {\n        bucket = heatmap[time] = { x: time, buckets: {} };\n      }\n\n      bucket.buckets[bound] = {\n        y: bound,\n        count: count,\n        bounds: {\n          top: null,\n          bottom: bound,\n        },\n        values: [],\n        points: [],\n      };\n    }\n  }\n\n  return heatmap;\n}\n\n/**\n * Sort series representing histogram by label value.\n */\nfunction sortSeriesByLabel(s1, s2) {\n  let label1, label2;\n\n  try {\n    // fail if not integer. might happen with bad queries\n    label1 = parseHistogramLabel(s1.label);\n    label2 = parseHistogramLabel(s2.label);\n  } catch (err) {\n    console.log(err.message || err);\n    return 0;\n  }\n\n  if (label1 > label2) {\n    return 1;\n  }\n\n  if (label1 < label2) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction parseHistogramLabel(label: string): number {\n  if (label === '+Inf' || label === 'inf') {\n    return +Infinity;\n  }\n  const value = Number(label);\n  if (isNaN(value)) {\n    throw new Error(`Error parsing histogram label: ${label} is not a number`);\n  }\n  return value;\n}\n\n/**\n * Convert buckets into linear array of \"cards\" - objects, represented heatmap elements.\n * @param  {Object} buckets\n * @return {Array}          Array of \"card\" objects\n */\nfunction convertToCards(buckets) {\n  let min = 0,\n    max = 0;\n  let cards = [];\n  _.forEach(buckets, xBucket => {\n    _.forEach(xBucket.buckets, yBucket => {\n      let card = {\n        x: xBucket.x,\n        y: yBucket.y,\n        yBounds: yBucket.bounds,\n        values: yBucket.values,\n        count: yBucket.count,\n      };\n      cards.push(card);\n\n      if (cards.length === 1) {\n        min = yBucket.count;\n        max = yBucket.count;\n      }\n\n      min = yBucket.count < min ? yBucket.count : min;\n      max = yBucket.count > max ? yBucket.count : max;\n    });\n  });\n\n  let cardStats = { min, max };\n  return { cards, cardStats };\n}\n\n/**\n * Special method for log scales. When series converted into buckets with log scale,\n * for simplification, 0 values are converted into 0, not into -Infinity. On the other hand, we mean\n * that all values less than series minimum, is 0 values, and we create special \"minimum\" bucket for\n * that values (actually, there're no values less than minimum, so this bucket is empty).\n *  8-16|    | ** |    |  * |  **|\n *   4-8|  * |*  *|*   |** *| *  |\n *   2-4| * *|    | ***|    |*   |\n *   1-2|*   |    |    |    |    | This bucket contains minimum series value\n * 0.5-1|____|____|____|____|____| This bucket should be displayed as 0 on graph\n *     0|____|____|____|____|____| This bucket is for 0 values (should actually be -Infinity)\n * So we should merge two bottom buckets into one (0-value bucket).\n *\n * @param  {Object} buckets  Heatmap buckets\n * @param  {Number} minValue Minimum series value\n * @return {Object}          Transformed buckets\n */\nfunction mergeZeroBuckets(buckets, minValue) {\n  _.forEach(buckets, xBucket => {\n    let yBuckets = xBucket.buckets;\n\n    let emptyBucket = {\n      bounds: { bottom: 0, top: 0 },\n      values: [],\n      points: [],\n      count: 0,\n    };\n\n    let nullBucket = yBuckets[0] || emptyBucket;\n    let minBucket = yBuckets[minValue] || emptyBucket;\n\n    let newBucket = {\n      y: 0,\n      bounds: { bottom: minValue, top: minBucket.bounds.top || minValue },\n      values: [],\n      points: [],\n      count: 0,\n    };\n\n    newBucket.points = nullBucket.points.concat(minBucket.points);\n    newBucket.values = nullBucket.values.concat(minBucket.values);\n    newBucket.count = newBucket.values.length;\n\n    if (newBucket.count === 0) {\n      return;\n    }\n\n    delete yBuckets[minValue];\n    yBuckets[0] = newBucket;\n  });\n\n  return buckets;\n}\n\n/**\n * Convert set of time series into heatmap buckets\n * @return {Object}    Heatmap object:\n * {\n *   xBucketBound_1: {\n *     x: xBucketBound_1,\n *     buckets: {\n *       yBucketBound_1: {\n *         y: yBucketBound_1,\n *         bounds: {bottom, top}\n *         values: [val_1, val_2, ..., val_K],\n *         points: [[val_Y, val_X, series_name], ..., [...]],\n *         seriesStat: {seriesName_1: val_1, seriesName_2: val_2}\n *       },\n *       ...\n *       yBucketBound_M: {}\n *     },\n *     values: [val_1, val_2, ..., val_K],\n *     points: [\n *       [val_Y, val_X, series_name], (point_1)\n *       ...\n *       [...] (point_K)\n *     ]\n *   },\n *   xBucketBound_2: {},\n *   ...\n *   xBucketBound_N: {}\n * }\n */\nfunction convertToHeatMap(seriesList, yBucketSize, xBucketSize, logBase = 1) {\n  let heatmap = {};\n\n  for (let series of seriesList) {\n    let datapoints = series.datapoints;\n    let seriesName = series.label;\n\n    // Slice series into X axis buckets\n    // |    | ** |    |  * |  **|\n    // |  * |*  *|*   |** *| *  |\n    // |** *|    | ***|    |*   |\n    // |____|____|____|____|____|_\n    //\n    _.forEach(datapoints, point => {\n      let bucketBound = getBucketBound(point[TIME_INDEX], xBucketSize);\n      pushToXBuckets(heatmap, point, bucketBound, seriesName);\n    });\n  }\n\n  // Slice X axis buckets into Y (value) buckets\n  // |  **|     |2|,\n  // | *  | --\\ |1|,\n  // |*   | --/ |1|,\n  // |____|     |0|\n  //\n  _.forEach(heatmap, xBucket => {\n    if (logBase !== 1) {\n      xBucket.buckets = convertToLogScaleValueBuckets(xBucket, yBucketSize, logBase);\n    } else {\n      xBucket.buckets = convertToValueBuckets(xBucket, yBucketSize);\n    }\n  });\n\n  return heatmap;\n}\n\nfunction pushToXBuckets(buckets, point, bucketNum, seriesName) {\n  let value = point[VALUE_INDEX];\n  if (value === null || value === undefined || isNaN(value)) {\n    return;\n  }\n\n  // Add series name to point for future identification\n  let point_ext = _.concat(point, seriesName);\n\n  if (buckets[bucketNum] && buckets[bucketNum].values) {\n    buckets[bucketNum].values.push(value);\n    buckets[bucketNum].points.push(point_ext);\n  } else {\n    buckets[bucketNum] = {\n      x: bucketNum,\n      values: [value],\n      points: [point_ext],\n    };\n  }\n}\n\nfunction pushToYBuckets(buckets, bucketNum, value, point, bounds) {\n  var count = 1;\n  // Use the 3rd argument as scale/count\n  if (point.length > 3) {\n    count = parseInt(point[2]);\n  }\n  if (buckets[bucketNum]) {\n    buckets[bucketNum].values.push(value);\n    buckets[bucketNum].points.push(point);\n    buckets[bucketNum].count += count;\n  } else {\n    buckets[bucketNum] = {\n      y: bucketNum,\n      bounds: bounds,\n      values: [value],\n      points: [point],\n      count: count,\n    };\n  }\n}\n\nfunction getValueBucketBound(value, yBucketSize, logBase) {\n  if (logBase === 1) {\n    return getBucketBound(value, yBucketSize);\n  } else {\n    return getLogScaleBucketBound(value, yBucketSize, logBase);\n  }\n}\n\n/**\n * Find bucket for given value (for linear scale)\n */\nfunction getBucketBounds(value, bucketSize) {\n  let bottom, top;\n  bottom = Math.floor(value / bucketSize) * bucketSize;\n  top = (Math.floor(value / bucketSize) + 1) * bucketSize;\n\n  return { bottom, top };\n}\n\nfunction getBucketBound(value, bucketSize) {\n  let bounds = getBucketBounds(value, bucketSize);\n  return bounds.bottom;\n}\n\nfunction convertToValueBuckets(xBucket, bucketSize) {\n  let values = xBucket.values;\n  let points = xBucket.points;\n  let buckets = {};\n\n  _.forEach(values, (val, index) => {\n    let bounds = getBucketBounds(val, bucketSize);\n    let bucketNum = bounds.bottom;\n    pushToYBuckets(buckets, bucketNum, val, points[index], bounds);\n  });\n\n  return buckets;\n}\n\n/**\n * Find bucket for given value (for log scales)\n */\nfunction getLogScaleBucketBounds(value, yBucketSplitFactor, logBase) {\n  let top, bottom;\n  if (value === 0) {\n    return { bottom: 0, top: 0 };\n  }\n\n  let value_log = logp(value, logBase);\n  let pow, powTop;\n  if (yBucketSplitFactor === 1 || !yBucketSplitFactor) {\n    pow = Math.floor(value_log);\n    powTop = pow + 1;\n  } else {\n    let additional_bucket_size = 1 / yBucketSplitFactor;\n    let additional_log = value_log - Math.floor(value_log);\n    additional_log = Math.floor(additional_log / additional_bucket_size) * additional_bucket_size;\n    pow = Math.floor(value_log) + additional_log;\n    powTop = pow + additional_bucket_size;\n  }\n  bottom = Math.pow(logBase, pow);\n  top = Math.pow(logBase, powTop);\n\n  return { bottom, top };\n}\n\nfunction getLogScaleBucketBound(value, yBucketSplitFactor, logBase) {\n  let bounds = getLogScaleBucketBounds(value, yBucketSplitFactor, logBase);\n  return bounds.bottom;\n}\n\nfunction convertToLogScaleValueBuckets(xBucket, yBucketSplitFactor, logBase) {\n  let values = xBucket.values;\n  let points = xBucket.points;\n\n  let buckets = {};\n  _.forEach(values, (val, index) => {\n    let bounds = getLogScaleBucketBounds(val, yBucketSplitFactor, logBase);\n    let bucketNum = bounds.bottom;\n    pushToYBuckets(buckets, bucketNum, val, points[index], bounds);\n  });\n\n  return buckets;\n}\n\n/**\n * Logarithm for custom base\n * @param value\n * @param base logarithm base\n */\nfunction logp(value, base) {\n  return Math.log(value) / Math.log(base);\n}\n\n/**\n * Calculate size of Y bucket from given buckets bounds.\n * @param bounds Array of Y buckets bounds\n * @param logBase Logarithm base\n */\nfunction calculateBucketSize(bounds: number[], logBase = 1): number {\n  let bucketSize = Infinity;\n\n  if (bounds.length === 0) {\n    return 0;\n  } else if (bounds.length === 1) {\n    return bounds[0];\n  } else {\n    bounds = _.sortBy(bounds);\n    for (let i = 1; i < bounds.length; i++) {\n      let distance = getDistance(bounds[i], bounds[i - 1], logBase);\n      bucketSize = distance < bucketSize ? distance : bucketSize;\n    }\n  }\n\n  return bucketSize;\n}\n\n/**\n * Calculate distance between two numbers in given scale (linear or logarithmic).\n * @param a\n * @param b\n * @param logBase\n */\nfunction getDistance(a: number, b: number, logBase = 1): number {\n  if (logBase === 1) {\n    // Linear distance\n    return Math.abs(b - a);\n  } else {\n    // logarithmic distance\n    let ratio = Math.max(a, b) / Math.min(a, b);\n    return logp(ratio, logBase);\n  }\n}\n\n/**\n * Compare two heatmap data objects\n * @param objA\n * @param objB\n */\nfunction isHeatmapDataEqual(objA: any, objB: any): boolean {\n  let is_eql = !emptyXOR(objA, objB);\n\n  _.forEach(objA, (xBucket: XBucket, x) => {\n    if (objB[x]) {\n      if (emptyXOR(xBucket.buckets, objB[x].buckets)) {\n        is_eql = false;\n        return false;\n      }\n\n      _.forEach(xBucket.buckets, (yBucket: YBucket, y) => {\n        if (objB[x].buckets && objB[x].buckets[y]) {\n          if (objB[x].buckets[y].values) {\n            is_eql = _.isEqual(_.sortBy(yBucket.values), _.sortBy(objB[x].buckets[y].values));\n            if (!is_eql) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            is_eql = false;\n            return false;\n          }\n        } else {\n          is_eql = false;\n          return false;\n        }\n      });\n\n      if (!is_eql) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      is_eql = false;\n      return false;\n    }\n  });\n\n  return is_eql;\n}\n\nfunction emptyXOR(foo: any, bar: any): boolean {\n  return (_.isEmpty(foo) || _.isEmpty(bar)) && !(_.isEmpty(foo) && _.isEmpty(bar));\n}\n\nexport {\n  convertToHeatMap,\n  histogramToHeatmap,\n  convertToCards,\n  mergeZeroBuckets,\n  getValueBucketBound,\n  isHeatmapDataEqual,\n  calculateBucketSize,\n  sortSeriesByLabel,\n};\n","import kbn from 'app/core/utils/kbn';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  unitFormats: any;\n  logScales: any;\n  dataFormats: any;\n  yBucketBoundModes: any;\n\n  /** @ngInject */\n  constructor($scope, uiSegmentSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.dataFormats = {\n      'Time series': 'timeseries',\n      'Time series buckets': 'tsbuckets',\n    };\n\n    this.yBucketBoundModes = {\n      Auto: 'auto',\n      Upper: 'upper',\n      Lower: 'lower',\n    };\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.yAxis.format = subItem.value;\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function axesEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import * as d3 from 'd3';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { getValueBucketBound } from './heatmap_data_converter';\n\nlet TOOLTIP_PADDING_X = 30;\nlet TOOLTIP_PADDING_Y = 5;\nlet HISTOGRAM_WIDTH = 160;\nlet HISTOGRAM_HEIGHT = 40;\n\nexport class HeatmapTooltip {\n  tooltip: any;\n  scope: any;\n  dashboard: any;\n  panelCtrl: any;\n  panel: any;\n  heatmapPanel: any;\n  mouseOverBucket: boolean;\n  originalFillColor: any;\n\n  constructor(elem, scope) {\n    this.scope = scope;\n    this.dashboard = scope.ctrl.dashboard;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n    this.heatmapPanel = elem;\n    this.mouseOverBucket = false;\n    this.originalFillColor = null;\n\n    elem.on('mouseover', this.onMouseOver.bind(this));\n    elem.on('mouseleave', this.onMouseLeave.bind(this));\n  }\n\n  onMouseOver(e) {\n    if (!this.panel.tooltip.show || !this.scope.ctrl.data || _.isEmpty(this.scope.ctrl.data.buckets)) {\n      return;\n    }\n\n    if (!this.tooltip) {\n      this.add();\n      this.move(e);\n    }\n  }\n\n  onMouseLeave() {\n    this.destroy();\n  }\n\n  onMouseMove(e) {\n    if (!this.panel.tooltip.show) {\n      return;\n    }\n\n    this.move(e);\n  }\n\n  add() {\n    this.tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'heatmap-tooltip graph-tooltip grafana-tooltip');\n  }\n\n  destroy() {\n    if (this.tooltip) {\n      this.tooltip.remove();\n    }\n\n    this.tooltip = null;\n  }\n\n  show(pos, data) {\n    if (!this.panel.tooltip.show || !data) {\n      return;\n    }\n    // shared tooltip mode\n    if (pos.panelRelY) {\n      return;\n    }\n\n    let { xBucketIndex, yBucketIndex } = this.getBucketIndexes(pos, data);\n\n    if (!data.buckets[xBucketIndex] || !this.tooltip) {\n      this.destroy();\n      return;\n    }\n\n    let boundBottom, boundTop, valuesNumber;\n    let xData = data.buckets[xBucketIndex];\n    // Search in special 'zero' bucket also\n    let yData = _.find(xData.buckets, (bucket, bucketIndex) => {\n      return bucket.bounds.bottom === yBucketIndex || bucketIndex === yBucketIndex.toString();\n    });\n\n    let tooltipTimeFormat = 'YYYY-MM-DD HH:mm:ss';\n    let time = this.dashboard.formatDate(xData.x, tooltipTimeFormat);\n\n    // Decimals override. Code from panel/graph/graph.ts\n    let countValueFormatter, bucketBoundFormatter;\n    if (_.isNumber(this.panel.tooltipDecimals)) {\n      countValueFormatter = this.countValueFormatter(this.panel.tooltipDecimals, null);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(this.panelCtrl.decimals, null);\n    } else {\n      // auto decimals\n      // legend and tooltip gets one more decimal precision\n      // than graph legend ticks\n      let decimals = (this.panelCtrl.decimals || -1) + 1;\n      countValueFormatter = this.countValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n    }\n\n    let tooltipHtml = `<div class=\"graph-tooltip-time\">${time}</div>\n      <div class=\"heatmap-histogram\"></div>`;\n\n    if (yData) {\n      if (yData.bounds) {\n        if (data.tsBuckets) {\n          // Use Y-axis labels\n          const tickFormatter = valIndex => {\n            return data.tsBucketsFormatted ? data.tsBucketsFormatted[valIndex] : data.tsBuckets[valIndex];\n          };\n\n          boundBottom = tickFormatter(yBucketIndex);\n          boundTop = yBucketIndex < data.tsBuckets.length - 1 ? tickFormatter(yBucketIndex + 1) : '';\n        } else {\n          // Display 0 if bucket is a special 'zero' bucket\n          let bottom = yData.y ? yData.bounds.bottom : 0;\n          boundBottom = bucketBoundFormatter(bottom);\n          boundTop = bucketBoundFormatter(yData.bounds.top);\n        }\n        valuesNumber = countValueFormatter(yData.count);\n        tooltipHtml += `<div>\n          bucket: <b>${boundBottom} - ${boundTop}</b> <br>\n          count: <b>${valuesNumber}</b> <br>\n        </div>`;\n      } else {\n        // currently no bounds for pre bucketed data\n        tooltipHtml += `<div>count: <b>${yData.count}</b><br></div>`;\n      }\n    } else {\n      if (!this.panel.tooltip.showHistogram) {\n        this.destroy();\n        return;\n      }\n      boundBottom = yBucketIndex;\n      boundTop = '';\n      valuesNumber = 0;\n    }\n\n    this.tooltip.html(tooltipHtml);\n\n    if (this.panel.tooltip.showHistogram) {\n      this.addHistogram(xData);\n    }\n\n    this.move(pos);\n  }\n\n  getBucketIndexes(pos, data) {\n    const xBucketIndex = this.getXBucketIndex(pos.offsetX, data);\n    const yBucketIndex = this.getYBucketIndex(pos.offsetY, data);\n    return { xBucketIndex, yBucketIndex };\n  }\n\n  getXBucketIndex(offsetX, data) {\n    let x = this.scope.xScale.invert(offsetX - this.scope.yAxisWidth).valueOf();\n    // First try to find X bucket by checking x pos is in the\n    // [bucket.x, bucket.x + xBucketSize] interval\n    let xBucket = _.find(data.buckets, bucket => {\n      return x > bucket.x && x - bucket.x <= data.xBucketSize;\n    });\n    return xBucket ? xBucket.x : getValueBucketBound(x, data.xBucketSize, 1);\n  }\n\n  getYBucketIndex(offsetY, data) {\n    let y = this.scope.yScale.invert(offsetY - this.scope.chartTop);\n    if (data.tsBuckets) {\n      return Math.floor(y);\n    }\n    let yBucketIndex = getValueBucketBound(y, data.yBucketSize, this.panel.yAxis.logBase);\n    return yBucketIndex;\n  }\n\n  getSharedTooltipPos(pos) {\n    // get pageX from position on x axis and pageY from relative position in original panel\n    pos.pageX = this.heatmapPanel.offset().left + this.scope.xScale(pos.x);\n    pos.pageY = this.heatmapPanel.offset().top + this.scope.chartHeight * pos.panelRelY;\n    return pos;\n  }\n\n  addHistogram(data) {\n    let xBucket = this.scope.ctrl.data.buckets[data.x];\n    let yBucketSize = this.scope.ctrl.data.yBucketSize;\n    let min, max, ticks;\n    if (this.scope.ctrl.data.tsBuckets) {\n      min = 0;\n      max = this.scope.ctrl.data.tsBuckets.length - 1;\n      ticks = this.scope.ctrl.data.tsBuckets.length;\n    } else {\n      min = this.scope.ctrl.data.yAxis.min;\n      max = this.scope.ctrl.data.yAxis.max;\n      ticks = this.scope.ctrl.data.yAxis.ticks;\n    }\n    let histogramData = _.map(xBucket.buckets, bucket => {\n      let count = bucket.count !== undefined ? bucket.count : bucket.values.length;\n      return [bucket.bounds.bottom, count];\n    });\n    histogramData = _.filter(histogramData, d => {\n      return d[0] >= min && d[0] <= max;\n    });\n\n    let scale = this.scope.yScale.copy();\n    let histXScale = scale.domain([min, max]).range([0, HISTOGRAM_WIDTH]);\n\n    let barWidth;\n    if (this.panel.yAxis.logBase === 1) {\n      barWidth = Math.floor(HISTOGRAM_WIDTH / (max - min) * yBucketSize * 0.9);\n    } else {\n      let barNumberFactor = yBucketSize ? yBucketSize : 1;\n      barWidth = Math.floor(HISTOGRAM_WIDTH / ticks / barNumberFactor * 0.9);\n    }\n    barWidth = Math.max(barWidth, 1);\n\n    // Normalize histogram Y axis\n    let histogramDomain = _.reduce(_.map(histogramData, d => d[1]), (sum, val) => sum + val, 0);\n    let histYScale = d3\n      .scaleLinear()\n      .domain([0, histogramDomain])\n      .range([0, HISTOGRAM_HEIGHT]);\n\n    let histogram = this.tooltip\n      .select('.heatmap-histogram')\n      .append('svg')\n      .attr('width', HISTOGRAM_WIDTH)\n      .attr('height', HISTOGRAM_HEIGHT);\n\n    histogram\n      .selectAll('.bar')\n      .data(histogramData)\n      .enter()\n      .append('rect')\n      .attr('x', d => {\n        return histXScale(d[0]);\n      })\n      .attr('width', barWidth)\n      .attr('y', d => {\n        return HISTOGRAM_HEIGHT - histYScale(d[1]);\n      })\n      .attr('height', d => {\n        return histYScale(d[1]);\n      });\n  }\n\n  move(pos) {\n    if (!this.tooltip) {\n      return;\n    }\n\n    let elem = $(this.tooltip.node())[0];\n    let tooltipWidth = elem.clientWidth;\n    let tooltipHeight = elem.clientHeight;\n\n    let left = pos.pageX + TOOLTIP_PADDING_X;\n    let top = pos.pageY + TOOLTIP_PADDING_Y;\n\n    if (pos.pageX + tooltipWidth + 40 > window.innerWidth) {\n      left = pos.pageX - tooltipWidth - TOOLTIP_PADDING_X;\n    }\n\n    if (pos.pageY - window.pageYOffset + tooltipHeight + 20 > window.innerHeight) {\n      top = pos.pageY - tooltipHeight - TOOLTIP_PADDING_Y;\n    }\n\n    return this.tooltip.style('left', left + 'px').style('top', top + 'px');\n  }\n\n  countValueFormatter(decimals, scaledDecimals = null) {\n    let format = 'short';\n    return function(value) {\n      return kbn.valueFormats[format](value, decimals, scaledDecimals);\n    };\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport kbn from 'app/core/utils/kbn';\nimport { appEvents, contextSrv } from 'app/core/core';\nimport * as ticksUtils from 'app/core/utils/ticks';\nimport { HeatmapTooltip } from './heatmap_tooltip';\nimport { mergeZeroBuckets } from './heatmap_data_converter';\nimport { getColorScale, getOpacityScale } from './color_scale';\n\nlet MIN_CARD_SIZE = 1,\n  CARD_PADDING = 1,\n  CARD_ROUND = 0,\n  DATA_RANGE_WIDING_FACTOR = 1.2,\n  DEFAULT_X_TICK_SIZE_PX = 100,\n  DEFAULT_Y_TICK_SIZE_PX = 50,\n  X_AXIS_TICK_PADDING = 10,\n  Y_AXIS_TICK_PADDING = 5,\n  MIN_SELECTION_WIDTH = 2;\n\nexport default function link(scope, elem, attrs, ctrl) {\n  let data, timeRange, panel, heatmap;\n\n  // $heatmap is JQuery object, but heatmap is D3\n  let $heatmap = elem.find('.heatmap-panel');\n  let tooltip = new HeatmapTooltip($heatmap, scope);\n\n  let width,\n    height,\n    yScale,\n    xScale,\n    chartWidth,\n    chartHeight,\n    chartTop,\n    chartBottom,\n    yAxisWidth,\n    xAxisHeight,\n    cardPadding,\n    cardRound,\n    cardWidth,\n    cardHeight,\n    colorScale,\n    opacityScale,\n    mouseUpHandler;\n\n  let selection = {\n    active: false,\n    x1: -1,\n    x2: -1,\n  };\n\n  let padding = { left: 0, right: 0, top: 0, bottom: 0 },\n    margin = { left: 25, right: 15, top: 10, bottom: 20 },\n    dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\n\n  ctrl.events.on('render', () => {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function setElementHeight() {\n    try {\n      var height = ctrl.height || panel.height || ctrl.row.height;\n      if (_.isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= panel.legend.show ? 28 : 11; // bottom padding and space for legend\n\n      $heatmap.css('height', height + 'px');\n\n      return true;\n    } catch (e) {\n      // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  function getYAxisWidth(elem) {\n    let axis_text = elem.selectAll('.axis-y text').nodes();\n    let max_text_width = _.max(\n      _.map(axis_text, text => {\n        // Use SVG getBBox method\n        return text.getBBox().width;\n      })\n    );\n\n    return max_text_width;\n  }\n\n  function getXAxisHeight(elem) {\n    let axis_line = elem.select('.axis-x line');\n    if (!axis_line.empty()) {\n      let axis_line_position = parseFloat(elem.select('.axis-x line').attr('y2'));\n      let canvas_width = parseFloat(elem.attr('height'));\n      return canvas_width - axis_line_position;\n    } else {\n      // Default height\n      return 30;\n    }\n  }\n\n  function addXAxis() {\n    scope.xScale = xScale = d3\n      .scaleTime()\n      .domain([timeRange.from, timeRange.to])\n      .range([0, chartWidth]);\n\n    let ticks = chartWidth / DEFAULT_X_TICK_SIZE_PX;\n    let grafanaTimeFormatter = ticksUtils.grafanaTimeFormat(ticks, timeRange.from, timeRange.to);\n    let timeFormat;\n    let dashboardTimeZone = ctrl.dashboard.getTimezone();\n    if (dashboardTimeZone === 'utc') {\n      timeFormat = d3.utcFormat(grafanaTimeFormatter);\n    } else {\n      timeFormat = d3.timeFormat(grafanaTimeFormatter);\n    }\n\n    let xAxis = d3\n      .axisBottom(xScale)\n      .ticks(ticks)\n      .tickFormat(timeFormat)\n      .tickPadding(X_AXIS_TICK_PADDING)\n      .tickSize(chartHeight);\n\n    let posY = margin.top;\n    let posX = yAxisWidth;\n    heatmap\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', 'translate(' + posX + ',' + posY + ')')\n      .call(xAxis);\n\n    // Remove horizontal line in the top of axis labels (called domain in d3)\n    heatmap\n      .select('.axis-x')\n      .select('.domain')\n      .remove();\n  }\n\n  function addYAxis() {\n    let ticks = Math.ceil(chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n    let tick_interval = ticksUtils.tickStep(data.heatmapStats.min, data.heatmapStats.max, ticks);\n    let { y_min, y_max } = wideYAxisRange(data.heatmapStats.min, data.heatmapStats.max, tick_interval);\n\n    // Rewrite min and max if it have been set explicitly\n    y_min = panel.yAxis.min !== null ? panel.yAxis.min : y_min;\n    y_max = panel.yAxis.max !== null ? panel.yAxis.max : y_max;\n\n    // Adjust ticks after Y range widening\n    tick_interval = ticksUtils.tickStep(y_min, y_max, ticks);\n    ticks = Math.ceil((y_max - y_min) / tick_interval);\n\n    let decimalsAuto = ticksUtils.getPrecision(tick_interval);\n    let decimals = panel.yAxis.decimals === null ? decimalsAuto : panel.yAxis.decimals;\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    let flot_tick_size = ticksUtils.getFlotTickSize(y_min, y_max, ticks, decimalsAuto);\n    let scaledDecimals = ticksUtils.getScaledDecimals(decimals, flot_tick_size);\n    ctrl.decimals = decimals;\n    ctrl.scaledDecimals = scaledDecimals;\n\n    // Set default Y min and max if no data\n    if (_.isEmpty(data.buckets)) {\n      y_max = 1;\n      y_min = -1;\n      ticks = 3;\n      decimals = 1;\n    }\n\n    data.yAxis = {\n      min: y_min,\n      max: y_max,\n      ticks: ticks,\n    };\n\n    scope.yScale = yScale = d3\n      .scaleLinear()\n      .domain([y_min, y_max])\n      .range([chartHeight, 0]);\n\n    let yAxis = d3\n      .axisLeft(yScale)\n      .ticks(ticks)\n      .tickFormat(tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    let posY = margin.top;\n    let posX = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  // Wide Y values range and anjust to bucket size\n  function wideYAxisRange(min, max, tickInterval) {\n    let y_widing = (max * (dataRangeWidingFactor - 1) - min * (dataRangeWidingFactor - 1)) / 2;\n    let y_min, y_max;\n\n    if (tickInterval === 0) {\n      y_max = max * dataRangeWidingFactor;\n      y_min = min - min * (dataRangeWidingFactor - 1);\n      tickInterval = (y_max - y_min) / 2;\n    } else {\n      y_max = Math.ceil((max + y_widing) / tickInterval) * tickInterval;\n      y_min = Math.floor((min - y_widing) / tickInterval) * tickInterval;\n    }\n\n    // Don't wide axis below 0 if all values are positive\n    if (min >= 0 && y_min < 0) {\n      y_min = 0;\n    }\n\n    return { y_min, y_max };\n  }\n\n  function addLogYAxis() {\n    let log_base = panel.yAxis.logBase;\n    let { y_min, y_max } = adjustLogRange(data.heatmapStats.minLog, data.heatmapStats.max, log_base);\n\n    y_min = panel.yAxis.min && panel.yAxis.min !== '0' ? adjustLogMin(panel.yAxis.min, log_base) : y_min;\n    y_max = panel.yAxis.max !== null ? adjustLogMax(panel.yAxis.max, log_base) : y_max;\n\n    // Set default Y min and max if no data\n    if (_.isEmpty(data.buckets)) {\n      y_max = Math.pow(log_base, 2);\n      y_min = 1;\n    }\n\n    scope.yScale = yScale = d3\n      .scaleLog()\n      .base(panel.yAxis.logBase)\n      .domain([y_min, y_max])\n      .range([chartHeight, 0]);\n\n    let domain = yScale.domain();\n    let tick_values = logScaleTickValues(domain, log_base);\n\n    let decimalsAuto = ticksUtils.getPrecision(y_min);\n    let decimals = panel.yAxis.decimals || decimalsAuto;\n\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    let flot_tick_size = ticksUtils.getFlotTickSize(y_min, y_max, tick_values.length, decimalsAuto);\n    let scaledDecimals = ticksUtils.getScaledDecimals(decimals, flot_tick_size);\n    ctrl.decimals = decimals;\n    ctrl.scaledDecimals = scaledDecimals;\n\n    data.yAxis = {\n      min: y_min,\n      max: y_max,\n      ticks: tick_values.length,\n    };\n\n    let yAxis = d3\n      .axisLeft(yScale)\n      .tickValues(tick_values)\n      .tickFormat(tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    let posY = margin.top;\n    let posX = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Set first tick as pseudo 0\n    if (y_min < 1) {\n      heatmap\n        .select('.axis-y')\n        .select('.tick text')\n        .text('0');\n    }\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  function addYAxisFromBuckets() {\n    const tsBuckets = data.tsBuckets;\n\n    scope.yScale = yScale = d3\n      .scaleLinear()\n      .domain([0, tsBuckets.length - 1])\n      .range([chartHeight, 0]);\n\n    const tick_values = _.map(tsBuckets, (b, i) => i);\n    const decimalsAuto = _.max(_.map(tsBuckets, ticksUtils.getStringPrecision));\n    const decimals = panel.yAxis.decimals === null ? decimalsAuto : panel.yAxis.decimals;\n    ctrl.decimals = decimals;\n\n    function tickFormatter(valIndex) {\n      let valueFormatted = tsBuckets[valIndex];\n      if (!_.isNaN(_.toNumber(valueFormatted)) && valueFormatted !== '') {\n        // Try to format numeric tick labels\n        valueFormatted = tickValueFormatter(decimals)(_.toNumber(valueFormatted));\n      }\n      return valueFormatted;\n    }\n\n    const tsBucketsFormatted = _.map(tsBuckets, (v, i) => tickFormatter(i));\n    data.tsBucketsFormatted = tsBucketsFormatted;\n\n    let yAxis = d3\n      .axisLeft(yScale)\n      .tickValues(tick_values)\n      .tickFormat(tickFormatter)\n      .tickSizeInner(0 - width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = margin.top;\n    const posX = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  // Adjust data range to log base\n  function adjustLogRange(min, max, logBase) {\n    let y_min, y_max;\n\n    y_min = data.heatmapStats.minLog;\n    if (data.heatmapStats.minLog > 1 || !data.heatmapStats.minLog) {\n      y_min = 1;\n    } else {\n      y_min = adjustLogMin(data.heatmapStats.minLog, logBase);\n    }\n\n    // Adjust max Y value to log base\n    y_max = adjustLogMax(data.heatmapStats.max, logBase);\n\n    return { y_min, y_max };\n  }\n\n  function adjustLogMax(max, base) {\n    return Math.pow(base, Math.ceil(ticksUtils.logp(max, base)));\n  }\n\n  function adjustLogMin(min, base) {\n    return Math.pow(base, Math.floor(ticksUtils.logp(min, base)));\n  }\n\n  function logScaleTickValues(domain, base) {\n    let domainMin = domain[0];\n    let domainMax = domain[1];\n    let tickValues = [];\n\n    if (domainMin < 1) {\n      let under_one_ticks = Math.floor(ticksUtils.logp(domainMin, base));\n      for (let i = under_one_ticks; i < 0; i++) {\n        let tick_value = Math.pow(base, i);\n        tickValues.push(tick_value);\n      }\n    }\n\n    let ticks = Math.ceil(ticksUtils.logp(domainMax, base));\n    for (let i = 0; i <= ticks; i++) {\n      let tick_value = Math.pow(base, i);\n      tickValues.push(tick_value);\n    }\n\n    return tickValues;\n  }\n\n  function tickValueFormatter(decimals, scaledDecimals = null) {\n    let format = panel.yAxis.format;\n    return function(value) {\n      try {\n        return format !== 'none' ? kbn.valueFormats[format](value, decimals, scaledDecimals) : value;\n      } catch (err) {\n        console.error(err.message || err);\n        return value;\n      }\n    };\n  }\n\n  ctrl.tickValueFormatter = tickValueFormatter;\n\n  function fixYAxisTickSize() {\n    heatmap\n      .select('.axis-y')\n      .selectAll('.tick line')\n      .attr('x2', chartWidth);\n  }\n\n  function addAxes() {\n    chartHeight = height - margin.top - margin.bottom;\n    chartTop = margin.top;\n    chartBottom = chartTop + chartHeight;\n\n    if (panel.dataFormat === 'tsbuckets') {\n      addYAxisFromBuckets();\n    } else {\n      if (panel.yAxis.logBase === 1) {\n        addYAxis();\n      } else {\n        addLogYAxis();\n      }\n    }\n\n    yAxisWidth = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    chartWidth = width - yAxisWidth - margin.right;\n    fixYAxisTickSize();\n\n    addXAxis();\n    xAxisHeight = getXAxisHeight(heatmap);\n\n    if (!panel.yAxis.show) {\n      heatmap\n        .select('.axis-y')\n        .selectAll('line')\n        .style('opacity', 0);\n    }\n\n    if (!panel.xAxis.show) {\n      heatmap\n        .select('.axis-x')\n        .selectAll('line')\n        .style('opacity', 0);\n    }\n  }\n\n  function addHeatmapCanvas() {\n    let heatmap_elem = $heatmap[0];\n\n    width = Math.floor($heatmap.width()) - padding.right;\n    height = Math.floor($heatmap.height()) - padding.bottom;\n\n    cardPadding = panel.cards.cardPadding !== null ? panel.cards.cardPadding : CARD_PADDING;\n    cardRound = panel.cards.cardRound !== null ? panel.cards.cardRound : CARD_ROUND;\n\n    if (heatmap) {\n      heatmap.remove();\n    }\n\n    heatmap = d3\n      .select(heatmap_elem)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n  }\n\n  function addHeatmap() {\n    addHeatmapCanvas();\n    addAxes();\n\n    if (panel.yAxis.logBase !== 1 && panel.dataFormat !== 'tsbuckets') {\n      let log_base = panel.yAxis.logBase;\n      let domain = yScale.domain();\n      let tick_values = logScaleTickValues(domain, log_base);\n      data.buckets = mergeZeroBuckets(data.buckets, _.min(tick_values));\n    }\n\n    let cardsData = data.cards;\n    let maxValueAuto = data.cardStats.max;\n    let maxValue = panel.color.max || maxValueAuto;\n    let minValue = panel.color.min || 0;\n\n    let colorScheme = _.find(ctrl.colorSchemes, {\n      value: panel.color.colorScheme,\n    });\n    colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n    opacityScale = getOpacityScale(panel.color, maxValue);\n    setCardSize();\n\n    let cards = heatmap.selectAll('.heatmap-card').data(cardsData);\n    cards.append('title');\n    cards = cards\n      .enter()\n      .append('rect')\n      .attr('x', getCardX)\n      .attr('width', getCardWidth)\n      .attr('y', getCardY)\n      .attr('height', getCardHeight)\n      .attr('rx', cardRound)\n      .attr('ry', cardRound)\n      .attr('class', 'bordered heatmap-card')\n      .style('fill', getCardColor)\n      .style('stroke', getCardColor)\n      .style('stroke-width', 0)\n      .style('opacity', getCardOpacity);\n\n    let $cards = $heatmap.find('.heatmap-card');\n    $cards\n      .on('mouseenter', event => {\n        tooltip.mouseOverBucket = true;\n        highlightCard(event);\n      })\n      .on('mouseleave', event => {\n        tooltip.mouseOverBucket = false;\n        resetCardHighLight(event);\n      });\n  }\n\n  function highlightCard(event) {\n    let color = d3.select(event.target).style('fill');\n    let highlightColor = d3.color(color).darker(2);\n    let strokeColor = d3.color(color).brighter(4);\n    let current_card = d3.select(event.target);\n    tooltip.originalFillColor = color;\n    current_card\n      .style('fill', highlightColor.toString())\n      .style('stroke', strokeColor.toString())\n      .style('stroke-width', 1);\n  }\n\n  function resetCardHighLight(event) {\n    d3\n      .select(event.target)\n      .style('fill', tooltip.originalFillColor)\n      .style('stroke', tooltip.originalFillColor)\n      .style('stroke-width', 0);\n  }\n\n  function setCardSize() {\n    let xGridSize = Math.floor(xScale(data.xBucketSize) - xScale(0));\n    let yGridSize = Math.floor(yScale(yScale.invert(0) - data.yBucketSize));\n\n    if (panel.yAxis.logBase !== 1) {\n      let base = panel.yAxis.logBase;\n      let splitFactor = data.yBucketSize || 1;\n      yGridSize = Math.floor((yScale(1) - yScale(base)) / splitFactor);\n    }\n\n    cardWidth = xGridSize - cardPadding * 2;\n    cardHeight = yGridSize ? yGridSize - cardPadding * 2 : 0;\n  }\n\n  function getCardX(d) {\n    let x;\n    if (xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      x = yAxisWidth + cardPadding;\n    } else {\n      x = xScale(d.x) + yAxisWidth + cardPadding;\n    }\n\n    return x;\n  }\n\n  function getCardWidth(d) {\n    let w;\n    if (xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      let cutted_width = xScale(d.x) + cardWidth;\n      w = cutted_width > 0 ? cutted_width : 0;\n    } else if (xScale(d.x) + cardWidth > chartWidth) {\n      // Cut card right to prevent overlay\n      w = chartWidth - xScale(d.x) - cardPadding;\n    } else {\n      w = cardWidth;\n    }\n\n    // Card width should be MIN_CARD_SIZE at least\n    w = Math.max(w, MIN_CARD_SIZE);\n    return w;\n  }\n\n  function getCardY(d) {\n    let y = yScale(d.y) + chartTop - cardHeight - cardPadding;\n    if (panel.yAxis.logBase !== 1 && d.y === 0) {\n      y = chartBottom - cardHeight - cardPadding;\n    } else {\n      if (y < chartTop) {\n        y = chartTop;\n      }\n    }\n\n    return y;\n  }\n\n  function getCardHeight(d) {\n    let y = yScale(d.y) + chartTop - cardHeight - cardPadding;\n    let h = cardHeight;\n\n    if (panel.yAxis.logBase !== 1 && d.y === 0) {\n      return cardHeight;\n    }\n\n    // Cut card height to prevent overlay\n    if (y < chartTop) {\n      h = yScale(d.y) - cardPadding;\n    } else if (yScale(d.y) > chartBottom) {\n      h = chartBottom - y;\n    } else if (y + cardHeight > chartBottom) {\n      h = chartBottom - y;\n    }\n\n    // Height can't be more than chart height\n    h = Math.min(h, chartHeight);\n    // Card height should be MIN_CARD_SIZE at least\n    h = Math.max(h, MIN_CARD_SIZE);\n\n    return h;\n  }\n\n  function getCardColor(d) {\n    if (panel.color.mode === 'opacity') {\n      return panel.color.cardColor;\n    } else {\n      return colorScale(d.count);\n    }\n  }\n\n  function getCardOpacity(d) {\n    if (panel.color.mode === 'opacity') {\n      return opacityScale(d.count);\n    } else {\n      return 1;\n    }\n  }\n\n  /////////////////////////////\n  // Selection and crosshair //\n  /////////////////////////////\n\n  // Shared crosshair and tooltip\n  appEvents.on(\n    'graph-hover',\n    event => {\n      drawSharedCrosshair(event.pos);\n    },\n    scope\n  );\n\n  appEvents.on(\n    'graph-hover-clear',\n    () => {\n      clearCrosshair();\n    },\n    scope\n  );\n\n  function onMouseDown(event) {\n    selection.active = true;\n    selection.x1 = event.offsetX;\n\n    mouseUpHandler = function() {\n      onMouseUp();\n    };\n\n    $(document).one('mouseup', mouseUpHandler);\n  }\n\n  function onMouseUp() {\n    $(document).unbind('mouseup', mouseUpHandler);\n    mouseUpHandler = null;\n    selection.active = false;\n\n    let selectionRange = Math.abs(selection.x2 - selection.x1);\n    if (selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n      let timeFrom = xScale.invert(Math.min(selection.x1, selection.x2) - yAxisWidth);\n      let timeTo = xScale.invert(Math.max(selection.x1, selection.x2) - yAxisWidth);\n\n      ctrl.timeSrv.setTime({\n        from: moment.utc(timeFrom),\n        to: moment.utc(timeTo),\n      });\n    }\n\n    clearSelection();\n  }\n\n  function onMouseLeave() {\n    appEvents.emit('graph-hover-clear');\n    clearCrosshair();\n  }\n\n  function onMouseMove(event) {\n    if (!heatmap) {\n      return;\n    }\n\n    if (selection.active) {\n      // Clear crosshair and tooltip\n      clearCrosshair();\n      tooltip.destroy();\n\n      selection.x2 = limitSelection(event.offsetX);\n      drawSelection(selection.x1, selection.x2);\n    } else {\n      emitGraphHoverEvent(event);\n      drawCrosshair(event.offsetX);\n      tooltip.show(event, data);\n    }\n  }\n\n  function emitGraphHoverEvent(event) {\n    let x = xScale.invert(event.offsetX - yAxisWidth).valueOf();\n    let y = yScale.invert(event.offsetY);\n    let pos = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n      x: x,\n      x1: x,\n      y: y,\n      y1: y,\n      panelRelY: null,\n    };\n\n    // Set minimum offset to prevent showing legend from another panel\n    pos.panelRelY = Math.max(event.offsetY / height, 0.001);\n\n    // broadcast to other graph panels that we are hovering\n    appEvents.emit('graph-hover', { pos: pos, panel: panel });\n  }\n\n  function limitSelection(x2) {\n    x2 = Math.max(x2, yAxisWidth);\n    x2 = Math.min(x2, chartWidth + yAxisWidth);\n    return x2;\n  }\n\n  function drawSelection(posX1, posX2) {\n    if (heatmap) {\n      heatmap.selectAll('.heatmap-selection').remove();\n      let selectionX = Math.min(posX1, posX2);\n      let selectionWidth = Math.abs(posX1 - posX2);\n\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\n        heatmap\n          .append('rect')\n          .attr('class', 'heatmap-selection')\n          .attr('x', selectionX)\n          .attr('width', selectionWidth)\n          .attr('y', chartTop)\n          .attr('height', chartHeight);\n      }\n    }\n  }\n\n  function clearSelection() {\n    selection.x1 = -1;\n    selection.x2 = -1;\n\n    if (heatmap) {\n      heatmap.selectAll('.heatmap-selection').remove();\n    }\n  }\n\n  function drawCrosshair(position) {\n    if (heatmap) {\n      heatmap.selectAll('.heatmap-crosshair').remove();\n\n      let posX = position;\n      posX = Math.max(posX, yAxisWidth);\n      posX = Math.min(posX, chartWidth + yAxisWidth);\n\n      heatmap\n        .append('g')\n        .attr('class', 'heatmap-crosshair')\n        .attr('transform', 'translate(' + posX + ',0)')\n        .append('line')\n        .attr('x1', 1)\n        .attr('y1', chartTop)\n        .attr('x2', 1)\n        .attr('y2', chartBottom)\n        .attr('stroke-width', 1);\n    }\n  }\n\n  function drawSharedCrosshair(pos) {\n    if (heatmap && ctrl.dashboard.graphTooltip !== 0) {\n      let posX = xScale(pos.x) + yAxisWidth;\n      drawCrosshair(posX);\n    }\n  }\n\n  function clearCrosshair() {\n    if (heatmap) {\n      heatmap.selectAll('.heatmap-crosshair').remove();\n    }\n  }\n\n  function render() {\n    data = ctrl.data;\n    panel = ctrl.panel;\n    timeRange = ctrl.range;\n\n    if (!setElementHeight() || !data) {\n      return;\n    }\n\n    // Draw default axes and return if no data\n    if (_.isEmpty(data.buckets)) {\n      addHeatmapCanvas();\n      addAxes();\n      return;\n    }\n\n    addHeatmap();\n    scope.yAxisWidth = yAxisWidth;\n    scope.xAxisHeight = xAxisHeight;\n    scope.chartHeight = chartHeight;\n    scope.chartWidth = chartWidth;\n    scope.chartTop = chartTop;\n  }\n\n  // Register selection listeners\n  $heatmap.on('mousedown', onMouseDown);\n  $heatmap.on('mousemove', onMouseMove);\n  $heatmap.on('mouseleave', onMouseLeave);\n}\n","import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\nimport { axesEditor } from './axes_editor';\nimport { heatmapDisplayEditor } from './display_editor';\nimport rendering from './rendering';\nimport {\n  convertToHeatMap,\n  convertToCards,\n  histogramToHeatmap,\n  calculateBucketSize,\n  sortSeriesByLabel,\n} from './heatmap_data_converter';\n\nlet X_BUCKET_NUMBER_DEFAULT = 30;\nlet Y_BUCKET_NUMBER_DEFAULT = 10;\n\nlet panelDefaults = {\n  heatmap: {},\n  cards: {\n    cardPadding: null,\n    cardRound: null,\n  },\n  color: {\n    mode: 'spectrum',\n    cardColor: '#b4ff00',\n    colorScale: 'sqrt',\n    exponent: 0.5,\n    colorScheme: 'interpolateOranges',\n  },\n  legend: {\n    show: false,\n  },\n  dataFormat: 'timeseries',\n  yBucketBound: 'auto',\n  xAxis: {\n    show: true,\n  },\n  yAxis: {\n    show: true,\n    format: 'short',\n    decimals: null,\n    logBase: 1,\n    splitFactor: null,\n    min: null,\n    max: null,\n  },\n  xBucketSize: null,\n  xBucketNumber: null,\n  yBucketSize: null,\n  yBucketNumber: null,\n  tooltip: {\n    show: true,\n    showHistogram: false,\n  },\n  highlightCards: true,\n};\n\nlet colorModes = ['opacity', 'spectrum'];\nlet opacityScales = ['linear', 'sqrt'];\n\n// Schemes from d3-scale-chromatic\n// https://github.com/d3/d3-scale-chromatic\nlet colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'Viridis', value: 'interpolateViridis', invert: 'light' },\n  { name: 'Magma', value: 'interpolateMagma', invert: 'light' },\n  { name: 'Inferno', value: 'interpolateInferno', invert: 'light' },\n  { name: 'Plasma', value: 'interpolatePlasma', invert: 'light' },\n  { name: 'Warm', value: 'interpolateWarm', invert: 'light' },\n  { name: 'Cool', value: 'interpolateCool', invert: 'light' },\n  { name: 'Cubehelix', value: 'interpolateCubehelixDefault', invert: 'light' },\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' },\n];\n\nconst ds_support_histogram_sort = ['prometheus', 'elasticsearch'];\n\nexport class HeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  selectionActivated: boolean;\n  unitFormats: any;\n  data: any;\n  series: any;\n  timeSrv: any;\n  dataWarning: any;\n  decimals: number;\n  scaledDecimals: number;\n\n  /** @ngInject */\n  constructor($scope, $injector, timeSrv) {\n    super($scope, $injector);\n    this.timeSrv = timeSrv;\n    this.selectionActivated = false;\n\n    _.defaultsDeep(this.panel, panelDefaults);\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // Bind grafana panel events\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.onCardColorChange = this.onCardColorChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Axes', axesEditor, 2);\n    this.addEditorTab('Display', heatmapDisplayEditor, 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  zoomOut(evt) {\n    this.publishAppEvent('zoom-out', 2);\n  }\n\n  onRender() {\n    if (!this.range) {\n      return;\n    }\n\n    if (this.panel.dataFormat === 'tsbuckets') {\n      this.convertHistogramToHeatmapData();\n    } else {\n      this.convertTimeSeriesToHeatmapData();\n    }\n  }\n\n  convertTimeSeriesToHeatmapData() {\n    let xBucketSize, yBucketSize, bucketsData, heatmapStats;\n    const logBase = this.panel.yAxis.logBase;\n\n    let xBucketNumber = this.panel.xBucketNumber || X_BUCKET_NUMBER_DEFAULT;\n    let xBucketSizeByNumber = Math.floor((this.range.to - this.range.from) / xBucketNumber);\n\n    // Parse X bucket size (number or interval)\n    let isIntervalString = kbn.interval_regex.test(this.panel.xBucketSize);\n    if (isIntervalString) {\n      xBucketSize = kbn.interval_to_ms(this.panel.xBucketSize);\n    } else if (\n      isNaN(Number(this.panel.xBucketSize)) ||\n      this.panel.xBucketSize === '' ||\n      this.panel.xBucketSize === null\n    ) {\n      xBucketSize = xBucketSizeByNumber;\n    } else {\n      xBucketSize = Number(this.panel.xBucketSize);\n    }\n\n    // Calculate Y bucket size\n    heatmapStats = this.parseSeries(this.series);\n    let yBucketNumber = this.panel.yBucketNumber || Y_BUCKET_NUMBER_DEFAULT;\n    if (logBase !== 1) {\n      yBucketSize = this.panel.yAxis.splitFactor;\n    } else {\n      if (heatmapStats.max === heatmapStats.min) {\n        if (heatmapStats.max) {\n          yBucketSize = heatmapStats.max / Y_BUCKET_NUMBER_DEFAULT;\n        } else {\n          yBucketSize = 1;\n        }\n      } else {\n        yBucketSize = (heatmapStats.max - heatmapStats.min) / yBucketNumber;\n      }\n      yBucketSize = this.panel.yBucketSize || yBucketSize;\n    }\n\n    bucketsData = convertToHeatMap(this.series, yBucketSize, xBucketSize, logBase);\n\n    // Set default Y range if no data\n    if (!heatmapStats.min && !heatmapStats.max) {\n      heatmapStats = { min: -1, max: 1, minLog: 1 };\n      yBucketSize = 1;\n    }\n\n    let { cards, cardStats } = convertToCards(bucketsData);\n\n    this.data = {\n      buckets: bucketsData,\n      heatmapStats: heatmapStats,\n      xBucketSize: xBucketSize,\n      yBucketSize: yBucketSize,\n      cards: cards,\n      cardStats: cardStats,\n    };\n  }\n\n  convertHistogramToHeatmapData() {\n    const panelDatasource = this.getPanelDataSourceType();\n    let xBucketSize, yBucketSize, bucketsData, tsBuckets;\n\n    // Try to sort series by bucket bound, if datasource doesn't do it.\n    if (!_.includes(ds_support_histogram_sort, panelDatasource)) {\n      this.series.sort(sortSeriesByLabel);\n    }\n\n    // Convert histogram to heatmap. Each histogram bucket represented by the series which name is\n    // a top (or bottom, depends of datasource) bucket bound. Further, these values will be used as X axis labels.\n    bucketsData = histogramToHeatmap(this.series);\n\n    tsBuckets = _.map(this.series, 'label');\n    const yBucketBound = this.panel.yBucketBound;\n    if ((panelDatasource === 'prometheus' && yBucketBound !== 'lower') || yBucketBound === 'upper') {\n      // Prometheus labels are upper inclusive bounds, so add empty bottom bucket label.\n      tsBuckets = [''].concat(tsBuckets);\n    } else {\n      // Elasticsearch uses labels as lower bucket bounds, so add empty top bucket label.\n      // Use this as a default mode as well.\n      tsBuckets.push('');\n    }\n\n    // Calculate bucket size based on heatmap data\n    let xBucketBoundSet = _.map(_.keys(bucketsData), key => Number(key));\n    xBucketSize = calculateBucketSize(xBucketBoundSet);\n    // Always let yBucketSize=1 in 'tsbuckets' mode\n    yBucketSize = 1;\n\n    let { cards, cardStats } = convertToCards(bucketsData);\n\n    this.data = {\n      buckets: bucketsData,\n      xBucketSize: xBucketSize,\n      yBucketSize: yBucketSize,\n      tsBuckets: tsBuckets,\n      cards: cards,\n      cardStats: cardStats,\n    };\n  }\n\n  getPanelDataSourceType() {\n    if (this.datasource.meta && this.datasource.meta.id) {\n      return this.datasource.meta.id;\n    } else {\n      return 'unknown';\n    }\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n    this.dataWarning = null;\n    const datapointsCount = _.reduce(\n      this.series,\n      (sum, series) => {\n        return sum + series.datapoints.length;\n      },\n      0\n    );\n\n    if (datapointsCount === 0) {\n      this.dataWarning = {\n        title: 'No data points',\n        tip: 'No datapoints returned from data query',\n      };\n    } else {\n      for (let series of this.series) {\n        if (series.isOutsideRange) {\n          this.dataWarning = {\n            title: 'Data points outside time range',\n            tip: 'Can be caused by timezone mismatch or missing time filter in query',\n          };\n          break;\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    if (seriesData.datapoints === undefined) {\n      throw new Error('Heatmap error: data should be a time series');\n    }\n\n    let series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n\n    let datapoints = seriesData.datapoints || [];\n    if (datapoints && datapoints.length > 0) {\n      let last = datapoints[datapoints.length - 1][1];\n      let from = this.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n\n    return series;\n  }\n\n  parseSeries(series) {\n    let min = _.min(_.map(series, s => s.stats.min));\n    let minLog = _.min(_.map(series, s => s.stats.logmin));\n    let max = _.max(_.map(series, s => s.stats.max));\n\n    return {\n      max: max,\n      min: min,\n      minLog: minLog,\n    };\n  }\n\n  parseHistogramSeries(series) {\n    let bounds = _.map(series, s => Number(s.alias));\n    let min = _.min(bounds);\n    let minLog = _.min(bounds);\n    let max = _.max(bounds);\n\n    return {\n      max: max,\n      min: min,\n      minLog: minLog,\n    };\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n}\n","import './color_legend';\nimport { HeatmapCtrl } from './heatmap_ctrl';\n\nexport { HeatmapCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport flatten from '../../../core/utils/flatten';\nimport TimeSeries from '../../../core/time_series2';\nimport TableModel from '../../../core/table_model';\n\nvar transformers = {};\n\ntransformers['timeseries_to_rows'] = {\n  description: '时间序列转到行',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns = [{ text: 'Time', type: 'date' }, { text: 'Metric' }, { text: 'Value' }];\n\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers['timeseries_to_columns'] = {\n  description: '时间序列转到列',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({ text: '日期', type: 'date' });\n\n    // group by time\n    var points = {};\n\n    for (let i = 0; i < data.length; i++) {\n      var series = data[i];\n      model.columns.push({ text: series.target });\n\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = { time: dp[1] };\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (var time in points) {\n      var point = points[time];\n      var values = [point.time];\n\n      for (let i = 0; i < data.length; i++) {\n        var value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  },\n};\n\ntransformers['timeseries_aggregations'] = {\n  description: '时间序列聚合',\n  getColumns: function() {\n    return [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Current', value: 'current' },\n      { text: 'Count', value: 'count' },\n    ];\n  },\n  transform: function(data, panel, model) {\n    var i, y;\n    model.columns.push({ text: 'Metric' });\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({ text: panel.columns[i].text });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = new TimeSeries({\n        datapoints: data[i].datapoints,\n        alias: data[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      var cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  },\n};\n\ntransformers['annotations'] = {\n  description: '注释',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({ text: '日期', type: 'date' });\n    model.columns.push({ text: '标题' });\n    model.columns.push({ text: '文本' });\n    model.columns.push({ text: '标签' });\n\n    if (!data || !data.annotations || data.annotations.length === 0) {\n      return;\n    }\n\n    for (var i = 0; i < data.annotations.length; i++) {\n      var evt = data.annotations[i];\n      model.rows.push([evt.time, evt.title, evt.text, evt.tags]);\n    }\n  },\n};\n\ntransformers['table'] = {\n  description: '表格',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Single query returns data columns as is\n    if (data.length === 1) {\n      return [...data[0].columns];\n    }\n\n    // Track column indexes: name -> index\n    const columnNames = {};\n\n    // Union of all columns\n    const columns = data.reduce((acc, series) => {\n      series.columns.forEach(col => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n\n    return columns;\n  },\n  transform: function(data, panel, model) {\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    const noTableIndex = _.findIndex(data, d => d.type !== 'table');\n    if (noTableIndex > -1) {\n      throw {\n        message: `查询为 #${String.fromCharCode(\n          65 + noTableIndex\n        )} 的结果不是表格格式，尝试使用其他的转换格式。`,\n      };\n    }\n\n    // Single query returns data columns and rows as is\n    if (data.length === 1) {\n      model.columns = [...data[0].columns];\n      model.rows = [...data[0].rows];\n      return;\n    }\n\n    // Track column indexes of union: name -> index\n    const columnNames = {};\n\n    // Union of all non-value columns\n    const columnsUnion = data.reduce((acc, series) => {\n      series.columns.forEach(col => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n\n    // Map old column index to union index per series, e.g.,\n    // given columnNames {A: 0, B: 1} and\n    // data [{columns: [{ text: 'A' }]}, {columns: [{ text: 'B' }]}] => [[0], [1]]\n    const columnIndexMapper = data.map(series => series.columns.map(col => columnNames[col.text]));\n\n    // Flatten rows of all series and adjust new column indexes\n    const flattenedRows = data.reduce((acc, series, seriesIndex) => {\n      const mapper = columnIndexMapper[seriesIndex];\n      series.rows.forEach(row => {\n        const alteredRow = [];\n        // Shifting entries according to index mapper\n        mapper.forEach((to, from) => {\n          alteredRow[to] = row[from];\n        });\n        acc.push(alteredRow);\n      });\n      return acc;\n    }, []);\n\n    // Returns true if both rows have matching non-empty fields as well as matching\n    // indexes where one field is empty and the other is not\n    function areRowsMatching(columns, row, otherRow) {\n      let foundFieldToMatch = false;\n      for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\n        if (row[columnIndex] !== undefined && otherRow[columnIndex] !== undefined) {\n          if (row[columnIndex] !== otherRow[columnIndex]) {\n            return false;\n          }\n        } else if (row[columnIndex] === undefined || otherRow[columnIndex] === undefined) {\n          foundFieldToMatch = true;\n        }\n      }\n      return foundFieldToMatch;\n    }\n\n    // Merge rows that have same values for columns\n    const mergedRows = {};\n    const compactedRows = flattenedRows.reduce((acc, row, rowIndex) => {\n      if (!mergedRows[rowIndex]) {\n        // Look from current row onwards\n        let offset = rowIndex + 1;\n        // More than one row can be merged into current row\n        while (offset < flattenedRows.length) {\n          // Find next row that could be merged\n          const match = _.findIndex(flattenedRows, otherRow => areRowsMatching(columnsUnion, row, otherRow), offset);\n          if (match > -1) {\n            const matchedRow = flattenedRows[match];\n            // Merge values from match into current row if there is a gap in the current row\n            for (let columnIndex = 0; columnIndex < columnsUnion.length; columnIndex++) {\n              if (row[columnIndex] === undefined && matchedRow[columnIndex] !== undefined) {\n                row[columnIndex] = matchedRow[columnIndex];\n              }\n            }\n            // Don't visit this row again\n            mergedRows[match] = matchedRow;\n            // Keep looking for more rows to merge\n            offset = match + 1;\n          } else {\n            // No match found, stop looking\n            break;\n          }\n        }\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n\n    model.columns = columnsUnion;\n    model.rows = compactedRows;\n  },\n};\n\ntransformers['json'] = {\n  description: 'JSON 数据',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    var names: any = {};\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      var maxDocs = Math.min(series.datapoints.length, 100);\n      for (var y = 0; y < maxDocs; y++) {\n        var doc = series.datapoints[y];\n        var flattened = flatten(doc, null);\n        for (var propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return _.map(names, function(value, key) {\n      return { text: key, value: key };\n    });\n  },\n  transform: function(data, panel, model) {\n    var i, y, z;\n\n    for (let column of panel.columns) {\n      var tableCol: any = { text: column.text };\n\n      // if filterable data then set columns to filterable\n      if (data.length > 0 && data[0].filterable) {\n        tableCol.filterable = true;\n      }\n\n      model.columns.push(tableCol);\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({ text: 'JSON' });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var values = [];\n\n        if (_.isObject(dp) && panel.columns.length > 0) {\n          var flattened = flatten(dp, null);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  },\n};\n\nfunction transformDataToTable(data, panel) {\n  var model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  var transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw { message: 'Transformer ' + panel.transform + ' not found' };\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport { transformers, transformDataToTable };\n","import _ from 'lodash';\nimport { transformers } from './transformers';\n\nexport class TablePanelEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  transformers: any;\n  fontSizes: any;\n  addColumnSegment: any;\n  getColumnNames: any;\n  canSetColumns: boolean;\n  columnsHelpMessage: string;\n\n  /** @ngInject */\n  constructor($scope, private $q, private uiSegmentSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = '';\n\n    switch (this.panel.transform) {\n      case 'timeseries_aggregations': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'json': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'table': {\n        this.columnsHelpMessage = '列的内容及顺序由数据查询决定';\n      }\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    var segments = _.map(columns, (c: any) => this.uiSegmentSrv.newSegment({ value: c.text }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    var column = _.find(columns, { text: this.addColumnSegment.value });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({ text: 'Avg', value: 'avg' });\n    }\n\n    this.updateTransformHints();\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n","import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\n\nexport class ColumnOptionsCtrl {\n  panel: any;\n  panelCtrl: any;\n  colorModes: any;\n  columnStyles: any;\n  columnTypes: any;\n  fontSizes: any;\n  dateFormats: any;\n  addColumnSegment: any;\n  unitFormats: any;\n  getColumnNames: any;\n  activeStyleIndex: number;\n  mappingTypes: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = kbn.getUnitFormats();\n    this.colorModes = [\n      { text: '关闭', value: null },\n      { text: '单元格', value: 'cell' },\n      { text: '值', value: 'value' },\n      { text: '行', value: 'row' },\n    ];\n    this.columnTypes = [\n      { text: '数值', value: 'number' },\n      { text: '字符串', value: 'string' },\n      { text: '日期', value: 'date' },\n      { text: '隐藏', value: 'hidden' },\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.dateFormats = [\n      { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\n      { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\n      { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\n    ];\n    this.mappingTypes = [{ text: '数据值转文本', value: 1 }, { text: '数值范围转文本', value: 2 }];\n\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return _.map(this.panelCtrl.table.columns, function(col: any) {\n        return col.text;\n      });\n    };\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.panelCtrl.render();\n  }\n\n  addColumnStyle() {\n    var newStyleRule = {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n      colorMode: null,\n      pattern: '',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      thresholds: [],\n      mappingType: 1,\n    };\n\n    var styles = this.panel.styles;\n    var stylesCount = styles.length;\n    var indexToInsert = stylesCount;\n\n    // check if last is a catch all rule, then add it before that one\n    if (stylesCount > 0) {\n      var last = styles[stylesCount - 1];\n      if (last.pattern === '/.*/') {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  invertColorOrder(index) {\n    var ref = this.panel.styles[index].colors;\n    var copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n\n  onColorChange(styleIndex, colorIndex) {\n    return newColor => {\n      this.panel.styles[styleIndex].colors[colorIndex] = newColor;\n      this.render();\n    };\n  }\n\n  addValueMap(style) {\n    if (!style.valueMaps) {\n      style.valueMaps = [];\n    }\n    style.valueMaps.push({ value: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeValueMap(style, index) {\n    style.valueMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  addRangeMap(style) {\n    if (!style.rangeMaps) {\n      style.rangeMaps = [];\n    }\n    style.rangeMaps.push({ from: '', to: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeRangeMap(style, index) {\n    style.rangeMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function columnOptionsTab($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table/column_options.html',\n    controller: ColumnOptionsCtrl,\n  };\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\n\nexport class TableRenderer {\n  formatters: any[];\n  colorState: any;\n\n  constructor(private panel, private table, private isUtc, private sanitize, private templateSrv) {\n    this.initColumns();\n  }\n\n  setTable(table) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      let column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        let style = this.panel.styles[i];\n\n        var regex = kbn.stringToJsRegex(style.pattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = column.text.replace(regex, style.alias);\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value, style) {\n    if (!style.thresholds) {\n      return null;\n    }\n    for (var i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return style.colors[i];\n      }\n    }\n    return _.first(style.colors);\n  }\n\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return _.escape(v);\n    }\n  }\n\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return v => {\n        return undefined;\n      };\n    }\n\n    if (column.style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) {\n          v = v[0];\n        }\n        var date = moment(v);\n        if (this.isUtc) {\n          date = date.utc();\n        }\n        return date.format(column.style.dateFormat);\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return v => {\n        if (_.isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            // Allow both numeric and string values to be mapped\n            if ((!_.isString(v) && Number(map.value) === Number(v)) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      let valueFormatter = kbn.valueFormats[column.unit || column.style.unit];\n\n      return v => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (_.isString(v) || _.isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return valueFormatter(v, column.style.decimals, null);\n      };\n    }\n\n    return value => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value, style) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || _.isArray(value)) {\n      return;\n    }\n\n    var numericValue = Number(value);\n    if (numericValue === NaN) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex) {\n    let scopedVars = {};\n    let cell_variable;\n    let row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cell_variable = `__cell_${i}`;\n      scopedVars[cell_variable] = { value: row[i] };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex, value) {\n    return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n  }\n\n  renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n\n    var column = this.table.columns[columnIndex];\n    var style = '';\n    var cellClasses = [];\n    var cellClass = '';\n\n    if (this.colorState.cell) {\n      style = ' style=\"background-color:' + this.colorState.cell + '\"';\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      style = ' style=\"color:' + this.colorState.value + '\"';\n      this.colorState.value = null;\n    }\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    var columnHtml = '';\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      style = ' style=\"display:none;\"';\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      var scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value };\n\n      var cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      var cellLinkTooltip = this.templateSrv.replace(column.style.linkTooltip, scopedVars);\n      var cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n\n      columnHtml += `\n        <a href=\"${cellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${style}>\n          ${value}\n        </a>\n      `;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">\n          <i class=\"fa fa-search-minus\"></i>\n        </a>\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">\n          <i class=\"fa fa-search-plus\"></i>\n        </a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + style + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page) {\n    let pageSize = this.panel.pageSize || 100;\n    let startPos = page * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    var html = '';\n    let rowClasses = [];\n    let rowClass = '';\n\n    for (var y = startPos; y < endPos; y++) {\n      let row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      for (var i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    let rows = [];\n\n    for (var y = 0; y < this.table.rows.length; y++) {\n      let row = this.table.rows[y];\n      let new_row = [];\n      for (var i = 0; i < this.table.columns.length; i++) {\n        new_row.push(this.formatColumnValue(i, row[i]));\n      }\n      rows.push(new_row);\n    }\n    return {\n      columns: this.table.columns,\n      rows: rows,\n    };\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { transformDataToTable } from './transformers';\nimport { tablePanelEditor } from './editor';\nimport { columnOptionsTab } from './column_options';\nimport { TableRenderer } from './renderer';\n\nclass TablePanelCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  pageIndex: number;\n  dataRaw: any;\n  table: any;\n  renderer: any;\n\n  panelDefaults = {\n    targets: [{}],\n    transform: 'timeseries_to_columns',\n    pageSize: null,\n    showHeader: true,\n    styles: [\n      {\n        type: 'date',\n        pattern: 'Time',\n        alias: '日期',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n      {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n      },\n    ],\n    columns: [],\n    scroll: true,\n    fontSize: '100%',\n    sort: { col: 0, desc: true },\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, templateSrv, private annotationsSrv, private $sanitize, private variableSrv) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('选项', tablePanelEditor, 2);\n    this.addEditorTab('列风格', columnOptionsTab, 3);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: '导出 CSV', click: 'ctrl.exportCsv()' });\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.isTimezoneUtc(),\n      this.$sanitize,\n      this.templateSrv\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  moveQuery(target, direction) {\n    super.moveQuery(target, direction);\n    super.refresh();\n  }\n\n  exportCsv() {\n    var scope = this.$scope.$new(true);\n    scope.tableData = this.renderer.render_values();\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  link(scope, elem, attrs, ctrl: TablePanelCtrl) {\n    var data;\n    var panel = ctrl.panel;\n    var pageCount = 0;\n\n    function getTableHeight() {\n      var panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e) {\n      var el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      var pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      var startPage = Math.max(ctrl.pageIndex - 3, 0);\n      var endPage = Math.min(pageCount, startPage + 9);\n\n      var paginationList = $('<ul></ul>');\n\n      for (var i = startPage; i < endPage; i++) {\n        var activeClass = i === ctrl.pageIndex ? 'active' : '';\n        var pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      var panelElem = elem.parents('.panel-content');\n      var rootElem = elem.find('.table-panel-scroll');\n      var tbodyElem = elem.find('tbody');\n      var footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': panel.scroll ? getTableHeight() : '' });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e) {\n      let filterData = $(e.currentTarget).data();\n      var options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      ctrl.variableSrv.setAdhocFilter(options);\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    var unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', function(renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nexport { TablePanelCtrl, TablePanelCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.gauge';\nimport 'app/features/panellinks/link_srv';\n\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\n\nclass SingleStatCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  dataType = 'timeseries';\n  series: any[];\n  data: any;\n  fontSizes: any[];\n  unitFormats: any[];\n  invalidGaugeRange: boolean;\n  panel: any;\n  events: any;\n  valueNameOptions: any[] = [\n    { value: 'min', text: '最小' },\n    { value: 'max', text: '最大' },\n    { value: 'avg', text: '平均' },\n    { value: 'current', text: '当前' },\n    { value: 'total', text: '总和' },\n    { value: 'name', text: '名称' },\n    { value: 'first', text: '首个' },\n    { value: 'delta', text: 'Delta' },\n    { value: 'diff', text: '差值' },\n    { value: 'range', text: '范围' },\n    { value: 'last_time', text: '上个数据点的时间' },\n  ];\n  tableColumnOptions: any;\n\n  // Set and populate defaults\n  panelDefaults = {\n    links: [],\n    datasource: null,\n    maxDataPoints: 100,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    format: 'none',\n    prefix: '',\n    postfix: '',\n    nullText: null,\n    valueMaps: [{ value: 'null', op: '=', text: 'N/A' }],\n    mappingTypes: [{ name: 'value to text', value: 1 }, { name: 'range to text', value: 2 }],\n    rangeMaps: [{ from: 'null', to: 'null', text: 'N/A' }],\n    mappingType: 1,\n    nullPointMode: 'connected',\n    valueName: 'avg',\n    prefixFontSize: '50%',\n    valueFontSize: '80%',\n    postfixFontSize: '50%',\n    thresholds: '',\n    colorBackground: false,\n    colorValue: false,\n    colors: ['#299c46', 'rgba(237, 129, 40, 0.89)', '#d44a3a'],\n    sparkline: {\n      show: false,\n      full: false,\n      lineColor: 'rgb(31, 120, 193)',\n      fillColor: 'rgba(31, 118, 189, 0.18)',\n    },\n    gauge: {\n      show: false,\n      minValue: 0,\n      maxValue: 100,\n      thresholdMarkers: true,\n      thresholdLabels: false,\n    },\n    tableColumn: '',\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, private linkSrv) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.onSparklineColorChange = this.onSparklineColorChange.bind(this);\n    this.onSparklineFillChange = this.onSparklineFillChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('选项', 'public/app/plugins/panel/singlestat/editor.html', 2);\n    this.addEditorTab('值映射', 'public/app/plugins/panel/singlestat/mappings.html', 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    const data: any = {};\n    if (dataList.length > 0 && dataList[0].type === 'table') {\n      this.dataType = 'table';\n      const tableData = dataList.map(this.tableHandler.bind(this));\n      this.setTableValues(tableData, data);\n    } else {\n      this.dataType = 'timeseries';\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.setValues(data);\n    }\n    this.data = data;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints || [],\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  tableHandler(tableData) {\n    const datapoints = [];\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    this.tableColumnOptions = columnNames;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n      this.setTableColumnToSensibleDefault(tableData);\n    }\n\n    tableData.rows.forEach(row => {\n      const datapoint = {};\n\n      row.forEach((value, columnIndex) => {\n        const key = columnNames[columnIndex];\n        datapoint[key] = value;\n      });\n\n      datapoints.push(datapoint);\n    });\n\n    return datapoints;\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n    if (tableData.columns.length === 1) {\n      this.panel.tableColumn = tableData.columns[0].text;\n    } else {\n      this.panel.tableColumn = _.find(tableData.columns, col => {\n        return col.type !== 'time';\n      }).text;\n    }\n  }\n\n  setTableValues(tableData, data) {\n    if (!tableData || tableData.length === 0) {\n      return;\n    }\n\n    if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n      return;\n    }\n\n    const datapoint = tableData[0][0];\n    data.value = datapoint[this.panel.tableColumn];\n\n    if (_.isString(data.value)) {\n      data.valueFormatted = _.escape(data.value);\n      data.value = 0;\n      data.valueRounded = 0;\n    } else {\n      const decimalInfo = this.getDecimalsForValue(data.value);\n      const formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(\n        datapoint[this.panel.tableColumn],\n        decimalInfo.decimals,\n        decimalInfo.scaledDecimals\n      );\n      data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n    }\n\n    this.setValueMapping(data);\n  }\n\n  canModifyText() {\n    return !this.panel.gauge.show;\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex) {\n    return color => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result: any = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series.length > 1) {\n      var error: any = new Error();\n      error.message = 'Multiple Series Error';\n      error.data =\n        'Metric query returns ' +\n        this.series.length +\n        ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n' +\n        JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      let lastPoint = _.last(this.series[0].datapoints);\n      let lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n      if (this.panel.valueName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else if (this.panel.valueName === 'last_time') {\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        data.value = lastPoint[1];\n        data.valueRounded = data.value;\n        data.valueFormatted = formatFunc(data.value, this.dashboard.isTimezoneUtc());\n      } else {\n        data.value = this.series[0].stats[this.panel.valueName];\n        data.flotpairs = this.series[0].flotpairs;\n\n        let decimalInfo = this.getDecimalsForValue(data.value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars['__name'] = { value: this.series[0].label };\n    }\n    this.setValueMapping(data);\n  }\n\n  setValueMapping(data) {\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (let i = 0; i < this.panel.valueMaps.length; i++) {\n        let map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n        let map = this.panel.rangeMaps[i];\n        // special null case\n        if (map.from === 'null' && map.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(map.from);\n        var to = parseFloat(map.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = 'no value';\n    }\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({ value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({ from: '', to: '', text: '' });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.singlestat-panel');\n\n    function applyColoringThresholds(value, valueString) {\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">' + valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value) {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' + value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) {\n        var prefix = panel.prefix;\n        if (panel.colorPrefix) {\n          prefix = applyColoringThresholds(data.value, panel.prefix);\n        }\n        body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, prefix);\n      }\n\n      var value = data.valueFormatted;\n      if (panel.colorValue) {\n        value = applyColoringThresholds(data.value, value);\n      }\n      body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n      if (panel.postfix) {\n        var postfix = panel.postfix;\n        if (panel.colorPostfix) {\n          postfix = applyColoringThresholds(data.value, panel.postfix);\n        }\n        body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, postfix);\n      }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      var result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += data.valueFormatted;\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n    }\n\n    function addGauge() {\n      var width = elem.width();\n      var height = elem.height();\n      // Allow to use a bit more space for wide gauges\n      var dimension = Math.min(width, height * 1.3);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      var plotCanvas = $('<div></div>');\n      var plotCss = {\n        top: '10px',\n        margin: 'auto',\n        position: 'relative',\n        height: height * 0.9 + 'px',\n        width: dimension + 'px',\n      };\n\n      plotCanvas.css(plotCss);\n\n      var thresholds = [];\n      for (var i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i],\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length - 1],\n      });\n\n      var bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n\n      var fontScale = parseInt(panel.valueFontSize) / 100;\n      var fontSize = Math.min(dimension / 5, 100) * fontScale;\n      // Reduce gauge width if threshold labels enabled\n      var gaugeWidthReduceRatio = panel.gauge.thresholdLabels ? 1.5 : 1;\n      var gaugeWidth = Math.min(dimension / 6, 60) / gaugeWidthReduceRatio;\n      var thresholdMarkersWidth = gaugeWidth / 5;\n      var thresholdLabelFontSize = fontSize / 2.5;\n\n      var options = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: thresholdMarkersWidth + 1,\n                font: { size: thresholdLabelFontSize },\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n              formatter: function() {\n                return getValueText();\n              },\n              font: {\n                size: fontSize,\n                family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n              },\n            },\n            show: true,\n          },\n        },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: [[0, data.valueRounded]],\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss: any = {};\n      plotCss.position = 'absolute';\n\n      if (panel.sparkline.full) {\n        plotCss.bottom = '5px';\n        plotCss.left = '-5px';\n        plotCss.width = width - 10 + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n        plotCss.height = height - dynamicHeightMargin + 'px';\n      } else {\n        plotCss.bottom = '0px';\n        plotCss.left = '-5px';\n        plotCss.width = width - 10 + 'px';\n        plotCss.height = Math.floor(height * 0.25) + 'px';\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: { show: false },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            zero: false,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          mode: 'time',\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor,\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n      data = ctrl.data;\n\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n\n      var body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(function() {\n        if (panel.links.length === 0) {\n          return;\n        }\n        $timeout(function() {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function(evt) {\n        if (!linkInfo) {\n          return;\n        }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) {\n          return;\n        }\n\n        if (linkInfo.target === '_blank') {\n          window.open(linkInfo.href, '_blank');\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function() {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function(e) {\n        if (!linkInfo) {\n          return;\n        }\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY - 50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  if (!_.isFinite(value)) {\n    return null;\n  }\n\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n\n  return _.first(data.colorMap);\n}\n\nexport { SingleStatCtrl, SingleStatCtrl as PanelCtrl, getColorForValue };\n","import { PanelCtrl } from 'app/plugins/sdk';\n\nimport { contextSrv } from 'app/core/core';\n\nclass GettingStartedPanelCtrl extends PanelCtrl {\n  static templateUrl = 'public/app/plugins/panel/gettingstarted/module.html';\n  checksDone: boolean;\n  stepIndex: number;\n  steps: any;\n\n  /** @ngInject **/\n  constructor($scope, $injector, private backendSrv, datasourceSrv, private $q) {\n    super($scope, $injector);\n\n    this.stepIndex = 0;\n    this.steps = [];\n\n    this.steps.push({\n      title: '安装 Grafana',\n      icon: 'icon-gf icon-gf-check',\n      href: 'http://docs.grafana.org/',\n      target: '_blank',\n      note: '查看安装过程文档',\n      check: () => $q.when(true),\n    });\n\n    this.steps.push({\n      title: '添加你的第一个数据源',\n      cta: '添加数据源',\n      icon: 'icon-gf icon-gf-datasources',\n      href: 'datasources/new?gettingstarted',\n      check: () => {\n        return $q.when(\n          datasourceSrv.getMetricSources().filter(item => {\n            return item.meta.builtIn !== true;\n          }).length > 0\n        );\n      },\n    });\n\n    this.steps.push({\n      title: '添加你的第一个仪表盘',\n      cta: '创建仪表盘',\n      icon: 'icon-gf icon-gf-dashboard',\n      href: 'dashboard/new?gettingstarted',\n      check: () => {\n        return this.backendSrv.search({ limit: 1 }).then(result => {\n          return result.length > 0;\n        });\n      },\n    });\n\n    this.steps.push({\n      title: '邀请你的团队',\n      cta: '添加成员',\n      icon: 'icon-gf icon-gf-users',\n      href: 'org/users?gettingstarted',\n      check: () => {\n        return this.backendSrv.get('/api/org/users').then(res => {\n          return res.length > 1;\n        });\n      },\n    });\n\n    this.steps.push({\n      title: '安装应用与插件',\n      cta: '探索插件仓库',\n      icon: 'icon-gf icon-gf-apps',\n      href: 'https://grafana.com/plugins?utm_source=grafana_getting_started',\n      check: () => {\n        return this.backendSrv.get('/api/plugins', { embedded: 0, core: 0 }).then(plugins => {\n          return plugins.length > 0;\n        });\n      },\n    });\n  }\n\n  $onInit() {\n    this.stepIndex = -1;\n    return this.nextStep().then(res => {\n      this.checksDone = true;\n    });\n  }\n\n  nextStep() {\n    if (this.stepIndex === this.steps.length - 1) {\n      return this.$q.when();\n    }\n\n    this.stepIndex += 1;\n    var currentStep = this.steps[this.stepIndex];\n    return currentStep.check().then(passed => {\n      if (passed) {\n        currentStep.cssClass = 'completed';\n        return this.nextStep();\n      }\n\n      currentStep.cssClass = 'active';\n      return this.$q.when();\n    });\n  }\n\n  dismiss() {\n    this.dashboard.removePanel(this.panel, false);\n\n    this.backendSrv\n      .request({\n        method: 'PUT',\n        url: '/api/user/helpflags/1',\n        showSuccessAlert: false,\n      })\n      .then(res => {\n        contextSrv.user.helpFlags1 = res.helpFlags1;\n      });\n  }\n}\n\nexport { GettingStartedPanelCtrl, GettingStartedPanelCtrl as PanelCtrl };\n","import * as graphitePlugin from 'app/plugins/datasource/graphite/module';\nimport * as cloudwatchPlugin from 'app/plugins/datasource/cloudwatch/module';\nimport * as elasticsearchPlugin from 'app/plugins/datasource/elasticsearch/module';\nimport * as opentsdbPlugin from 'app/plugins/datasource/opentsdb/module';\nimport * as grafanaPlugin from 'app/plugins/datasource/grafana/module';\nimport * as influxdbPlugin from 'app/plugins/datasource/influxdb/module';\nimport * as loggingPlugin from 'app/plugins/datasource/logging/module';\nimport * as mixedPlugin from 'app/plugins/datasource/mixed/module';\nimport * as mysqlPlugin from 'app/plugins/datasource/mysql/module';\nimport * as postgresPlugin from 'app/plugins/datasource/postgres/module';\nimport * as prometheusPlugin from 'app/plugins/datasource/prometheus/module';\nimport * as mssqlPlugin from 'app/plugins/datasource/mssql/module';\nimport * as testDataDSPlugin from 'app/plugins/datasource/testdata/module';\n\nimport * as textPanel from 'app/plugins/panel/text/module';\nimport * as graphPanel from 'app/plugins/panel/graph/module';\nimport * as dashListPanel from 'app/plugins/panel/dashlist/module';\nimport * as pluginsListPanel from 'app/plugins/panel/pluginlist/module';\nimport * as alertListPanel from 'app/plugins/panel/alertlist/module';\nimport * as heatmapPanel from 'app/plugins/panel/heatmap/module';\nimport * as tablePanel from 'app/plugins/panel/table/module';\nimport * as singlestatPanel from 'app/plugins/panel/singlestat/module';\nimport * as gettingStartedPanel from 'app/plugins/panel/gettingstarted/module';\n\nconst builtInPlugins = {\n  'app/plugins/datasource/graphite/module': graphitePlugin,\n  'app/plugins/datasource/cloudwatch/module': cloudwatchPlugin,\n  'app/plugins/datasource/elasticsearch/module': elasticsearchPlugin,\n  'app/plugins/datasource/opentsdb/module': opentsdbPlugin,\n  'app/plugins/datasource/grafana/module': grafanaPlugin,\n  'app/plugins/datasource/influxdb/module': influxdbPlugin,\n  'app/plugins/datasource/logging/module': loggingPlugin,\n  'app/plugins/datasource/mixed/module': mixedPlugin,\n  'app/plugins/datasource/mysql/module': mysqlPlugin,\n  'app/plugins/datasource/postgres/module': postgresPlugin,\n  'app/plugins/datasource/mssql/module': mssqlPlugin,\n  'app/plugins/datasource/prometheus/module': prometheusPlugin,\n  'app/plugins/datasource/testdata/module': testDataDSPlugin,\n\n  'app/plugins/panel/text/module': textPanel,\n  'app/plugins/panel/graph/module': graphPanel,\n  'app/plugins/panel/dashlist/module': dashListPanel,\n  'app/plugins/panel/pluginlist/module': pluginsListPanel,\n  'app/plugins/panel/alertlist/module': alertListPanel,\n  'app/plugins/panel/heatmap/module': heatmapPanel,\n  'app/plugins/panel/table/module': tablePanel,\n  'app/plugins/panel/singlestat/module': singlestatPanel,\n  'app/plugins/panel/gettingstarted/module': gettingStartedPanel,\n};\n\nexport default builtInPlugins;\n","import System from 'systemjs/dist/system.js';\nimport _ from 'lodash';\nimport * as sdk from 'app/plugins/sdk';\nimport kbn from 'app/core/utils/kbn';\nimport moment from 'moment';\nimport angular from 'angular';\nimport jquery from 'jquery';\n\n// Experimental module exports\nimport prismjs from 'prismjs';\nimport slate from 'slate';\nimport slateReact from 'slate-react';\nimport slatePlain from 'slate-plain-serializer';\nimport react from 'react';\nimport reactDom from 'react-dom';\n\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport TableModel from 'app/core/table_model';\nimport { coreModule, appEvents, contextSrv } from 'app/core/core';\nimport * as datemath from 'app/core/utils/datemath';\nimport * as fileExport from 'app/core/utils/file_export';\nimport * as flatten from 'app/core/utils/flatten';\nimport * as ticks from 'app/core/utils/ticks';\nimport impressionSrv from 'app/core/services/impression_srv';\nimport builtInPlugins from './built_in_plugins';\nimport * as d3 from 'd3';\n\n// rxjs\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n// these imports add functions to Observable\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/combineAll';\n\n// add cache busting\nconst bust = `?_cache=${Date.now()}`;\nfunction locate(load) {\n  return load.address + bust;\n}\nSystem.registry.set('plugin-loader', System.newModule({ locate: locate }));\n\nSystem.config({\n  baseURL: 'public',\n  defaultExtension: 'js',\n  packages: {\n    plugins: {\n      defaultExtension: 'js',\n    },\n  },\n  map: {\n    text: 'vendor/plugin-text/text.js',\n    css: 'vendor/plugin-css/css.js',\n  },\n  meta: {\n    '/*': {\n      esModule: true,\n      authorization: true,\n      loader: 'plugin-loader',\n    },\n  },\n});\n\nfunction exposeToPlugin(name: string, component: any) {\n  System.registerDynamic(name, [], true, function(require, exports, module) {\n    module.exports = component;\n  });\n}\n\nexposeToPlugin('lodash', _);\nexposeToPlugin('moment', moment);\nexposeToPlugin('jquery', jquery);\nexposeToPlugin('angular', angular);\nexposeToPlugin('d3', d3);\nexposeToPlugin('rxjs/Subject', Subject);\nexposeToPlugin('rxjs/Observable', Observable);\n\n// Experimental modules\nexposeToPlugin('prismjs', prismjs);\nexposeToPlugin('slate', slate);\nexposeToPlugin('slate-react', slateReact);\nexposeToPlugin('slate-plain-serializer', slatePlain);\nexposeToPlugin('react', react);\nexposeToPlugin('react-dom', reactDom);\n\n// backward compatible path\nexposeToPlugin('vendor/npm/rxjs/Rx', {\n  Subject: Subject,\n  Observable: Observable,\n});\n\nexposeToPlugin('app/features/dashboard/impression_store', {\n  impressions: impressionSrv,\n  __esModule: true,\n});\n\nexposeToPlugin('app/plugins/sdk', sdk);\nexposeToPlugin('app/core/utils/datemath', datemath);\nexposeToPlugin('app/core/utils/file_export', fileExport);\nexposeToPlugin('app/core/utils/flatten', flatten);\nexposeToPlugin('app/core/utils/kbn', kbn);\nexposeToPlugin('app/core/utils/ticks', ticks);\n\nexposeToPlugin('app/core/config', config);\nexposeToPlugin('app/core/time_series', TimeSeries);\nexposeToPlugin('app/core/time_series2', TimeSeries);\nexposeToPlugin('app/core/table_model', TableModel);\nexposeToPlugin('app/core/app_events', appEvents);\nexposeToPlugin('app/core/core_module', coreModule);\nexposeToPlugin('app/core/core', {\n  coreModule: coreModule,\n  appEvents: appEvents,\n  contextSrv: contextSrv,\n  __esModule: true,\n});\n\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.pie';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport 'vendor/flot/jquery.flot.gauge';\n\nconst flotDeps = [\n  'jquery.flot',\n  'jquery.flot.pie',\n  'jquery.flot.time',\n  'jquery.flot.fillbelow',\n  'jquery.flot.crosshair',\n  'jquery.flot.stack',\n  'jquery.flot.selection',\n  'jquery.flot.stackpercent',\n  'jquery.flot.events',\n  'jquery.flot.gauge',\n];\nfor (let flotDep of flotDeps) {\n  exposeToPlugin(flotDep, { fakeDep: 1 });\n}\n\nexport function importPluginModule(path: string): Promise<any> {\n  let builtIn = builtInPlugins[path];\n  if (builtIn) {\n    return Promise.resolve(builtIn);\n  }\n  return System.import(path);\n}\n\nexport function loadPluginCss(options) {\n  if (config.bootData.user.lightTheme) {\n    System.import(options.light + '!css');\n  } else {\n    System.import(options.dark + '!css');\n  }\n}\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\nimport { importPluginModule } from './plugin_loader';\n\nexport class DatasourceSrv {\n  datasources: any;\n\n  /** @ngInject */\n  constructor(private $q, private $injector, private $rootScope, private templateSrv) {\n    this.init();\n  }\n\n  init() {\n    this.datasources = {};\n  }\n\n  get(name?) {\n    if (!name) {\n      return this.get(config.defaultDatasource);\n    }\n\n    name = this.templateSrv.replace(name);\n\n    if (name === 'default') {\n      return this.get(config.defaultDatasource);\n    }\n\n    if (this.datasources[name]) {\n      return this.$q.when(this.datasources[name]);\n    }\n\n    return this.loadDatasource(name);\n  }\n\n  loadDatasource(name) {\n    const dsConfig = config.datasources[name];\n    if (!dsConfig) {\n      return this.$q.reject({ message: '找不到名为： ' + name + ' 的数据源' });\n    }\n\n    const deferred = this.$q.defer();\n    const pluginDef = dsConfig.meta;\n\n    importPluginModule(pluginDef.module)\n      .then(plugin => {\n        // check if its in cache now\n        if (this.datasources[name]) {\n          deferred.resolve(this.datasources[name]);\n          return;\n        }\n\n        // plugin module needs to export a constructor function named Datasource\n        if (!plugin.Datasource) {\n          throw new Error('Plugin module is missing Datasource constructor');\n        }\n\n        const instance = this.$injector.instantiate(plugin.Datasource, { instanceSettings: dsConfig });\n        instance.meta = pluginDef;\n        instance.name = name;\n        this.datasources[name] = instance;\n        deferred.resolve(instance);\n      })\n      .catch(err => {\n        this.$rootScope.appEvent('alert-error', [dsConfig.name + ' plugin failed', err.toString()]);\n      });\n\n    return deferred.promise;\n  }\n\n  getAll() {\n    return config.datasources;\n  }\n\n  getAnnotationSources() {\n    const sources = [];\n\n    this.addDataSourceVariables(sources);\n\n    _.each(config.datasources, function(value) {\n      if (value.meta && value.meta.annotations) {\n        sources.push(value);\n      }\n    });\n\n    return sources;\n  }\n\n  getExploreSources() {\n    const { datasources } = config;\n    const es = Object.keys(datasources)\n      .map(name => datasources[name])\n      .filter(ds => ds.meta && ds.meta.explore);\n    return _.sortBy(es, ['name']);\n  }\n\n  getMetricSources(options) {\n    var metricSources = [];\n\n    _.each(config.datasources, function(value, key) {\n      if (value.meta && value.meta.metrics) {\n        let metricSource = { value: key, name: key, meta: value.meta, sort: key };\n\n        //Make sure grafana and mixed are sorted at the bottom\n        if (value.meta.id === 'grafana') {\n          metricSource.sort = String.fromCharCode(253);\n        } else if (value.meta.id === 'mixed') {\n          metricSource.sort = String.fromCharCode(254);\n        }\n\n        metricSources.push(metricSource);\n\n        if (key === config.defaultDatasource) {\n          metricSource = { value: null, name: 'default', meta: value.meta, sort: key };\n          metricSources.push(metricSource);\n        }\n      }\n    });\n\n    if (!options || !options.skipVariables) {\n      this.addDataSourceVariables(metricSources);\n    }\n\n    metricSources.sort(function(a, b) {\n      if (a.sort.toLowerCase() > b.sort.toLowerCase()) {\n        return 1;\n      }\n      if (a.sort.toLowerCase() < b.sort.toLowerCase()) {\n        return -1;\n      }\n      return 0;\n    });\n\n    return metricSources;\n  }\n\n  addDataSourceVariables(list) {\n    // look for data source variables\n    for (var i = 0; i < this.templateSrv.variables.length; i++) {\n      var variable = this.templateSrv.variables[i];\n      if (variable.type !== 'datasource') {\n        continue;\n      }\n\n      var first = variable.current.value;\n      if (first === 'default') {\n        first = config.defaultDatasource;\n      }\n\n      var ds = config.datasources[first];\n\n      if (ds) {\n        const key = `$${variable.name}`;\n        list.push({\n          name: key,\n          value: key,\n          meta: ds.meta,\n          sort: key,\n        });\n      }\n    }\n  }\n}\n\ncoreModule.service('datasourceSrv', DatasourceSrv);\nexport default DatasourceSrv;\n","import { PanelCtrl } from 'app/features/panel/panel_ctrl';\n\nexport class UnknownPanelCtrl extends PanelCtrl {\n  static templateUrl = 'public/app/plugins/panel/unknown/module.html';\n\n  /** @ngInject */\n  constructor($scope, $injector) {\n    super($scope, $injector);\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\n\nimport config from 'app/core/config';\nimport coreModule from 'app/core/core_module';\nimport { importPluginModule } from './plugin_loader';\n\nimport { UnknownPanelCtrl } from 'app/plugins/panel/unknown/module';\n\n/** @ngInject **/\nfunction pluginDirectiveLoader($compile, datasourceSrv, $rootScope, $q, $http, $templateCache) {\n  function getTemplate(component) {\n    if (component.template) {\n      return $q.when(component.template);\n    }\n    var cached = $templateCache.get(component.templateUrl);\n    if (cached) {\n      return $q.when(cached);\n    }\n    return $http.get(component.templateUrl).then(res => {\n      return res.data;\n    });\n  }\n\n  function relativeTemplateUrlToAbs(templateUrl, baseUrl) {\n    if (!templateUrl) {\n      return undefined;\n    }\n    if (templateUrl.indexOf('public') === 0) {\n      return templateUrl;\n    }\n    return baseUrl + '/' + templateUrl;\n  }\n\n  function getPluginComponentDirective(options) {\n    // handle relative template urls for plugin templates\n    options.Component.templateUrl = relativeTemplateUrlToAbs(options.Component.templateUrl, options.baseUrl);\n\n    return function() {\n      return {\n        templateUrl: options.Component.templateUrl,\n        template: options.Component.template,\n        restrict: 'E',\n        controller: options.Component,\n        controllerAs: 'ctrl',\n        bindToController: true,\n        scope: options.bindings,\n        link: (scope, elem, attrs, ctrl) => {\n          if (ctrl.link) {\n            ctrl.link(scope, elem, attrs, ctrl);\n          }\n          if (ctrl.init) {\n            ctrl.init();\n          }\n        },\n      };\n    };\n  }\n\n  function loadPanelComponentInfo(scope, attrs) {\n    var componentInfo: any = {\n      name: 'panel-plugin-' + scope.panel.type,\n      bindings: { dashboard: '=', panel: '=', row: '=' },\n      attrs: {\n        dashboard: 'dashboard',\n        panel: 'panel',\n        class: 'panel-height-helper',\n      },\n    };\n\n    let panelInfo = config.panels[scope.panel.type];\n    var panelCtrlPromise = Promise.resolve(UnknownPanelCtrl);\n    if (panelInfo) {\n      panelCtrlPromise = importPluginModule(panelInfo.module).then(function(panelModule) {\n        return panelModule.PanelCtrl;\n      });\n    }\n\n    return panelCtrlPromise.then(function(PanelCtrl: any) {\n      componentInfo.Component = PanelCtrl;\n\n      if (!PanelCtrl || PanelCtrl.registered) {\n        return componentInfo;\n      }\n\n      if (PanelCtrl.templatePromise) {\n        return PanelCtrl.templatePromise.then(res => {\n          return componentInfo;\n        });\n      }\n\n      if (panelInfo) {\n        PanelCtrl.templateUrl = relativeTemplateUrlToAbs(PanelCtrl.templateUrl, panelInfo.baseUrl);\n      }\n\n      PanelCtrl.templatePromise = getTemplate(PanelCtrl).then(template => {\n        PanelCtrl.templateUrl = null;\n        PanelCtrl.template = `<grafana-panel ctrl=\"ctrl\" class=\"panel-height-helper\">${template}</grafana-panel>`;\n        return componentInfo;\n      });\n\n      return PanelCtrl.templatePromise;\n    });\n  }\n\n  function getModule(scope, attrs) {\n    switch (attrs.type) {\n      // QueryCtrl\n      case 'query-ctrl': {\n        let datasource = scope.target.datasource || scope.ctrl.panel.datasource;\n        return datasourceSrv.get(datasource).then(ds => {\n          scope.datasource = ds;\n\n          return importPluginModule(ds.meta.module).then(dsModule => {\n            return {\n              baseUrl: ds.meta.baseUrl,\n              name: 'query-ctrl-' + ds.meta.id,\n              bindings: { target: '=', panelCtrl: '=', datasource: '=' },\n              attrs: {\n                target: 'target',\n                'panel-ctrl': 'ctrl.panelCtrl',\n                datasource: 'datasource',\n              },\n              Component: dsModule.QueryCtrl,\n            };\n          });\n        });\n      }\n      // Annotations\n      case 'annotations-query-ctrl': {\n        return importPluginModule(scope.ctrl.currentDatasource.meta.module).then(function(dsModule) {\n          return {\n            baseUrl: scope.ctrl.currentDatasource.meta.baseUrl,\n            name: 'annotations-query-ctrl-' + scope.ctrl.currentDatasource.meta.id,\n            bindings: { annotation: '=', datasource: '=' },\n            attrs: {\n              annotation: 'ctrl.currentAnnotation',\n              datasource: 'ctrl.currentDatasource',\n            },\n            Component: dsModule.AnnotationsQueryCtrl,\n          };\n        });\n      }\n      // Datasource ConfigCtrl\n      case 'datasource-config-ctrl': {\n        var dsMeta = scope.ctrl.datasourceMeta;\n        return importPluginModule(dsMeta.module).then(function(dsModule): any {\n          if (!dsModule.ConfigCtrl) {\n            return { notFound: true };\n          }\n\n          return {\n            baseUrl: dsMeta.baseUrl,\n            name: 'ds-config-' + dsMeta.id,\n            bindings: { meta: '=', current: '=' },\n            attrs: { meta: 'ctrl.datasourceMeta', current: 'ctrl.current' },\n            Component: dsModule.ConfigCtrl,\n          };\n        });\n      }\n      // AppConfigCtrl\n      case 'app-config-ctrl': {\n        let model = scope.ctrl.model;\n        return importPluginModule(model.module).then(function(appModule) {\n          return {\n            baseUrl: model.baseUrl,\n            name: 'app-config-' + model.id,\n            bindings: { appModel: '=', appEditCtrl: '=' },\n            attrs: { 'app-model': 'ctrl.model', 'app-edit-ctrl': 'ctrl' },\n            Component: appModule.ConfigCtrl,\n          };\n        });\n      }\n      // App Page\n      case 'app-page': {\n        let appModel = scope.ctrl.appModel;\n        return importPluginModule(appModel.module).then(function(appModule) {\n          return {\n            baseUrl: appModel.baseUrl,\n            name: 'app-page-' + appModel.id + '-' + scope.ctrl.page.slug,\n            bindings: { appModel: '=' },\n            attrs: { 'app-model': 'ctrl.appModel' },\n            Component: appModule[scope.ctrl.page.component],\n          };\n        });\n      }\n      // Panel\n      case 'panel': {\n        return loadPanelComponentInfo(scope, attrs);\n      }\n      default: {\n        return $q.reject({\n          message: 'Could not find component type: ' + attrs.type,\n        });\n      }\n    }\n  }\n\n  function appendAndCompile(scope, elem, componentInfo) {\n    var child = angular.element(document.createElement(componentInfo.name));\n    _.each(componentInfo.attrs, (value, key) => {\n      child.attr(key, value);\n    });\n\n    $compile(child)(scope);\n    elem.empty();\n\n    // let a binding digest cycle complete before adding to dom\n    setTimeout(function() {\n      elem.append(child);\n      scope.$applyAsync(function() {\n        scope.$broadcast('component-did-mount');\n        scope.$broadcast('refresh');\n      });\n    });\n  }\n\n  function registerPluginComponent(scope, elem, attrs, componentInfo) {\n    if (componentInfo.notFound) {\n      elem.empty();\n      return;\n    }\n\n    if (!componentInfo.Component) {\n      throw {\n        message: 'Failed to find exported plugin component for ' + componentInfo.name,\n      };\n    }\n\n    if (!componentInfo.Component.registered) {\n      var directiveName = attrs.$normalize(componentInfo.name);\n      var directiveFn = getPluginComponentDirective(componentInfo);\n      coreModule.directive(directiveName, directiveFn);\n      componentInfo.Component.registered = true;\n    }\n\n    appendAndCompile(scope, elem, componentInfo);\n  }\n\n  return {\n    restrict: 'E',\n    link: function(scope, elem, attrs) {\n      getModule(scope, attrs)\n        .then(function(componentInfo) {\n          registerPluginComponent(scope, elem, attrs, componentInfo);\n        })\n        .catch(err => {\n          $rootScope.appEvent('alert-error', ['插件报错', err.message || err]);\n          console.log('Plugin component error', err);\n        });\n    },\n  };\n}\n\ncoreModule.directive('pluginComponent', pluginDirectiveLoader);\n","import config from 'app/core/config';\n\nimport coreModule from 'app/core/core_module';\nimport { PanelContainer } from './dashgrid/PanelContainer';\nimport { DashboardModel } from './dashboard_model';\nimport { PanelModel } from './panel_model';\n\nexport class DashboardCtrl implements PanelContainer {\n  dashboard: DashboardModel;\n  dashboardViewState: any;\n  loadedFallbackDashboard: boolean;\n  editTab: number;\n\n  /** @ngInject */\n  constructor(\n    private $scope,\n    private $rootScope,\n    private keybindingSrv,\n    private timeSrv,\n    private variableSrv,\n    private alertingSrv,\n    private dashboardSrv,\n    private unsavedChangesSrv,\n    private dashboardViewStateSrv,\n    public playlistSrv,\n    private panelLoader\n  ) {\n    // temp hack due to way dashboards are loaded\n    // can't use controllerAs on route yet\n    $scope.ctrl = this;\n\n    // TODO: break out settings view to separate view & controller\n    this.editTab = 0;\n\n    // funcs called from React component bindings and needs this binding\n    this.getPanelContainer = this.getPanelContainer.bind(this);\n  }\n\n  setupDashboard(data) {\n    try {\n      this.setupDashboardInternal(data);\n    } catch (err) {\n      this.onInitFailed(err, '仪表盘初始化失败', true);\n    }\n  }\n\n  setupDashboardInternal(data) {\n    const dashboard = this.dashboardSrv.create(data.dashboard, data.meta);\n    this.dashboardSrv.setCurrent(dashboard);\n\n    // init services\n    this.timeSrv.init(dashboard);\n    this.alertingSrv.init(dashboard, data.alerts);\n\n    // template values service needs to initialize completely before\n    // the rest of the dashboard can load\n    this.variableSrv\n      .init(dashboard)\n      // template values failes are non fatal\n      .catch(this.onInitFailed.bind(this, '模板初始化失败', false))\n      // continue\n      .finally(() => {\n        this.dashboard = dashboard;\n        this.dashboard.processRepeats();\n        this.dashboard.updateSubmenuVisibility();\n        this.dashboard.autoFitPanels(window.innerHeight);\n\n        this.unsavedChangesSrv.init(dashboard, this.$scope);\n\n        // TODO refactor ViewStateSrv\n        this.$scope.dashboard = dashboard;\n        this.dashboardViewState = this.dashboardViewStateSrv.create(this.$scope);\n\n        this.keybindingSrv.setupDashboardBindings(this.$scope, dashboard);\n        this.setWindowTitleAndTheme();\n\n        this.$scope.appEvent('dashboard-initialized', dashboard);\n      })\n      .catch(this.onInitFailed.bind(this, '仪表盘初始化失败', true));\n  }\n\n  onInitFailed(msg, fatal, err) {\n    console.log(msg, err);\n\n    if (err.data && err.data.message) {\n      err.message = err.data.message;\n    } else if (!err.message) {\n      err = { message: err.toString() };\n    }\n\n    this.$scope.appEvent('alert-error', [msg, err.message]);\n\n    // protect against  recursive fallbacks\n    if (fatal && !this.loadedFallbackDashboard) {\n      this.loadedFallbackDashboard = true;\n      this.setupDashboard({ dashboard: { title: '仪表盘初始化失败' } });\n    }\n  }\n\n  templateVariableUpdated() {\n    this.dashboard.processRepeats();\n  }\n\n  setWindowTitleAndTheme() {\n    window.document.title = config.window_title_prefix + this.dashboard.title;\n  }\n\n  showJsonEditor(evt, options) {\n    var editScope = this.$rootScope.$new();\n    editScope.object = options.object;\n    editScope.updateHandler = options.updateHandler;\n    this.$scope.appEvent('show-dash-editor', {\n      src: 'public/app/partials/edit_json.html',\n      scope: editScope,\n    });\n  }\n\n  getDashboard() {\n    return this.dashboard;\n  }\n\n  getPanelLoader() {\n    return this.panelLoader;\n  }\n\n  timezoneChanged() {\n    this.$rootScope.$broadcast('refresh');\n  }\n\n  getPanelContainer() {\n    return this;\n  }\n\n  onRemovingPanel(evt, options) {\n    options = options || {};\n    if (!options.panelId) {\n      return;\n    }\n\n    var panelInfo = this.dashboard.getPanelInfoById(options.panelId);\n    this.removePanel(panelInfo.panel, true);\n  }\n\n  removePanel(panel: PanelModel, ask: boolean) {\n    // confirm deletion\n    if (ask !== false) {\n      var text2, confirmText;\n\n      if (panel.alert) {\n        text2 = '面板包含报警规则，删除面板也将删除报警规则';\n        confirmText = '确认';\n      }\n\n      this.$scope.appEvent('confirm-modal', {\n        title: '删除面板',\n        text: '确定要删除此面板吗?',\n        text2: text2,\n        icon: 'fa-trash',\n        confirmText: confirmText,\n        yesText: '删除',\n        onConfirm: () => {\n          this.removePanel(panel, false);\n        },\n      });\n      return;\n    }\n\n    this.dashboard.removePanel(panel);\n  }\n\n  init(dashboard) {\n    this.$scope.onAppEvent('show-json-editor', this.showJsonEditor.bind(this));\n    this.$scope.onAppEvent('template-variable-value-updated', this.templateVariableUpdated.bind(this));\n    this.$scope.onAppEvent('panel-remove', this.onRemovingPanel.bind(this));\n    this.setupDashboard(dashboard);\n  }\n}\n\ncoreModule.controller('DashboardCtrl', DashboardCtrl);\n","import './plugin_edit_ctrl';\nimport './plugin_page_ctrl';\nimport './plugin_list_ctrl';\nimport './import_list/import_list';\nimport './ds_edit_ctrl';\nimport './ds_dashboards_ctrl';\nimport './ds_list_ctrl';\nimport './datasource_srv';\nimport './plugin_component';\n","import './history_srv';\n\nimport _ from 'lodash';\nimport angular from 'angular';\nimport moment from 'moment';\n\nimport locationUtil from 'app/core/utils/location_util';\nimport { DashboardModel } from '../dashboard_model';\nimport { HistoryListOpts, RevisionsModel, CalculateDiffOptions, HistorySrv } from './history_srv';\n\nexport class HistoryListCtrl {\n  appending: boolean;\n  dashboard: DashboardModel;\n  delta: { basic: string; json: string };\n  diff: string;\n  limit: number;\n  loading: boolean;\n  max: number;\n  mode: string;\n  revisions: RevisionsModel[];\n  start: number;\n  newInfo: RevisionsModel;\n  baseInfo: RevisionsModel;\n  canCompare: boolean;\n  isNewLatest: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $route,\n    private $rootScope,\n    private $location,\n    private $q,\n    private historySrv: HistorySrv,\n    public $scope\n  ) {\n    this.appending = false;\n    this.diff = 'basic';\n    this.limit = 10;\n    this.loading = false;\n    this.max = 2;\n    this.mode = 'list';\n    this.start = 0;\n    this.canCompare = false;\n\n    this.$rootScope.onAppEvent('dashboard-saved', this.onDashboardSaved.bind(this), $scope);\n    this.resetFromSource();\n  }\n\n  onDashboardSaved() {\n    this.resetFromSource();\n  }\n\n  switchMode(mode: string) {\n    this.mode = mode;\n    if (this.mode === 'list') {\n      this.reset();\n    }\n  }\n\n  dismiss() {\n    this.$rootScope.appEvent('hide-dash-editor');\n  }\n\n  addToLog() {\n    this.start = this.start + this.limit;\n    this.getLog(true);\n  }\n\n  revisionSelectionChanged() {\n    let selected = _.filter(this.revisions, { checked: true }).length;\n    this.canCompare = selected === 2;\n  }\n\n  formatDate(date) {\n    return this.dashboard.formatDate(date);\n  }\n\n  formatBasicDate(date) {\n    const now = this.dashboard.timezone === 'browser' ? moment() : moment.utc();\n    const then = this.dashboard.timezone === 'browser' ? moment(date) : moment.utc(date);\n    return then.from(now);\n  }\n\n  getDiff(diff: string) {\n    this.diff = diff;\n    this.mode = 'compare';\n\n    // have it already been fetched?\n    if (this.delta[this.diff]) {\n      return this.$q.when(this.delta[this.diff]);\n    }\n\n    const selected = _.filter(this.revisions, { checked: true });\n\n    this.newInfo = selected[0];\n    this.baseInfo = selected[1];\n    this.isNewLatest = this.newInfo.version === this.dashboard.version;\n\n    this.loading = true;\n    const options: CalculateDiffOptions = {\n      new: {\n        dashboardId: this.dashboard.id,\n        version: this.newInfo.version,\n      },\n      base: {\n        dashboardId: this.dashboard.id,\n        version: this.baseInfo.version,\n      },\n      diffType: diff,\n    };\n\n    return this.historySrv\n      .calculateDiff(options)\n      .then(response => {\n        this.delta[this.diff] = response;\n      })\n      .catch(() => {\n        this.mode = 'list';\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n\n  getLog(append = false) {\n    this.loading = !append;\n    this.appending = append;\n    const options: HistoryListOpts = {\n      limit: this.limit,\n      start: this.start,\n    };\n\n    return this.historySrv\n      .getHistoryList(this.dashboard, options)\n      .then(revisions => {\n        // set formatted dates & default values\n        for (let rev of revisions) {\n          rev.createdDateString = this.formatDate(rev.created);\n          rev.ageString = this.formatBasicDate(rev.created);\n          rev.checked = false;\n        }\n\n        this.revisions = append ? this.revisions.concat(revisions) : revisions;\n      })\n      .catch(err => {\n        this.loading = false;\n      })\n      .finally(() => {\n        this.loading = false;\n        this.appending = false;\n      });\n  }\n\n  isLastPage() {\n    return _.find(this.revisions, rev => rev.version === 1);\n  }\n\n  reset() {\n    this.delta = { basic: '', json: '' };\n    this.diff = 'basic';\n    this.mode = 'list';\n    this.revisions = _.map(this.revisions, rev => _.extend({}, rev, { checked: false }));\n    this.canCompare = false;\n    this.start = 0;\n    this.isNewLatest = false;\n  }\n\n  resetFromSource() {\n    this.revisions = [];\n    return this.getLog().then(this.reset.bind(this));\n  }\n\n  restore(version: number) {\n    this.$rootScope.appEvent('confirm-modal', {\n      title: '还原版本',\n      text: '',\n      text2: `您确定要将仪表盘还原到版本 ${version}吗？ 所有未保存的更改都将丢失。`,\n      icon: 'fa-history',\n      yesText: `是的，恢复到版本 ${version}`,\n      onConfirm: this.restoreConfirm.bind(this, version),\n    });\n  }\n\n  restoreConfirm(version: number) {\n    this.loading = true;\n    return this.historySrv\n      .restoreDashboard(this.dashboard, version)\n      .then(response => {\n        this.$location.url(locationUtil.stripBaseFromUrl(response.url)).replace();\n        this.$route.reload();\n        this.$rootScope.appEvent('alert-success', ['仪表盘已恢复', '恢复到版本 ' + version]);\n      })\n      .catch(() => {\n        this.mode = 'list';\n        this.loading = false;\n      });\n  }\n}\n\nexport function dashboardHistoryDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/history/history.html',\n    controller: HistoryListCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('gfDashboardHistory', dashboardHistoryDirective);\n","import coreModule from 'app/core/core_module';\n\nexport class AlertingSrv {\n  dashboard: any;\n  alerts: any[];\n\n  init(dashboard, alerts) {\n    this.dashboard = dashboard;\n    this.alerts = alerts || [];\n  }\n}\n\ncoreModule.service('alertingSrv', AlertingSrv);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { DashboardModel } from '../dashboard_model';\n\nexport interface HistoryListOpts {\n  limit: number;\n  start: number;\n}\n\nexport interface RevisionsModel {\n  id: number;\n  checked: boolean;\n  dashboardId: number;\n  parentVersion: number;\n  version: number;\n  created: Date;\n  createdBy: string;\n  message: string;\n}\n\nexport interface CalculateDiffOptions {\n  new: DiffTarget;\n  base: DiffTarget;\n  diffType: string;\n}\n\nexport interface DiffTarget {\n  dashboardId: number;\n  version: number;\n  unsavedDashboard?: DashboardModel; // when doing diffs against unsaved dashboard version\n}\n\nexport class HistorySrv {\n  /** @ngInject */\n  constructor(private backendSrv) {}\n\n  getHistoryList(dashboard: DashboardModel, options: HistoryListOpts) {\n    const id = dashboard && dashboard.id ? dashboard.id : void 0;\n    return id ? this.backendSrv.get(`api/dashboards/id/${id}/versions`, options) : Promise.resolve([]);\n  }\n\n  calculateDiff(options: CalculateDiffOptions) {\n    return this.backendSrv.post('api/dashboards/calculate-diff', options);\n  }\n\n  restoreDashboard(dashboard: DashboardModel, version: number) {\n    const id = dashboard && dashboard.id ? dashboard.id : void 0;\n    const url = `api/dashboards/id/${id}/restore`;\n\n    return id && _.isNumber(version) ? this.backendSrv.post(url, { version }) : Promise.resolve({});\n  }\n}\n\ncoreModule.service('historySrv', HistorySrv);\n","import angular from 'angular';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport * as dateMath from 'app/core/utils/datemath';\nimport impressionSrv from 'app/core/services/impression_srv';\n\nexport class DashboardLoaderSrv {\n  /** @ngInject */\n  constructor(\n    private backendSrv,\n    private dashboardSrv,\n    private datasourceSrv,\n    private $http,\n    private $q,\n    private $timeout,\n    contextSrv,\n    private $routeParams,\n    private $rootScope\n  ) {}\n\n  _dashboardLoadFailed(title, snapshot?) {\n    snapshot = snapshot || false;\n    return {\n      meta: {\n        canStar: false,\n        isSnapshot: snapshot,\n        canDelete: false,\n        canSave: false,\n        canEdit: false,\n        dashboardNotFound: true,\n      },\n      dashboard: { title: title },\n    };\n  }\n\n  loadDashboard(type, slug, uid) {\n    var promise;\n\n    if (type === 'script') {\n      promise = this._loadScriptedDashboard(slug);\n    } else if (type === 'snapshot') {\n      promise = this.backendSrv.get('/api/snapshots/' + slug).catch(() => {\n        return this._dashboardLoadFailed('未找到快照', true);\n      });\n    } else {\n      promise = this.backendSrv\n        .getDashboardByUid(uid)\n        .then(result => {\n          if (result.meta.isFolder) {\n            this.$rootScope.appEvent('alert-error', ['未找到仪表板']);\n            throw new Error('Dashboard not found');\n          }\n          return result;\n        })\n        .catch(() => {\n          return this._dashboardLoadFailed('未找到', true);\n        });\n    }\n\n    promise.then(function(result) {\n      if (result.meta.dashboardNotFound !== true) {\n        impressionSrv.addDashboardImpression(result.dashboard.id);\n      }\n\n      return result;\n    });\n\n    return promise;\n  }\n\n  _loadScriptedDashboard(file) {\n    var url = 'public/dashboards/' + file.replace(/\\.(?!js)/, '/') + '?' + new Date().getTime();\n\n    return this.$http({ url: url, method: 'GET' })\n      .then(this._executeScript.bind(this))\n      .then(\n        result => {\n          return {\n            meta: {\n              fromScript: true,\n              canDelete: false,\n              canSave: false,\n              canStar: false,\n            },\n            dashboard: result.data,\n          };\n        },\n        err => {\n          console.log('Script dashboard error ' + err);\n          this.$rootScope.appEvent('alert-error', [\n            '脚本错误',\n            '请确保它存在并返回有效的仪表盘',\n          ]);\n          return this._dashboardLoadFailed('Scripted dashboard');\n        }\n      );\n  }\n\n  _executeScript(result) {\n    var services = {\n      dashboardSrv: this.dashboardSrv,\n      datasourceSrv: this.datasourceSrv,\n      $q: this.$q,\n    };\n\n    /*jshint -W054 */\n    var script_func = new Function(\n      'ARGS',\n      'kbn',\n      'dateMath',\n      '_',\n      'moment',\n      'window',\n      'document',\n      '$',\n      'jQuery',\n      'services',\n      result.data\n    );\n    var script_result = script_func(this.$routeParams, kbn, dateMath, _, moment, window, document, $, $, services);\n\n    // Handle async dashboard scripts\n    if (_.isFunction(script_result)) {\n      var deferred = this.$q.defer();\n      script_result(dashboard => {\n        this.$timeout(() => {\n          deferred.resolve({ data: dashboard });\n        });\n      });\n      return deferred.promise;\n    }\n\n    return { data: script_result };\n  }\n}\n\nangular.module('grafana.services').service('dashboardLoaderSrv', DashboardLoaderSrv);\n","import moment from 'moment';\nimport angular from 'angular';\nimport { appEvents, NavModel } from 'app/core/core';\nimport { DashboardModel } from '../dashboard_model';\n\nexport class DashNavCtrl {\n  dashboard: DashboardModel;\n  navModel: NavModel;\n  titleTooltip: string;\n\n  /** @ngInject */\n  constructor(private $scope, private dashboardSrv, private $location, public playlistSrv) {\n    appEvents.on('save-dashboard', this.saveDashboard.bind(this), $scope);\n\n    if (this.dashboard.meta.isSnapshot) {\n      var meta = this.dashboard.meta;\n      this.titleTooltip = '创建于: &nbsp;' + moment(meta.created).calendar();\n      if (meta.expires) {\n        this.titleTooltip += '<br>失效于: &nbsp;' + moment(meta.expires).fromNow() + '<br>';\n      }\n    }\n  }\n\n  toggleSettings() {\n    let search = this.$location.search();\n    if (search.editview) {\n      delete search.editview;\n    } else {\n      search.editview = 'settings';\n    }\n    this.$location.search(search);\n  }\n\n  close() {\n    let search = this.$location.search();\n    if (search.editview) {\n      delete search.editview;\n    } else if (search.fullscreen) {\n      delete search.fullscreen;\n      delete search.edit;\n    }\n    this.$location.search(search);\n  }\n\n  starDashboard() {\n    this.dashboardSrv.starDashboard(this.dashboard.id, this.dashboard.meta.isStarred).then(newState => {\n      this.dashboard.meta.isStarred = newState;\n    });\n  }\n\n  shareDashboard(tabIndex) {\n    var modalScope = this.$scope.$new();\n    modalScope.tabIndex = tabIndex;\n    modalScope.dashboard = this.dashboard;\n\n    appEvents.emit('show-modal', {\n      src: 'public/app/features/dashboard/partials/shareModal.html',\n      scope: modalScope,\n    });\n  }\n\n  hideTooltip(evt) {\n    angular.element(evt.currentTarget).tooltip('hide');\n  }\n\n  saveDashboard() {\n    return this.dashboardSrv.saveDashboard();\n  }\n\n  showSearch() {\n    appEvents.emit('show-dash-search');\n  }\n\n  addPanel() {\n    appEvents.emit('dash-scroll', { animate: true, evt: 0 });\n\n    if (this.dashboard.panels.length > 0 && this.dashboard.panels[0].type === 'add-panel') {\n      return; // Return if the \"Add panel\" exists already\n    }\n\n    this.dashboard.addPanel({\n      type: 'add-panel',\n      gridPos: { x: 0, y: 0, w: 12, h: 9 },\n      title: '面板标题',\n    });\n  }\n\n  navItemClicked(navItem, evt) {\n    if (navItem.clickHandler) {\n      navItem.clickHandler();\n      evt.preventDefault();\n    }\n  }\n}\n\nexport function dashNavDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/dashnav/dashnav.html',\n    controller: DashNavCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    transclude: true,\n    scope: { dashboard: '=' },\n  };\n}\n\nangular.module('grafana.directives').directive('dashnav', dashNavDirective);\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class SubmenuCtrl {\n  annotations: any;\n  variables: any;\n  dashboard: any;\n\n  /** @ngInject */\n  constructor(private $rootScope, private variableSrv, private $location) {\n    this.annotations = this.dashboard.templating.list;\n    this.variables = this.variableSrv.variables;\n  }\n\n  annotationStateChanged() {\n    this.$rootScope.$broadcast('refresh');\n  }\n\n  variableUpdated(variable) {\n    this.variableSrv.variableUpdated(variable, true);\n  }\n\n  openEditView(editview) {\n    var search = _.extend(this.$location.search(), { editview: editview });\n    this.$location.search(search);\n  }\n}\n\nexport function submenuDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/submenu/submenu.html',\n    controller: SubmenuCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('dashboardSubmenu', submenuDirective);\n","import coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"modal-body\">\n\t<div class=\"modal-header\">\n\t\t<h2 class=\"modal-header-title\">\n\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t<span class=\"p-l-1\">另存为...</span>\n\t\t</h2>\n\n\t\t<a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n\t\t\t<i class=\"fa fa-remove\"></i>\n\t\t</a>\n\t</div>\n\n\t<form name=\"ctrl.saveForm\" class=\"modal-content\" novalidate>\n\t\t<div class=\"p-t-2\">\n\t\t\t<div class=\"gf-form\">\n\t\t\t\t<label class=\"gf-form-label width-7\">新名称</label>\n\t\t\t\t<input type=\"text\" class=\"gf-form-input\" ng-model=\"ctrl.clone.title\" give-focus=\"true\" required>\n\t\t\t</div>\n      <div class=\"gf-form\">\n        <folder-picker initial-folder-id=\"ctrl.folderId\"\n                       on-change=\"ctrl.onFolderChange($folder)\"\n                       enter-folder-creation=\"ctrl.onEnterFolderCreation()\"\n                       exit-folder-creation=\"ctrl.onExitFolderCreation()\"\n                       enable-create-new=\"true\"\n                       label-class=\"width-7\">\n        </folder-picker>\n      </div>\n\t\t</div>\n\n\t\t<div class=\"gf-form-button-row text-center\">\n\t\t\t<button type=\"submit\" class=\"btn btn-success\" ng-click=\"ctrl.save()\" ng-disabled=\"!ctrl.isValidFolderSelection\">保存</button>\n\t\t\t<a class=\"btn-text\" ng-click=\"ctrl.dismiss();\">取消</a>\n\t\t</div>\n\t</form>\n</div>\n`;\n\nexport class SaveDashboardAsModalCtrl {\n  clone: any;\n  folderId: any;\n  dismiss: () => void;\n  isValidFolderSelection = true;\n\n  /** @ngInject */\n  constructor(private dashboardSrv) {\n    var dashboard = this.dashboardSrv.getCurrent();\n    this.clone = dashboard.getSaveModelClone();\n    this.clone.id = null;\n    this.clone.uid = '';\n    this.clone.title += ' 副本';\n    this.clone.editable = true;\n    this.clone.hideControls = false;\n    this.folderId = dashboard.meta.folderId;\n\n    // remove alerts if source dashboard is already persisted\n    // do not want to create alert dupes\n    if (dashboard.id > 0) {\n      this.clone.panels.forEach(panel => {\n        if (panel.type === 'graph' && panel.alert) {\n          delete panel.thresholds;\n        }\n        delete panel.alert;\n      });\n    }\n\n    delete this.clone.autoUpdate;\n  }\n\n  save() {\n    return this.dashboardSrv.save(this.clone, { folderId: this.folderId }).then(this.dismiss);\n  }\n\n  keyDown(evt) {\n    if (evt.keyCode === 13) {\n      this.save();\n    }\n  }\n\n  onFolderChange(folder) {\n    this.folderId = folder.id;\n  }\n\n  onEnterFolderCreation() {\n    this.isValidFolderSelection = false;\n  }\n\n  onExitFolderCreation() {\n    this.isValidFolderSelection = true;\n  }\n}\n\nexport function saveDashboardAsDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveDashboardAsModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveDashboardAsModal', saveDashboardAsDirective);\n","import coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-save\"></i>\n      <span class=\"p-l-1\">保存更改</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <form name=\"ctrl.saveForm\" ng-submit=\"ctrl.save()\" class=\"modal-content\" novalidate>\n    <div class=\"p-t-1\">\n      <div class=\"gf-form-group\" ng-if=\"ctrl.timeChange || ctrl.variableValueChange\">\n\t\t    <gf-form-switch class=\"gf-form\"\n\t\t\t    label=\"保存当前的时间范围\" ng-if=\"ctrl.timeChange\" label-class=\"width-12\" switch-class=\"max-width-6\"\n\t\t\t    checked=\"ctrl.saveTimerange\" on-change=\"buildUrl()\">\n\t\t    </gf-form-switch>\n\t\t    <gf-form-switch class=\"gf-form\"\n\t\t\t    label=\"保存当前的所有变量\" ng-if=\"ctrl.variableValueChange\" label-class=\"width-12\" switch-class=\"max-width-6\"\n\t\t\t    checked=\"ctrl.saveVariables\" on-change=\"buildUrl()\">\n\t\t    </gf-form-switch>\n\t    </div>\n      <div class=\"gf-form\">\n        <label class=\"gf-form-hint\">\n          <input\n            type=\"text\"\n            name=\"message\"\n            class=\"gf-form-input\"\n            placeholder=\"添加备注以描述您的更改 &hellip;\"\n            give-focus=\"true\"\n            ng-model=\"ctrl.message\"\n            ng-model-options=\"{allowInvalid: true}\"\n            ng-maxlength=\"this.max\"\n            maxlength=\"64\"\n            autocomplete=\"off\" />\n          <small class=\"gf-form-hint-text muted\" ng-cloak>\n            <span ng-class=\"{'text-error': ctrl.saveForm.message.$invalid && ctrl.saveForm.message.$dirty }\">\n              {{ctrl.message.length || 0}}\n            </span>\n            / {{ctrl.max}} 字符\n          </small>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"gf-form-button-row text-center\">\n      <button\n        id=\"saveBtn\"\n        type=\"submit\"\n        class=\"btn btn-success\"\n        ng-class=\"{'btn-success--processing': ctrl.isSaving}\"\n        ng-disabled=\"ctrl.saveForm.$invalid || ctrl.isSaving\"\n      >\n        <span ng-if=\"!ctrl.isSaving\">保存</span>\n        <span ng-if=\"ctrl.isSaving === true\">保存中...</span>\n      </button>\n      <button class=\"btn btn-inverse\" ng-click=\"ctrl.dismiss();\">取消</button>\n    </div>\n  </form>\n</div>\n`;\n\nexport class SaveDashboardModalCtrl {\n  message: string;\n  saveVariables = false;\n  saveTimerange = false;\n  time: any;\n  originalTime: any;\n  current = [];\n  originalCurrent = [];\n  max: number;\n  saveForm: any;\n  isSaving: boolean;\n  dismiss: () => void;\n  timeChange = false;\n  variableValueChange = false;\n\n  /** @ngInject */\n  constructor(private dashboardSrv) {\n    this.message = '';\n    this.max = 64;\n    this.isSaving = false;\n    this.timeChange = this.dashboardSrv.getCurrent().hasTimeChanged();\n    this.variableValueChange = this.dashboardSrv.getCurrent().hasVariableValuesChanged();\n  }\n\n  save() {\n    if (!this.saveForm.$valid) {\n      return;\n    }\n\n    var options = {\n      saveVariables: this.saveVariables,\n      saveTimerange: this.saveTimerange,\n      message: this.message,\n    };\n\n    var dashboard = this.dashboardSrv.getCurrent();\n    var saveModel = dashboard.getSaveModelClone(options);\n\n    this.isSaving = true;\n\n    return this.dashboardSrv.save(saveModel, options).then(this.postSave.bind(this, options));\n  }\n\n  postSave(options) {\n    if (options.saveVariables) {\n      this.dashboardSrv.getCurrent().resetOriginalVariables();\n    }\n\n    if (options.saveTimerange) {\n      this.dashboardSrv.getCurrent().resetOriginalTime();\n    }\n\n    this.dismiss();\n  }\n}\n\nexport function saveDashboardModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveDashboardModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveDashboardModal', saveDashboardModalDirective);\n","import angular from 'angular';\nimport { saveAs } from 'file-saver';\nimport coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-save\"></i><span class=\"p-l-1\">无法保存配置的仪表盘</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <div class=\"modal-content\">\n    <small>\n      此仪表盘无法从Grafana的UI中保存，因为它已从其他来源进行配置。\n      复制JSON或将其保存到下面的文件中。 然后，您可以在相应的配置源中更新仪表盘。<br/>\n      <i>查看 <a class=\"external-link\" href=\"http://docs.grafana.org/administration/provisioning/#dashboards\" target=\"_blank\">\n      文档</a> 获取有关配置的更多信息。</i>\n    </small>\n    <div class=\"p-t-2\">\n      <div class=\"gf-form\">\n        <code-editor content=\"ctrl.dashboardJson\" data-mode=\"json\" data-max-lines=15></code-editor>\n      </div>\n      <div class=\"gf-form-button-row\">\n        <button class=\"btn btn-success\" clipboard-button=\"ctrl.getJsonForClipboard()\">\n          <i class=\"fa fa-clipboard\"></i>&nbsp;将JSON复制到剪贴板\n        </button>\n        <button class=\"btn btn-secondary\" clipboard-button=\"ctrl.save()\">\n          <i class=\"fa fa-save\"></i>&nbsp;将JSON保存到文件\n        </button>\n        <a class=\"btn btn-link\" ng-click=\"ctrl.dismiss();\">取消</a>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport class SaveProvisionedDashboardModalCtrl {\n  dash: any;\n  dashboardJson: string;\n  dismiss: () => void;\n\n  /** @ngInject */\n  constructor(dashboardSrv) {\n    this.dash = dashboardSrv.getCurrent().getSaveModelClone();\n    delete this.dash.id;\n    this.dashboardJson = angular.toJson(this.dash, true);\n  }\n\n  save() {\n    var blob = new Blob([angular.toJson(this.dash, true)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, this.dash.title + '-' + new Date().getTime() + '.json');\n  }\n\n  getJsonForClipboard() {\n    return this.dashboardJson;\n  }\n}\n\nexport function saveProvisionedDashboardModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveProvisionedDashboardModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveProvisionedDashboardModal', saveProvisionedDashboardModalDirective);\n","import angular from 'angular';\nimport config from 'app/core/config';\nimport moment from 'moment';\n\nexport class ShareModalCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope, $location, $timeout, timeSrv, templateSrv, linkSrv) {\n    $scope.options = {\n      forCurrent: true,\n      includeTemplateVars: true,\n      theme: 'current',\n    };\n    $scope.editor = { index: $scope.tabIndex || 0 };\n\n    $scope.init = function() {\n      $scope.modeSharePanel = $scope.panel ? true : false;\n\n      $scope.tabs = [{ title: '链接', src: 'shareLink.html' }];\n\n      if ($scope.modeSharePanel) {\n        $scope.modalTitle = '分享面板';\n        $scope.tabs.push({ title: '嵌入式', src: 'shareEmbed.html' });\n      } else {\n        $scope.modalTitle = '分享';\n      }\n\n      if (!$scope.dashboard.meta.isSnapshot) {\n        $scope.tabs.push({ title: '快照', src: 'shareSnapshot.html' });\n      }\n\n      if (!$scope.dashboard.meta.isSnapshot && !$scope.modeSharePanel) {\n        $scope.tabs.push({ title: '导出', src: 'shareExport.html' });\n      }\n\n      $scope.buildUrl();\n    };\n\n    $scope.buildUrl = function() {\n      var baseUrl = $location.absUrl();\n      var queryStart = baseUrl.indexOf('?');\n\n      if (queryStart !== -1) {\n        baseUrl = baseUrl.substring(0, queryStart);\n      }\n\n      var params = angular.copy($location.search());\n\n      var range = timeSrv.timeRange();\n      params.from = range.from.valueOf();\n      params.to = range.to.valueOf();\n      params.orgId = config.bootData.user.orgId;\n\n      if ($scope.options.includeTemplateVars) {\n        templateSrv.fillVariableValuesForUrl(params);\n      }\n\n      if (!$scope.options.forCurrent) {\n        delete params.from;\n        delete params.to;\n      }\n\n      if ($scope.options.theme !== 'current') {\n        params.theme = $scope.options.theme;\n      }\n\n      if ($scope.modeSharePanel) {\n        params.panelId = $scope.panel.id;\n        params.fullscreen = true;\n      } else {\n        delete params.panelId;\n        delete params.fullscreen;\n      }\n\n      $scope.shareUrl = linkSrv.addParamsToUrl(baseUrl, params);\n\n      var soloUrl = baseUrl.replace(config.appSubUrl + '/dashboard/', config.appSubUrl + '/dashboard-solo/');\n      soloUrl = soloUrl.replace(config.appSubUrl + '/d/', config.appSubUrl + '/d-solo/');\n      delete params.fullscreen;\n      delete params.edit;\n      soloUrl = linkSrv.addParamsToUrl(soloUrl, params);\n\n      $scope.iframeHtml = '<iframe src=\"' + soloUrl + '\" width=\"450\" height=\"200\" frameborder=\"0\"></iframe>';\n\n      $scope.imageUrl = soloUrl.replace(\n        config.appSubUrl + '/dashboard-solo/',\n        config.appSubUrl + '/render/dashboard-solo/'\n      );\n      $scope.imageUrl = $scope.imageUrl.replace(config.appSubUrl + '/d-solo/', config.appSubUrl + '/render/d-solo/');\n      $scope.imageUrl += '&width=1000&height=500' + $scope.getLocalTimeZone();\n    };\n\n    // This function will try to return the proper full name of the local timezone\n    // Chrome does not handle the timezone offset (but phantomjs does)\n    $scope.getLocalTimeZone = function() {\n      let utcOffset = '&tz=UTC' + encodeURIComponent(moment().format('Z'));\n\n      // Older browser does not the internationalization API\n      if (!(<any>window).Intl) {\n        return utcOffset;\n      }\n\n      const dateFormat = (<any>window).Intl.DateTimeFormat();\n      if (!dateFormat.resolvedOptions) {\n        return utcOffset;\n      }\n\n      const options = dateFormat.resolvedOptions();\n      if (!options.timeZone) {\n        return utcOffset;\n      }\n\n      return '&tz=' + encodeURIComponent(options.timeZone);\n    };\n\n    $scope.getShareUrl = function() {\n      return $scope.shareUrl;\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('ShareModalCtrl', ShareModalCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class ShareSnapshotCtrl {\n  /** @ngInject **/\n  constructor($scope, $rootScope, $location, backendSrv, $timeout, timeSrv) {\n    $scope.snapshot = {\n      name: $scope.dashboard.title,\n      expires: 0,\n      timeoutSeconds: 4,\n    };\n\n    $scope.step = 1;\n\n    $scope.expireOptions = [\n      { text: '1 小时', value: 60 * 60 },\n      { text: '1 天', value: 60 * 60 * 24 },\n      { text: '7 天', value: 60 * 60 * 24 * 7 },\n      { text: '从不', value: 0 },\n    ];\n\n    $scope.accessOptions = [\n      { text: '拥有链接的任何人', value: 1 },\n      { text: '组织用户', value: 2 },\n      { text: '在网上公开', value: 3 },\n    ];\n\n    $scope.init = function() {\n      backendSrv.get('/api/snapshot/shared-options').then(function(options) {\n        $scope.externalUrl = options['externalSnapshotURL'];\n        $scope.sharingButtonText = options['externalSnapshotName'];\n        $scope.externalEnabled = options['externalEnabled'];\n      });\n    };\n\n    $scope.apiUrl = '/api/snapshots';\n\n    $scope.createSnapshot = function(external) {\n      $scope.dashboard.snapshot = {\n        timestamp: new Date(),\n      };\n\n      if (!external) {\n        $scope.dashboard.snapshot.originalUrl = $location.absUrl();\n      }\n\n      $scope.loading = true;\n      $scope.snapshot.external = external;\n\n      $rootScope.$broadcast('refresh');\n\n      $timeout(function() {\n        $scope.saveSnapshot(external);\n      }, $scope.snapshot.timeoutSeconds * 1000);\n    };\n\n    $scope.saveSnapshot = function(external) {\n      var dash = $scope.dashboard.getSaveModelClone();\n      $scope.scrubDashboard(dash);\n\n      var cmdData = {\n        dashboard: dash,\n        name: dash.title,\n        expires: $scope.snapshot.expires,\n      };\n\n      var postUrl = external ? $scope.externalUrl + $scope.apiUrl : $scope.apiUrl;\n\n      backendSrv.post(postUrl, cmdData).then(\n        function(results) {\n          $scope.loading = false;\n\n          if (external) {\n            $scope.deleteUrl = results.deleteUrl;\n            $scope.snapshotUrl = results.url;\n            $scope.saveExternalSnapshotRef(cmdData, results);\n          } else {\n            var url = $location.url();\n            var baseUrl = $location.absUrl();\n\n            if (url !== '/') {\n              baseUrl = baseUrl.replace(url, '') + '/';\n            }\n\n            $scope.snapshotUrl = baseUrl + 'dashboard/snapshot/' + results.key;\n            $scope.deleteUrl = baseUrl + 'api/snapshots-delete/' + results.deleteKey;\n          }\n\n          $scope.step = 2;\n        },\n        function() {\n          $scope.loading = false;\n        }\n      );\n    };\n\n    $scope.getSnapshotUrl = function() {\n      return $scope.snapshotUrl;\n    };\n\n    $scope.scrubDashboard = function(dash) {\n      // change title\n      dash.title = $scope.snapshot.name;\n\n      // make relative times absolute\n      dash.time = timeSrv.timeRange();\n\n      // remove panel queries & links\n      _.each(dash.panels, function(panel) {\n        panel.targets = [];\n        panel.links = [];\n        panel.datasource = null;\n      });\n\n      // remove annotation queries\n      dash.annotations.list = _.chain(dash.annotations.list)\n        .filter(function(annotation) {\n          return annotation.enable;\n        })\n        .map(function(annotation) {\n          return {\n            name: annotation.name,\n            enable: annotation.enable,\n            iconColor: annotation.iconColor,\n            snapshotData: annotation.snapshotData,\n            type: annotation.type,\n            builtIn: annotation.builtIn,\n            hide: annotation.hide,\n          };\n        })\n        .value();\n\n      // remove template queries\n      _.each(dash.templating.list, function(variable) {\n        variable.query = '';\n        variable.options = variable.current;\n        variable.refresh = false;\n      });\n\n      // snapshot single panel\n      if ($scope.modeSharePanel) {\n        var singlePanel = $scope.panel.getSaveModel();\n        singlePanel.gridPos.w = 24;\n        singlePanel.gridPos.x = 0;\n        singlePanel.gridPos.y = 0;\n        singlePanel.gridPos.h = 20;\n        dash.panels = [singlePanel];\n      }\n\n      // cleanup snapshotData\n      delete $scope.dashboard.snapshot;\n      $scope.dashboard.forEachPanel(function(panel) {\n        delete panel.snapshotData;\n      });\n      _.each($scope.dashboard.annotations.list, function(annotation) {\n        delete annotation.snapshotData;\n      });\n    };\n\n    $scope.deleteSnapshot = function() {\n      backendSrv.get($scope.deleteUrl).then(function() {\n        $scope.step = 3;\n      });\n    };\n\n    $scope.saveExternalSnapshotRef = function(cmdData, results) {\n      // save external in local instance as well\n      cmdData.external = true;\n      cmdData.key = results.key;\n      cmdData.deleteKey = results.deleteKey;\n      backendSrv.post('/api/snapshots/', cmdData);\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('ShareSnapshotCtrl', ShareSnapshotCtrl);\n","import coreModule from 'app/core/core_module';\nimport { DashboardModel } from './dashboard_model';\nimport locationUtil from 'app/core/utils/location_util';\n\nexport class DashboardSrv {\n  dash: any;\n\n  /** @ngInject */\n  constructor(private backendSrv, private $rootScope, private $location) {}\n\n  create(dashboard, meta) {\n    return new DashboardModel(dashboard, meta);\n  }\n\n  setCurrent(dashboard) {\n    this.dash = dashboard;\n  }\n\n  getCurrent() {\n    return this.dash;\n  }\n\n  handleSaveDashboardError(clone, options, err) {\n    options = options || {};\n    options.overwrite = true;\n\n    if (err.data && err.data.status === 'version-mismatch') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: '冲突',\n        text: '其他人已更新此仪表板。',\n        text2: '你还想保存这个仪表板吗?',\n        yesText: '保存并覆盖',\n        icon: 'fa-warning',\n        onConfirm: () => {\n          this.save(clone, options);\n        },\n      });\n    }\n\n    if (err.data && err.data.status === 'name-exists') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: '冲突',\n        text: '所选文件夹中已存在相同名称的仪表板。',\n        text2: '你还想保存这个仪表板吗?',\n        yesText: '保存并覆盖',\n        icon: 'fa-warning',\n        onConfirm: () => {\n          this.save(clone, options);\n        },\n      });\n    }\n\n    if (err.data && err.data.status === 'plugin-dashboard') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: '插件仪表板',\n        text: err.data.message,\n        text2: '更新插件时，您的更改将丢失。 使用“另存为”创建自定义版本。',\n        yesText: '覆盖',\n        icon: 'fa-warning',\n        altActionText: '另存为',\n        onAltAction: () => {\n          this.showSaveAsModal();\n        },\n        onConfirm: () => {\n          this.save(clone, { overwrite: true });\n        },\n      });\n    }\n  }\n\n  postSave(clone, data) {\n    this.dash.version = data.version;\n\n    const newUrl = locationUtil.stripBaseFromUrl(data.url);\n    const currentPath = this.$location.path();\n\n    if (newUrl !== currentPath) {\n      this.$location.url(newUrl).replace();\n    }\n\n    this.$rootScope.appEvent('dashboard-saved', this.dash);\n    this.$rootScope.appEvent('alert-success', ['仪表盘已保存']);\n\n    return this.dash;\n  }\n\n  save(clone, options) {\n    options = options || {};\n    options.folderId = options.folderId >= 0 ? options.folderId : this.dash.meta.folderId || clone.folderId;\n\n    return this.backendSrv\n      .saveDashboard(clone, options)\n      .then(this.postSave.bind(this, clone))\n      .catch(this.handleSaveDashboardError.bind(this, clone, options));\n  }\n\n  saveDashboard(options?, clone?) {\n    if (clone) {\n      this.setCurrent(this.create(clone, this.dash.meta));\n    }\n\n    if (this.dash.meta.provisioned) {\n      return this.showDashboardProvisionedModal();\n    }\n\n    if (!this.dash.meta.canSave && options.makeEditable !== true) {\n      return Promise.resolve();\n    }\n\n    if (this.dash.title === 'New dashboard') {\n      return this.showSaveAsModal();\n    }\n\n    if (this.dash.version > 0) {\n      return this.showSaveModal();\n    }\n\n    return this.save(this.dash.getSaveModelClone(), options);\n  }\n\n  saveJSONDashboard(json: string) {\n    return this.save(JSON.parse(json), {});\n  }\n\n  showDashboardProvisionedModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-provisioned-dashboard-modal dismiss=\"dismiss()\"></save-provisioned-dashboard-modal>',\n    });\n  }\n\n  showSaveAsModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-dashboard-as-modal dismiss=\"dismiss()\"></save-dashboard-as-modal>',\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  showSaveModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-dashboard-modal dismiss=\"dismiss()\"></save-dashboard-modal>',\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  starDashboard(dashboardId, isStarred) {\n    let promise;\n\n    if (isStarred) {\n      promise = this.backendSrv.delete('/api/user/stars/dashboard/' + dashboardId).then(() => {\n        return false;\n      });\n    } else {\n      promise = this.backendSrv.post('/api/user/stars/dashboard/' + dashboardId).then(() => {\n        return true;\n      });\n    }\n\n    return promise.then(res => {\n      if (this.dash && this.dash.id === dashboardId) {\n        this.dash.meta.isStarred = res;\n      }\n      return res;\n    });\n  }\n}\n\ncoreModule.service('dashboardSrv', DashboardSrv);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport config from 'app/core/config';\nimport { DashboardModel } from './dashboard_model';\n\n// represents the transient view state\n// like fullscreen panel & edit\nexport class DashboardViewState {\n  state: any;\n  panelScopes: any;\n  $scope: any;\n  dashboard: DashboardModel;\n  editStateChanged: any;\n  fullscreenPanel: any;\n  oldTimeRange: any;\n\n  /** @ngInject */\n  constructor($scope, private $location, private $timeout, private $rootScope) {\n    var self = this;\n    self.state = {};\n    self.panelScopes = [];\n    self.$scope = $scope;\n    self.dashboard = $scope.dashboard;\n\n    $scope.onAppEvent('$routeUpdate', function() {\n      var urlState = self.getQueryStringState();\n      if (self.needsSync(urlState)) {\n        self.update(urlState, true);\n      }\n    });\n\n    $scope.onAppEvent('panel-change-view', function(evt, payload) {\n      self.update(payload);\n    });\n\n    $scope.onAppEvent('panel-initialized', function(evt, payload) {\n      self.registerPanel(payload.scope);\n    });\n\n    // this marks changes to location during this digest cycle as not to add history item\n    // don't want url changes like adding orgId to add browser history\n    $location.replace();\n    this.update(this.getQueryStringState());\n  }\n\n  needsSync(urlState) {\n    return _.isEqual(this.state, urlState) === false;\n  }\n\n  getQueryStringState() {\n    var state = this.$location.search();\n    state.panelId = parseInt(state.panelId) || null;\n    state.fullscreen = state.fullscreen ? true : null;\n    state.edit = state.edit === 'true' || state.edit === true || null;\n    state.editview = state.editview || null;\n    state.orgId = config.bootData.user.orgId;\n    return state;\n  }\n\n  serializeToUrl() {\n    var urlState = _.clone(this.state);\n    urlState.fullscreen = this.state.fullscreen ? true : null;\n    urlState.edit = this.state.edit ? true : null;\n    return urlState;\n  }\n\n  update(state, fromRouteUpdated?) {\n    // implement toggle logic\n    if (state.toggle) {\n      delete state.toggle;\n      if (this.state.fullscreen && state.fullscreen) {\n        if (this.state.edit === state.edit) {\n          state.fullscreen = !state.fullscreen;\n        }\n      }\n    }\n\n    // remember if editStateChanged\n    this.editStateChanged = (state.edit || false) !== (this.state.edit || false);\n\n    _.extend(this.state, state);\n    this.dashboard.meta.fullscreen = this.state.fullscreen;\n\n    if (!this.state.fullscreen) {\n      this.state.fullscreen = null;\n      this.state.edit = null;\n      // clear panel id unless in solo mode\n      if (!this.dashboard.meta.soloMode) {\n        this.state.panelId = null;\n      }\n    }\n\n    if ((this.state.fullscreen || this.dashboard.meta.soloMode) && this.state.panelId) {\n      // Trying to render panel in fullscreen when it's in the collapsed row causes an issue.\n      // So in this case expand collapsed row first.\n      this.toggleCollapsedPanelRow(this.state.panelId);\n    }\n\n    // if no edit state cleanup tab parm\n    if (!this.state.edit) {\n      delete this.state.tab;\n    }\n\n    // do not update url params if we are here\n    // from routeUpdated event\n    if (fromRouteUpdated !== true) {\n      this.$location.search(this.serializeToUrl());\n    }\n\n    this.syncState();\n  }\n\n  toggleCollapsedPanelRow(panelId) {\n    for (let panel of this.dashboard.panels) {\n      if (panel.collapsed) {\n        for (let rowPanel of panel.panels) {\n          if (rowPanel.id === panelId) {\n            this.dashboard.toggleRow(panel);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  syncState() {\n    if (this.panelScopes.length === 0) {\n      return;\n    }\n\n    if (this.dashboard.meta.fullscreen) {\n      var panelScope = this.getPanelScope(this.state.panelId);\n      if (!panelScope) {\n        return;\n      }\n\n      if (this.fullscreenPanel) {\n        // if already fullscreen\n        if (this.fullscreenPanel === panelScope && this.editStateChanged === false) {\n          return;\n        } else {\n          this.leaveFullscreen(false);\n        }\n      }\n\n      if (!panelScope.ctrl.editModeInitiated) {\n        panelScope.ctrl.initEditMode();\n      }\n\n      if (!panelScope.ctrl.fullscreen) {\n        this.enterFullscreen(panelScope);\n      }\n    } else if (this.fullscreenPanel) {\n      this.leaveFullscreen(true);\n    }\n  }\n\n  getPanelScope(id) {\n    return _.find(this.panelScopes, function(panelScope) {\n      return panelScope.ctrl.panel.id === id;\n    });\n  }\n\n  leaveFullscreen(render) {\n    var self = this;\n    var ctrl = self.fullscreenPanel.ctrl;\n\n    ctrl.editMode = false;\n    ctrl.fullscreen = false;\n\n    this.dashboard.setViewMode(ctrl.panel, false, false);\n    this.$scope.appEvent('panel-fullscreen-exit', { panelId: ctrl.panel.id });\n    this.$scope.appEvent('dash-scroll', { restore: true });\n\n    if (!render) {\n      return false;\n    }\n\n    this.$timeout(function() {\n      if (self.oldTimeRange !== ctrl.range) {\n        self.$rootScope.$broadcast('refresh');\n      } else {\n        self.$rootScope.$broadcast('render');\n      }\n      delete self.fullscreenPanel;\n    });\n    return true;\n  }\n\n  enterFullscreen(panelScope) {\n    var ctrl = panelScope.ctrl;\n\n    ctrl.editMode = this.state.edit && this.dashboard.meta.canEdit;\n    ctrl.fullscreen = true;\n\n    this.oldTimeRange = ctrl.range;\n    this.fullscreenPanel = panelScope;\n\n    // Firefox doesn't return scrollTop position properly if 'dash-scroll' is emitted after setViewMode()\n    this.$scope.appEvent('dash-scroll', { animate: false, pos: 0 });\n    this.dashboard.setViewMode(ctrl.panel, true, ctrl.editMode);\n    this.$scope.appEvent('panel-fullscreen-enter', { panelId: ctrl.panel.id });\n  }\n\n  registerPanel(panelScope) {\n    var self = this;\n    self.panelScopes.push(panelScope);\n\n    if (!self.dashboard.meta.soloMode) {\n      if (self.state.panelId === panelScope.ctrl.panel.id) {\n        if (self.state.edit) {\n          panelScope.ctrl.editPanel();\n        } else {\n          panelScope.ctrl.viewPanel();\n        }\n      }\n    }\n\n    var unbind = panelScope.$on('$destroy', function() {\n      self.panelScopes = _.without(self.panelScopes, panelScope);\n      unbind();\n    });\n  }\n}\n\n/** @ngInject */\nexport function dashboardViewStateSrv($location, $timeout, $rootScope) {\n  return {\n    create: function($scope) {\n      return new DashboardViewState($scope, $location, $timeout, $rootScope);\n    },\n  };\n}\n\nangular.module('grafana.services').factory('dashboardViewStateSrv', dashboardViewStateSrv);\n","import coreModule from 'app/core/core_module';\n\nconst hitTypes = {\n  FOLDER: 'dash-folder',\n  DASHBOARD: 'dash-db',\n};\n\nexport class ValidationSrv {\n  rootName = 'general';\n\n  /** @ngInject */\n  constructor(private $q, private backendSrv) {}\n\n  validateNewDashboardName(folderId, name) {\n    return this.validate(folderId, name, '此文件夹中已存在同名的仪表盘');\n  }\n\n  validateNewFolderName(name) {\n    return this.validate(0, name, '默认文件夹中已存在同名的仪表盘或文件夹');\n  }\n\n  private validate(folderId, name, existingErrorMessage) {\n    name = (name || '').trim();\n    const nameLowerCased = name.toLowerCase();\n\n    if (name.length === 0) {\n      return this.$q.reject({\n        type: 'REQUIRED',\n        message: '名称是必需的',\n      });\n    }\n\n    if (folderId === 0 && nameLowerCased === this.rootName) {\n      return this.$q.reject({\n        type: 'EXISTING',\n        message: '这是保留名称，不能用于文件夹命名。',\n      });\n    }\n\n    let deferred = this.$q.defer();\n\n    const promises = [];\n    promises.push(this.backendSrv.search({ type: hitTypes.FOLDER, folderIds: [folderId], query: name }));\n    promises.push(this.backendSrv.search({ type: hitTypes.DASHBOARD, folderIds: [folderId], query: name }));\n\n    this.$q.all(promises).then(res => {\n      let hits = [];\n\n      if (res.length > 0 && res[0].length > 0) {\n        hits = res[0];\n      }\n\n      if (res.length > 1 && res[1].length > 0) {\n        hits = hits.concat(res[1]);\n      }\n\n      for (let hit of hits) {\n        if (nameLowerCased === hit.title.toLowerCase()) {\n          deferred.reject({\n            type: 'EXISTING',\n            message: existingErrorMessage,\n          });\n          break;\n        }\n      }\n\n      deferred.resolve();\n    });\n\n    return deferred.promise;\n  }\n}\n\ncoreModule.service('validationSrv', ValidationSrv);\n","import moment from 'moment';\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport kbn from 'app/core/utils/kbn';\nimport * as dateMath from 'app/core/utils/datemath';\n\nexport class TimeSrv {\n  time: any;\n  refreshTimer: any;\n  refresh: boolean;\n  oldRefresh: boolean;\n  dashboard: any;\n  timeAtLoad: any;\n  private autoRefreshBlocked: boolean;\n\n  /** @ngInject **/\n  constructor(private $rootScope, private $timeout, private $location, private timer, private contextSrv) {\n    // default time\n    this.time = { from: '6h', to: 'now' };\n\n    $rootScope.$on('zoom-out', this.zoomOut.bind(this));\n    $rootScope.$on('$routeUpdate', this.routeUpdated.bind(this));\n\n    document.addEventListener('visibilitychange', () => {\n      if (this.autoRefreshBlocked && document.visibilityState === 'visible') {\n        this.autoRefreshBlocked = false;\n\n        this.refreshDashboard();\n      }\n    });\n  }\n\n  init(dashboard) {\n    this.timer.cancelAll();\n\n    this.dashboard = dashboard;\n    this.time = dashboard.time;\n    this.refresh = dashboard.refresh;\n\n    this.initTimeFromUrl();\n    this.parseTime();\n\n    // remember time at load so we can go back to it\n    this.timeAtLoad = _.cloneDeep(this.time);\n\n    if (this.refresh) {\n      this.setAutoRefresh(this.refresh);\n    }\n  }\n\n  private parseTime() {\n    // when absolute time is saved in json it is turned to a string\n    if (_.isString(this.time.from) && this.time.from.indexOf('Z') >= 0) {\n      this.time.from = moment(this.time.from).utc();\n    }\n    if (_.isString(this.time.to) && this.time.to.indexOf('Z') >= 0) {\n      this.time.to = moment(this.time.to).utc();\n    }\n  }\n\n  private parseUrlParam(value) {\n    if (value.indexOf('now') !== -1) {\n      return value;\n    }\n    if (value.length === 8) {\n      return moment.utc(value, 'YYYYMMDD');\n    }\n    if (value.length === 15) {\n      return moment.utc(value, 'YYYYMMDDTHHmmss');\n    }\n\n    if (!isNaN(value)) {\n      var epoch = parseInt(value);\n      return moment.utc(epoch);\n    }\n\n    return null;\n  }\n\n  private initTimeFromUrl() {\n    var params = this.$location.search();\n    if (params.from) {\n      this.time.from = this.parseUrlParam(params.from) || this.time.from;\n    }\n    if (params.to) {\n      this.time.to = this.parseUrlParam(params.to) || this.time.to;\n    }\n    if (params.refresh) {\n      this.refresh = params.refresh || this.refresh;\n    }\n  }\n\n  private routeUpdated() {\n    var params = this.$location.search();\n    var urlRange = this.timeRangeForUrl();\n    // check if url has time range\n    if (params.from && params.to) {\n      // is it different from what our current time range?\n      if (params.from !== urlRange.from || params.to !== urlRange.to) {\n        // issue update\n        this.initTimeFromUrl();\n        this.setTime(this.time, true);\n      }\n    } else if (this.timeHasChangedSinceLoad()) {\n      this.setTime(this.timeAtLoad, true);\n    }\n  }\n\n  private timeHasChangedSinceLoad() {\n    return this.timeAtLoad.from !== this.time.from || this.timeAtLoad.to !== this.time.to;\n  }\n\n  setAutoRefresh(interval) {\n    this.dashboard.refresh = interval;\n    this.cancelNextRefresh();\n    if (interval) {\n      var intervalMs = kbn.interval_to_ms(interval);\n\n      this.refreshTimer = this.timer.register(\n        this.$timeout(() => {\n          this.startNextRefreshTimer(intervalMs);\n          this.refreshDashboard();\n        }, intervalMs)\n      );\n    }\n\n    // update url\n    var params = this.$location.search();\n    if (interval) {\n      params.refresh = interval;\n      this.$location.search(params);\n    } else if (params.refresh) {\n      delete params.refresh;\n      this.$location.search(params);\n    }\n  }\n\n  refreshDashboard() {\n    this.$rootScope.$broadcast('refresh');\n  }\n\n  private startNextRefreshTimer(afterMs) {\n    this.cancelNextRefresh();\n    this.refreshTimer = this.timer.register(\n      this.$timeout(() => {\n        this.startNextRefreshTimer(afterMs);\n        if (this.contextSrv.isGrafanaVisible()) {\n          this.refreshDashboard();\n        } else {\n          this.autoRefreshBlocked = true;\n        }\n      }, afterMs)\n    );\n  }\n\n  private cancelNextRefresh() {\n    this.timer.cancel(this.refreshTimer);\n  }\n\n  setTime(time, fromRouteUpdate?) {\n    _.extend(this.time, time);\n\n    // disable refresh if zoom in or zoom out\n    if (moment.isMoment(time.to)) {\n      this.oldRefresh = this.dashboard.refresh || this.oldRefresh;\n      this.setAutoRefresh(false);\n    } else if (this.oldRefresh && this.oldRefresh !== this.dashboard.refresh) {\n      this.setAutoRefresh(this.oldRefresh);\n      this.oldRefresh = null;\n    }\n\n    // update url\n    if (fromRouteUpdate !== true) {\n      var urlRange = this.timeRangeForUrl();\n      var urlParams = this.$location.search();\n      urlParams.from = urlRange.from;\n      urlParams.to = urlRange.to;\n      this.$location.search(urlParams);\n    }\n\n    this.$rootScope.appEvent('time-range-changed', this.time);\n    this.$timeout(this.refreshDashboard.bind(this), 0);\n  }\n\n  timeRangeForUrl() {\n    var range = this.timeRange().raw;\n\n    if (moment.isMoment(range.from)) {\n      range.from = range.from.valueOf().toString();\n    }\n    if (moment.isMoment(range.to)) {\n      range.to = range.to.valueOf().toString();\n    }\n\n    return range;\n  }\n\n  timeRange() {\n    // make copies if they are moment  (do not want to return out internal moment, because they are mutable!)\n    var raw = {\n      from: moment.isMoment(this.time.from) ? moment(this.time.from) : this.time.from,\n      to: moment.isMoment(this.time.to) ? moment(this.time.to) : this.time.to,\n    };\n\n    var timezone = this.dashboard && this.dashboard.getTimezone();\n\n    return {\n      from: dateMath.parse(raw.from, false, timezone),\n      to: dateMath.parse(raw.to, true, timezone),\n      raw: raw,\n    };\n  }\n\n  zoomOut(e, factor) {\n    var range = this.timeRange();\n\n    var timespan = range.to.valueOf() - range.from.valueOf();\n    var center = range.to.valueOf() - timespan / 2;\n\n    var to = center + timespan * factor / 2;\n    var from = center - timespan * factor / 2;\n\n    if (to > Date.now() && range.to <= Date.now()) {\n      var offset = to - Date.now();\n      from = from - offset;\n      to = Date.now();\n    }\n\n    this.setTime({ from: moment.utc(from), to: moment.utc(to) });\n  }\n}\n\ncoreModule.service('timeSrv', TimeSrv);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport { DashboardModel } from './dashboard_model';\n\nexport class ChangeTracker {\n  current: any;\n  originalPath: any;\n  scope: any;\n  original: any;\n  next: any;\n  $window: any;\n\n  /** @ngInject */\n  constructor(\n    dashboard,\n    scope,\n    originalCopyDelay,\n    private $location,\n    $window,\n    private $timeout,\n    private contextSrv,\n    private $rootScope\n  ) {\n    this.$location = $location;\n    this.$window = $window;\n\n    this.current = dashboard;\n    this.originalPath = $location.path();\n    this.scope = scope;\n\n    // register events\n    scope.onAppEvent('dashboard-saved', () => {\n      this.original = this.current.getSaveModelClone();\n      this.originalPath = $location.path();\n    });\n\n    $window.onbeforeunload = () => {\n      if (this.ignoreChanges()) {\n        return undefined;\n      }\n      if (this.hasChanges()) {\n        return '此仪表盘有未保存的更改';\n      }\n      return undefined;\n    };\n\n    scope.$on('$locationChangeStart', (event, next) => {\n      // check if we should look for changes\n      if (this.originalPath === $location.path()) {\n        return true;\n      }\n      if (this.ignoreChanges()) {\n        return true;\n      }\n\n      if (this.hasChanges()) {\n        event.preventDefault();\n        this.next = next;\n\n        this.$timeout(() => {\n          this.open_modal();\n        });\n      }\n      return false;\n    });\n\n    if (originalCopyDelay) {\n      this.$timeout(() => {\n        // wait for different services to patch the dashboard (missing properties)\n        this.original = dashboard.getSaveModelClone();\n      }, originalCopyDelay);\n    } else {\n      this.original = dashboard.getSaveModelClone();\n    }\n  }\n\n  // for some dashboards and users\n  // changes should be ignored\n  ignoreChanges() {\n    if (!this.original) {\n      return true;\n    }\n    if (!this.contextSrv.isEditor) {\n      return true;\n    }\n    if (!this.current || !this.current.meta) {\n      return true;\n    }\n\n    var meta = this.current.meta;\n    return !meta.canSave || meta.fromScript || meta.fromFile;\n  }\n\n  // remove stuff that should not count in diff\n  cleanDashboardFromIgnoredChanges(dashData) {\n    // need to new up the domain model class to get access to expand / collapse row logic\n    let model = new DashboardModel(dashData);\n\n    // Expand all rows before making comparison. This is required because row expand / collapse\n    // change order of panel array and panel positions.\n    model.expandRows();\n\n    let dash = model.getSaveModelClone();\n\n    // ignore time and refresh\n    dash.time = 0;\n    dash.refresh = 0;\n    dash.schemaVersion = 0;\n\n    // ignore iteration property\n    delete dash.iteration;\n\n    dash.panels = _.filter(dash.panels, panel => {\n      if (panel.repeatPanelId) {\n        return false;\n      }\n\n      // remove scopedVars\n      panel.scopedVars = null;\n\n      // ignore panel legend sort\n      if (panel.legend) {\n        delete panel.legend.sort;\n        delete panel.legend.sortDesc;\n      }\n\n      return true;\n    });\n\n    // ignore template variable values\n    _.each(dash.templating.list, function(value) {\n      value.current = null;\n      value.options = null;\n      value.filters = null;\n    });\n\n    return dash;\n  }\n\n  hasChanges() {\n    let current = this.cleanDashboardFromIgnoredChanges(this.current.getSaveModelClone());\n    let original = this.cleanDashboardFromIgnoredChanges(this.original);\n\n    var currentTimepicker = _.find(current.nav, { type: 'timepicker' });\n    var originalTimepicker = _.find(original.nav, { type: 'timepicker' });\n\n    if (currentTimepicker && originalTimepicker) {\n      currentTimepicker.now = originalTimepicker.now;\n    }\n\n    var currentJson = angular.toJson(current, true);\n    var originalJson = angular.toJson(original, true);\n\n    return currentJson !== originalJson;\n  }\n\n  discardChanges() {\n    this.original = null;\n    this.gotoNext();\n  }\n\n  open_modal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<unsaved-changes-modal dismiss=\"dismiss()\"></unsaved-changes-modal>',\n      modalClass: 'modal--narrow confirm-modal',\n    });\n  }\n\n  saveChanges() {\n    var self = this;\n    var cancel = this.$rootScope.$on('dashboard-saved', () => {\n      cancel();\n      this.$timeout(() => {\n        self.gotoNext();\n      });\n    });\n\n    this.$rootScope.appEvent('save-dashboard');\n  }\n\n  gotoNext() {\n    var baseLen = this.$location.absUrl().length - this.$location.url().length;\n    var nextUrl = this.next.substring(baseLen);\n    this.$location.url(nextUrl);\n  }\n}\n","import angular from 'angular';\nimport { ChangeTracker } from './change_tracker';\n\n/** @ngInject */\nexport function unsavedChangesSrv($rootScope, $q, $location, $timeout, contextSrv, dashboardSrv, $window) {\n  this.init = function(dashboard, scope) {\n    this.tracker = new ChangeTracker(dashboard, scope, 1000, $location, $window, $timeout, contextSrv, $rootScope);\n    return this.tracker;\n  };\n}\n\nangular.module('grafana.services').service('unsavedChangesSrv', unsavedChangesSrv);\n","import coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-exclamation\"></i>\n      <span class=\"p-l-1\">未保存的更改</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <div class=\"modal-content text-center\">\n\n    <div class=\"confirm-modal-text\">\n      要保存更改吗?\n    </div>\n\n    <div class=\"confirm-modal-buttons\">\n      <button type=\"button\" class=\"btn btn-success\" ng-click=\"ctrl.save()\">保存</button>\n      <button type=\"button\" class=\"btn btn-danger\" ng-click=\"ctrl.discard()\">放弃</button>\n      <button type=\"button\" class=\"btn btn-inverse\" ng-click=\"ctrl.dismiss()\">取消</button>\n    </div>\n  </div>\n</div>\n`;\n\nexport class UnsavedChangesModalCtrl {\n  clone: any;\n  dismiss: () => void;\n\n  /** @ngInject */\n  constructor(private unsavedChangesSrv) {}\n\n  discard() {\n    this.dismiss();\n    this.unsavedChangesSrv.tracker.discardChanges();\n  }\n\n  save() {\n    this.dismiss();\n    this.unsavedChangesSrv.tracker.saveChanges();\n  }\n}\n\nexport function unsavedChangesModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: UnsavedChangesModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('unsavedChangesModal', unsavedChangesModalDirective);\n","import moment from 'moment';\nimport * as dateMath from 'app/core/utils/datemath';\n\nexport function inputDateDirective() {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: function($scope, $elem, attrs, ngModel) {\n      var format = 'YYYY-MM-DD HH:mm:ss';\n\n      var fromUser = function(text) {\n        if (text.indexOf('now') !== -1) {\n          if (!dateMath.isValid(text)) {\n            ngModel.$setValidity('error', false);\n            return undefined;\n          }\n          ngModel.$setValidity('error', true);\n          return text;\n        }\n\n        var parsed;\n        if ($scope.ctrl.isUtc) {\n          parsed = moment.utc(text, format);\n        } else {\n          parsed = moment(text, format);\n        }\n\n        if (!parsed.isValid()) {\n          ngModel.$setValidity('error', false);\n          return undefined;\n        }\n\n        ngModel.$setValidity('error', true);\n        return parsed;\n      };\n\n      var toUser = function(currentValue) {\n        if (moment.isMoment(currentValue)) {\n          return currentValue.format(format);\n        } else {\n          return currentValue;\n        }\n      };\n\n      ngModel.$parsers.push(fromUser);\n      ngModel.$formatters.push(toUser);\n    },\n  };\n}\n","import _ from 'lodash';\nimport angular from 'angular';\nimport moment from 'moment';\n\nimport * as rangeUtil from 'app/core/utils/rangeutil';\n\nexport class TimePickerCtrl {\n  static tooltipFormat = 'MMM D, YYYY HH:mm:ss';\n  static defaults = {\n    time_options: ['5m', '15m', '1h', '6h', '12h', '24h', '2d', '7d', '30d'],\n    refresh_intervals: ['5s', '10s', '30s', '1m', '5m', '15m', '30m', '1h', '2h', '1d'],\n  };\n\n  dashboard: any;\n  panel: any;\n  absolute: any;\n  timeRaw: any;\n  editTimeRaw: any;\n  tooltip: string;\n  rangeString: string;\n  timeOptions: any;\n  refresh: any;\n  isUtc: boolean;\n  firstDayOfWeek: number;\n  isOpen: boolean;\n\n  /** @ngInject */\n  constructor(private $scope, private $rootScope, private timeSrv) {\n    this.$scope.ctrl = this;\n\n    $rootScope.onAppEvent('shift-time-forward', () => this.move(1), $scope);\n    $rootScope.onAppEvent('shift-time-backward', () => this.move(-1), $scope);\n    $rootScope.onAppEvent('refresh', this.onRefresh.bind(this), $scope);\n    $rootScope.onAppEvent('closeTimepicker', this.openDropdown.bind(this), $scope);\n\n    // init options\n    this.panel = this.dashboard.timepicker;\n    _.defaults(this.panel, TimePickerCtrl.defaults);\n    this.firstDayOfWeek = moment.localeData().firstDayOfWeek();\n\n    // init time stuff\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    var time = angular.copy(this.timeSrv.timeRange());\n    var timeRaw = angular.copy(time.raw);\n\n    if (!this.dashboard.isTimezoneUtc()) {\n      time.from.local();\n      time.to.local();\n      if (moment.isMoment(timeRaw.from)) {\n        timeRaw.from.local();\n      }\n      if (moment.isMoment(timeRaw.to)) {\n        timeRaw.to.local();\n      }\n      this.isUtc = false;\n    } else {\n      this.isUtc = true;\n    }\n\n    this.rangeString = rangeUtil.describeTimeRange(timeRaw);\n    this.absolute = { fromJs: time.from.toDate(), toJs: time.to.toDate() };\n    this.tooltip = this.dashboard.formatDate(time.from) + ' <br>to<br>';\n    this.tooltip += this.dashboard.formatDate(time.to);\n    this.timeRaw = timeRaw;\n  }\n\n  zoom(factor) {\n    this.$rootScope.appEvent('zoom-out', 2);\n  }\n\n  move(direction) {\n    var range = this.timeSrv.timeRange();\n\n    var timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\n    var to, from;\n    if (direction === -1) {\n      to = range.to.valueOf() - timespan;\n      from = range.from.valueOf() - timespan;\n    } else if (direction === 1) {\n      to = range.to.valueOf() + timespan;\n      from = range.from.valueOf() + timespan;\n      if (to > Date.now() && range.to < Date.now()) {\n        to = Date.now();\n        from = range.from.valueOf();\n      }\n    } else {\n      to = range.to.valueOf();\n      from = range.from.valueOf();\n    }\n\n    this.timeSrv.setTime({ from: moment.utc(from), to: moment.utc(to) });\n  }\n\n  openDropdown() {\n    if (this.isOpen) {\n      this.closeDropdown();\n      return;\n    }\n\n    this.onRefresh();\n    this.editTimeRaw = this.timeRaw;\n    this.timeOptions = rangeUtil.getRelativeTimesList(this.panel, this.rangeString);\n    this.refresh = {\n      value: this.dashboard.refresh,\n      options: _.map(this.panel.refresh_intervals, (interval: any) => {\n        return { text: interval, value: interval };\n      }),\n    };\n\n    this.refresh.options.unshift({ text: 'off' });\n    this.isOpen = true;\n    this.$rootScope.appEvent('timepickerOpen');\n  }\n\n  closeDropdown() {\n    this.isOpen = false;\n    this.$rootScope.appEvent('timepickerClosed');\n  }\n\n  applyCustom() {\n    if (this.refresh.value !== this.dashboard.refresh) {\n      this.timeSrv.setAutoRefresh(this.refresh.value);\n    }\n\n    this.timeSrv.setTime(this.editTimeRaw);\n    this.closeDropdown();\n  }\n\n  absoluteFromChanged() {\n    this.editTimeRaw.from = this.getAbsoluteMomentForTimezone(this.absolute.fromJs);\n  }\n\n  absoluteToChanged() {\n    this.editTimeRaw.to = this.getAbsoluteMomentForTimezone(this.absolute.toJs);\n  }\n\n  getAbsoluteMomentForTimezone(jsDate) {\n    return this.dashboard.isTimezoneUtc() ? moment(jsDate).utc() : moment(jsDate);\n  }\n\n  setRelativeFilter(timespan) {\n    var range = { from: timespan.from, to: timespan.to };\n\n    if (this.panel.nowDelay && range.to === 'now') {\n      range.to = 'now-' + this.panel.nowDelay;\n    }\n\n    this.timeSrv.setTime(range);\n    this.closeDropdown();\n  }\n}\n\nexport function settingsDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/timepicker/settings.html',\n    controller: TimePickerCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nexport function timePickerDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/timepicker/timepicker.html',\n    controller: TimePickerCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('gfTimePickerSettings', settingsDirective);\nangular.module('grafana.directives').directive('gfTimePicker', timePickerDirective);\n\nimport { inputDateDirective } from './input_date';\nangular.module('grafana.directives').directive('inputDatetime', inputDateDirective);\n","import coreModule from 'app/core/core_module';\n\nvar template = `\n<input type=\"file\" id=\"dashupload\" name=\"dashupload\" class=\"hide\"/>\n<label class=\"btn btn-success\" for=\"dashupload\">\n  <i class=\"fa fa-upload\"></i>\n  上传 .json 文件\n</label>\n`;\n\n/** @ngInject */\nfunction uploadDashboardDirective(timer, alertSrv, $location) {\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      onUpload: '&',\n    },\n    link: function(scope) {\n      function file_selected(evt) {\n        var files = evt.target.files; // FileList object\n        var readerOnload = function() {\n          return function(e) {\n            var dash;\n            try {\n              dash = JSON.parse(e.target.result);\n            } catch (err) {\n              console.log(err);\n              scope.appEvent('alert-error', ['导入失败', 'JSON -> JS序列化失败: ' + err.message]);\n              return;\n            }\n\n            scope.$apply(function() {\n              scope.onUpload({ dash: dash });\n            });\n          };\n        };\n\n        for (var i = 0, f; (f = files[i]); i++) {\n          var reader = new FileReader();\n          reader.onload = readerOnload();\n          reader.readAsText(f);\n        }\n      }\n\n      var wnd: any = window;\n      // Check for the various File API support.\n      if (wnd.File && wnd.FileReader && wnd.FileList && wnd.Blob) {\n        // Something\n        document.getElementById('dashupload').addEventListener('change', file_selected, false);\n      } else {\n        alertSrv.set('Oops', '抱歉，此浏览器不完全支持HTML5文件API', 'error');\n      }\n    },\n  };\n}\n\ncoreModule.directive('dashUpload', uploadDashboardDirective);\n","import config from 'app/core/config';\nimport _ from 'lodash';\nimport { DashboardModel } from '../dashboard_model';\n\nexport class DashboardExporter {\n  constructor(private datasourceSrv) {}\n\n  makeExportable(dashboard: DashboardModel) {\n    // clean up repeated rows and panels,\n    // this is done on the live real dashboard instance, not on a clone\n    // so we need to undo this\n    // this is pretty hacky and needs to be changed\n    dashboard.cleanUpRepeats();\n\n    var saveModel = dashboard.getSaveModelClone();\n    saveModel.id = null;\n\n    // undo repeat cleanup\n    dashboard.processRepeats();\n\n    var inputs = [];\n    var requires = {};\n    var datasources = {};\n    var promises = [];\n    var variableLookup: any = {};\n\n    for (let variable of saveModel.templating.list) {\n      variableLookup[variable.name] = variable;\n    }\n\n    var templateizeDatasourceUsage = obj => {\n      // ignore data source properties that contain a variable\n      if (obj.datasource && obj.datasource.indexOf('$') === 0) {\n        if (variableLookup[obj.datasource.substring(1)]) {\n          return;\n        }\n      }\n\n      promises.push(\n        this.datasourceSrv.get(obj.datasource).then(ds => {\n          if (ds.meta.builtIn) {\n            return;\n          }\n\n          var refName = 'DS_' + ds.name.replace(' ', '_').toUpperCase();\n          datasources[refName] = {\n            name: refName,\n            label: ds.name,\n            description: '',\n            type: 'datasource',\n            pluginId: ds.meta.id,\n            pluginName: ds.meta.name,\n          };\n          obj.datasource = '${' + refName + '}';\n\n          requires['datasource' + ds.meta.id] = {\n            type: 'datasource',\n            id: ds.meta.id,\n            name: ds.meta.name,\n            version: ds.meta.info.version || '1.0.0',\n          };\n        })\n      );\n    };\n\n    const processPanel = panel => {\n      if (panel.datasource !== undefined) {\n        templateizeDatasourceUsage(panel);\n      }\n\n      if (panel.targets) {\n        for (let target of panel.targets) {\n          if (target.datasource !== undefined) {\n            templateizeDatasourceUsage(target);\n          }\n        }\n      }\n\n      var panelDef = config.panels[panel.type];\n      if (panelDef) {\n        requires['panel' + panelDef.id] = {\n          type: 'panel',\n          id: panelDef.id,\n          name: panelDef.name,\n          version: panelDef.info.version,\n        };\n      }\n    };\n\n    // check up panel data sources\n    for (let panel of saveModel.panels) {\n      processPanel(panel);\n\n      // handle collapsed rows\n      if (panel.collapsed !== undefined && panel.collapsed === true && panel.panels) {\n        for (let rowPanel of panel.panels) {\n          processPanel(rowPanel);\n        }\n      }\n    }\n\n    // templatize template vars\n    for (let variable of saveModel.templating.list) {\n      if (variable.type === 'query') {\n        templateizeDatasourceUsage(variable);\n        variable.options = [];\n        variable.current = {};\n        variable.refresh = variable.refresh > 0 ? variable.refresh : 1;\n      }\n    }\n\n    // templatize annotations vars\n    for (let annotationDef of saveModel.annotations.list) {\n      templateizeDatasourceUsage(annotationDef);\n    }\n\n    // add grafana version\n    requires['grafana'] = {\n      type: 'grafana',\n      id: 'grafana',\n      name: 'Grafana',\n      version: config.buildInfo.version,\n    };\n\n    return Promise.all(promises)\n      .then(() => {\n        _.each(datasources, (value, key) => {\n          inputs.push(value);\n        });\n\n        // templatize constants\n        for (let variable of saveModel.templating.list) {\n          if (variable.type === 'constant') {\n            var refName = 'VAR_' + variable.name.replace(' ', '_').toUpperCase();\n            inputs.push({\n              name: refName,\n              type: 'constant',\n              label: variable.label || variable.name,\n              value: variable.current.value,\n              description: '',\n            });\n            // update current and option\n            variable.query = '${' + refName + '}';\n            variable.options[0] = variable.current = {\n              value: variable.query,\n              text: variable.query,\n            };\n          }\n        }\n\n        // make inputs and requires a top thing\n        var newObj = {};\n        newObj['__inputs'] = inputs;\n        newObj['__requires'] = _.sortBy(requires, ['id']);\n\n        _.defaults(newObj, saveModel);\n        return newObj;\n      })\n      .catch(err => {\n        console.log('Export failed:', err);\n        return {\n          error: err,\n        };\n      });\n  }\n}\n","import angular from 'angular';\nimport { saveAs } from 'file-saver';\n\nimport coreModule from 'app/core/core_module';\nimport { DashboardExporter } from './exporter';\n\nexport class DashExportCtrl {\n  dash: any;\n  exporter: DashboardExporter;\n  dismiss: () => void;\n\n  /** @ngInject */\n  constructor(private dashboardSrv, datasourceSrv, private $scope, private $rootScope) {\n    this.exporter = new DashboardExporter(datasourceSrv);\n\n    this.exporter.makeExportable(this.dashboardSrv.getCurrent()).then(dash => {\n      this.$scope.$apply(() => {\n        this.dash = dash;\n      });\n    });\n  }\n\n  save() {\n    var blob = new Blob([angular.toJson(this.dash, true)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, this.dash.title + '-' + new Date().getTime() + '.json');\n  }\n\n  saveJson() {\n    var clone = this.dash;\n    let editScope = this.$rootScope.$new();\n    editScope.object = clone;\n    editScope.enableCopy = true;\n\n    this.$rootScope.appEvent('show-modal', {\n      src: 'public/app/partials/edit_json.html',\n      scope: editScope,\n    });\n\n    this.dismiss();\n  }\n}\n\nexport function dashExportDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/export/export_modal.html',\n    controller: DashExportCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('dashExportModal', dashExportDirective);\n","import angular from 'angular';\nimport * as fileExport from 'app/core/utils/file_export';\nimport appEvents from 'app/core/app_events';\n\nexport class ExportDataModalCtrl {\n  private data: any[];\n  private panel: string;\n  asRows: Boolean = true;\n  dateTimeFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  excel: false;\n\n  export() {\n    if (this.panel === 'table') {\n      fileExport.exportTableDataToCsv(this.data, this.excel);\n    } else {\n      if (this.asRows) {\n        fileExport.exportSeriesListToCsv(this.data, this.dateTimeFormat, this.excel);\n      } else {\n        fileExport.exportSeriesListToCsvColumns(this.data, this.dateTimeFormat, this.excel);\n      }\n    }\n\n    this.dismiss();\n  }\n\n  dismiss() {\n    appEvents.emit('hide-modal');\n  }\n}\n\nexport function exportDataModal() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/export_data/export_data_modal.html',\n    controller: ExportDataModalCtrl,\n    controllerAs: 'ctrl',\n    scope: {\n      panel: '<',\n      data: '<', // The difference to '=' is that the bound properties are not watched\n    },\n    bindToController: true,\n  };\n}\n\nangular.module('grafana.directives').directive('exportDataModal', exportDataModal);\n","import _ from 'lodash';\nimport angular from 'angular';\nimport coreModule from 'app/core/core_module';\n\nexport class AdHocFiltersCtrl {\n  segments: any;\n  variable: any;\n  removeTagFilterSegment: any;\n\n  /** @ngInject */\n  constructor(\n    private uiSegmentSrv,\n    private datasourceSrv,\n    private $q,\n    private variableSrv,\n    $scope,\n    private $rootScope\n  ) {\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({\n      fake: true,\n      value: '-- remove filter --',\n    });\n    this.buildSegmentModel();\n    this.$rootScope.onAppEvent('template-variable-value-updated', this.buildSegmentModel.bind(this), $scope);\n  }\n\n  buildSegmentModel() {\n    this.segments = [];\n\n    if (this.variable.value && !_.isArray(this.variable.value)) {\n    }\n\n    for (let tag of this.variable.filters) {\n      if (this.segments.length > 0) {\n        this.segments.push(this.uiSegmentSrv.newCondition('AND'));\n      }\n\n      if (tag.key !== undefined && tag.value !== undefined) {\n        this.segments.push(this.uiSegmentSrv.newKey(tag.key));\n        this.segments.push(this.uiSegmentSrv.newOperator(tag.operator));\n        this.segments.push(this.uiSegmentSrv.newKeyValue(tag.value));\n      }\n    }\n\n    this.segments.push(this.uiSegmentSrv.newPlusButton());\n  }\n\n  getOptions(segment, index) {\n    if (segment.type === 'operator') {\n      return this.$q.when(this.uiSegmentSrv.newOperators(['=', '!=', '<', '>', '=~', '!~']));\n    }\n\n    if (segment.type === 'condition') {\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND')]);\n    }\n\n    return this.datasourceSrv.get(this.variable.datasource).then(ds => {\n      var options: any = {};\n      var promise = null;\n\n      if (segment.type !== 'value') {\n        promise = ds.getTagKeys();\n      } else {\n        options.key = this.segments[index - 2].value;\n        promise = ds.getTagValues(options);\n      }\n\n      return promise.then(results => {\n        results = _.map(results, segment => {\n          return this.uiSegmentSrv.newSegment({ value: segment.text });\n        });\n\n        // add remove option for keys\n        if (segment.type === 'key') {\n          results.splice(0, 0, angular.copy(this.removeTagFilterSegment));\n        }\n        return results;\n      });\n    });\n  }\n\n  segmentChanged(segment, index) {\n    this.segments[index] = segment;\n\n    // handle remove tag condition\n    if (segment.value === this.removeTagFilterSegment.value) {\n      this.segments.splice(index, 3);\n      if (this.segments.length === 0) {\n        this.segments.push(this.uiSegmentSrv.newPlusButton());\n      } else if (this.segments.length > 2) {\n        this.segments.splice(Math.max(index - 1, 0), 1);\n        if (this.segments[this.segments.length - 1].type !== 'plus-button') {\n          this.segments.push(this.uiSegmentSrv.newPlusButton());\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n        if (index > 2) {\n          this.segments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n        }\n        this.segments.push(this.uiSegmentSrv.newOperator('='));\n        this.segments.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'));\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n\n      if (index + 1 === this.segments.length) {\n        this.segments.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\n    this.updateVariableModel();\n  }\n\n  updateVariableModel() {\n    var filters = [];\n    var filterIndex = -1;\n    var hasFakes = false;\n\n    this.segments.forEach(segment => {\n      if (segment.type === 'value' && segment.fake) {\n        hasFakes = true;\n        return;\n      }\n\n      switch (segment.type) {\n        case 'key': {\n          filters.push({ key: segment.value });\n          filterIndex += 1;\n          break;\n        }\n        case 'value': {\n          filters[filterIndex].value = segment.value;\n          break;\n        }\n        case 'operator': {\n          filters[filterIndex].operator = segment.value;\n          break;\n        }\n        case 'condition': {\n          filters[filterIndex].condition = segment.value;\n          break;\n        }\n      }\n    });\n\n    if (hasFakes) {\n      return;\n    }\n\n    this.variable.setFilters(filters);\n    this.variableSrv.variableUpdated(this.variable, true);\n  }\n}\n\nvar template = `\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\" ng-repeat=\"segment in ctrl.segments\">\n    <metric-segment segment=\"segment\" get-options=\"ctrl.getOptions(segment, $index)\"\n                    on-change=\"ctrl.segmentChanged(segment, $index)\"></metric-segment>\n  </div>\n</div>\n`;\n\nexport function adHocFiltersComponent() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: AdHocFiltersCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      variable: '=',\n    },\n  };\n}\n\ncoreModule.directive('adHocFilters', adHocFiltersComponent);\n","import { coreModule } from 'app/core/core';\n\nvar template = `\n<div class=\"gf-form-select-wrapper max-width-18\">\n  <select class=\"gf-form-input\" ng-model=\"panel.repeat\" ng-options=\"f.value as f.text for f in variables\" ng-change=\"optionChanged()\">\n  <option value=\"\"></option>\n</div>\n`;\n\n/** @ngInject **/\nfunction dashRepeatOptionDirective(variableSrv) {\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      panel: '=',\n    },\n    link: function(scope, element) {\n      element.css({ display: 'block', width: '100%' });\n\n      scope.variables = variableSrv.variables.map(item => {\n        return { text: item.name, value: item.name };\n      });\n\n      if (scope.variables.length === 0) {\n        scope.variables.unshift({\n          text: '暂无模板变量',\n          value: null,\n        });\n      }\n\n      scope.variables.unshift({ text: 'Disabled', value: null });\n\n      // if repeat is set and no direction set to horizontal\n      if (scope.panel.repeat && !scope.panel.repeatDirection) {\n        scope.panel.repeatDirection = 'h';\n      }\n\n      scope.optionChanged = function() {\n        if (scope.panel.repeat) {\n          scope.panel.repeatDirection = 'h';\n        }\n      };\n    },\n  };\n}\n\ncoreModule.directive('dashRepeatOption', dashRepeatOptionDirective);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PanelModel } from '../panel_model';\nimport { PanelContainer } from './PanelContainer';\nimport templateSrv from 'app/features/templating/template_srv';\nimport appEvents from 'app/core/app_events';\n\nexport interface DashboardRowProps {\n  panel: PanelModel;\n  getPanelContainer: () => PanelContainer;\n}\n\nexport class DashboardRow extends React.Component<DashboardRowProps, any> {\n  dashboard: any;\n  panelContainer: any;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.panel.collapsed,\n    };\n\n    this.panelContainer = this.props.getPanelContainer();\n    this.dashboard = this.panelContainer.getDashboard();\n\n    this.toggle = this.toggle.bind(this);\n    this.openSettings = this.openSettings.bind(this);\n    this.delete = this.delete.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  toggle() {\n    this.dashboard.toggleRow(this.props.panel);\n\n    this.setState(prevState => {\n      return { collapsed: !prevState.collapsed };\n    });\n  }\n\n  update() {\n    this.dashboard.processRepeats();\n    this.forceUpdate();\n  }\n\n  openSettings() {\n    appEvents.emit('show-modal', {\n      templateHtml: `<row-options row=\"model.row\" on-updated=\"model.onUpdated()\" dismiss=\"dismiss()\"></row-options>`,\n      modalClass: 'modal--narrow',\n      model: {\n        row: this.props.panel,\n        onUpdated: this.update.bind(this),\n      },\n    });\n  }\n\n  delete() {\n    appEvents.emit('confirm-modal', {\n      title: '删除行',\n      text: '确定想要删除删除该行及下属所有面板?',\n      altActionText: '只删除行',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        const panelContainer = this.props.getPanelContainer();\n        const dashboard = panelContainer.getDashboard();\n        dashboard.removeRow(this.props.panel, true);\n      },\n      onAltAction: () => {\n        const panelContainer = this.props.getPanelContainer();\n        const dashboard = panelContainer.getDashboard();\n        dashboard.removeRow(this.props.panel, false);\n      },\n    });\n  }\n\n  render() {\n    const classes = classNames({\n      'dashboard-row': true,\n      'dashboard-row--collapsed': this.state.collapsed,\n    });\n    const chevronClass = classNames({\n      fa: true,\n      'fa-chevron-down': !this.state.collapsed,\n      'fa-chevron-right': this.state.collapsed,\n    });\n\n    const title = templateSrv.replaceWithText(this.props.panel.title, this.props.panel.scopedVars);\n    const count = this.props.panel.panels ? this.props.panel.panels.length : 0;\n    const panels = count === 1 ? 'panel' : 'panels';\n\n    return (\n      <div className={classes}>\n        <a className=\"dashboard-row__title pointer\" onClick={this.toggle}>\n          <i className={chevronClass} />\n          {title}\n          <span className=\"dashboard-row__panel_count\">\n            ({count} {panels})\n          </span>\n        </a>\n        {this.dashboard.meta.canEdit === true && (\n          <div className=\"dashboard-row__actions\">\n            <a className=\"pointer\" onClick={this.openSettings}>\n              <i className=\"fa fa-cog\" />\n            </a>\n            <a className=\"pointer\" onClick={this.delete}>\n              <i className=\"fa fa-trash\" />\n            </a>\n          </div>\n        )}\n        {this.state.collapsed === true && (\n          <div className=\"dashboard-row__toggle-target\" onClick={this.toggle}>\n            &nbsp;\n          </div>\n        )}\n        <div className=\"dashboard-row__drag grid-drag-handle\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport baron from 'baron';\n\nexport interface Props {\n  children: any;\n  className: string;\n}\n\nexport default class ScrollBar extends React.Component<Props, any> {\n  private container: any;\n  private scrollbar: baron;\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.scrollbar = baron({\n      root: this.container.parentElement,\n      scroller: this.container,\n      bar: '.baron__bar',\n      barOnCls: '_scrollbar',\n      scrollingCls: '_scrolling',\n      track: '.baron__track',\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollbar.update();\n  }\n\n  componentWillUnmount() {\n    this.scrollbar.dispose();\n  }\n\n  // methods can be invoked by outside\n  setScrollTop(top) {\n    if (this.container) {\n      this.container.scrollTop = top;\n      this.scrollbar.update();\n\n      return true;\n    }\n    return false;\n  }\n\n  setScrollLeft(left) {\n    if (this.container) {\n      this.container.scrollLeft = left;\n      this.scrollbar.update();\n\n      return true;\n    }\n    return false;\n  }\n\n  update() {\n    this.scrollbar.update();\n  }\n\n  handleRef = ref => {\n    this.container = ref;\n  };\n\n  render() {\n    return (\n      <div className=\"baron baron__root baron__clipper\">\n        <div className={this.props.className + ' baron__scroller'} ref={this.handleRef}>\n          {this.props.children}\n        </div>\n\n        <div className=\"baron__track\">\n          <div className=\"baron__bar\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport config from 'app/core/config';\nimport { PanelModel } from '../panel_model';\nimport { PanelContainer } from './PanelContainer';\nimport ScrollBar from 'app/core/components/ScrollBar/ScrollBar';\nimport store from 'app/core/store';\nimport { LS_PANEL_COPY_KEY } from 'app/core/constants';\nimport Highlighter from 'react-highlight-words';\n\nexport interface AddPanelPanelProps {\n  panel: PanelModel;\n  getPanelContainer: () => PanelContainer;\n}\n\nexport interface AddPanelPanelState {\n  filter: string;\n  panelPlugins: any[];\n  copiedPanelPlugins: any[];\n  tab: string;\n}\n\nexport class AddPanelPanel extends React.Component<AddPanelPanelProps, AddPanelPanelState> {\n  private scrollbar: ScrollBar;\n\n  constructor(props) {\n    super(props);\n    this.handleCloseAddPanel = this.handleCloseAddPanel.bind(this);\n    this.renderPanelItem = this.renderPanelItem.bind(this);\n    this.panelSizeChanged = this.panelSizeChanged.bind(this);\n\n    this.state = {\n      panelPlugins: this.getPanelPlugins(''),\n      copiedPanelPlugins: this.getCopiedPanelPlugins(''),\n      filter: '',\n      tab: 'Add',\n    };\n  }\n\n  componentDidMount() {\n    this.props.panel.events.on('panel-size-changed', this.panelSizeChanged);\n  }\n\n  componentWillUnmount() {\n    this.props.panel.events.off('panel-size-changed', this.panelSizeChanged);\n  }\n\n  panelSizeChanged() {\n    setTimeout(() => {\n      this.scrollbar.update();\n    });\n  }\n\n  getPanelPlugins(filter) {\n    let panels = _.chain(config.panels)\n      .filter({ hideFromList: false })\n      .map(item => item)\n      .value();\n\n    // add special row type\n    panels.push({ id: 'row', name: 'Row', sort: 8, info: { logos: { small: 'public/img/icn-row.svg' } } });\n\n    panels = this.filterPanels(panels, filter);\n\n    // add sort by sort property\n    return _.sortBy(panels, 'sort');\n  }\n\n  getCopiedPanelPlugins(filter) {\n    let panels = _.chain(config.panels)\n      .filter({ hideFromList: false })\n      .map(item => item)\n      .value();\n    let copiedPanels = [];\n\n    let copiedPanelJson = store.get(LS_PANEL_COPY_KEY);\n    if (copiedPanelJson) {\n      let copiedPanel = JSON.parse(copiedPanelJson);\n      let pluginInfo = _.find(panels, { id: copiedPanel.type });\n      if (pluginInfo) {\n        let pluginCopy = _.cloneDeep(pluginInfo);\n        pluginCopy.name = copiedPanel.title;\n        pluginCopy.sort = -1;\n        pluginCopy.defaults = copiedPanel;\n        copiedPanels.push(pluginCopy);\n      }\n    }\n\n    copiedPanels = this.filterPanels(copiedPanels, filter);\n\n    return _.sortBy(copiedPanels, 'sort');\n  }\n\n  onAddPanel = panelPluginInfo => {\n    const panelContainer = this.props.getPanelContainer();\n    const dashboard = panelContainer.getDashboard();\n    const { gridPos } = this.props.panel;\n\n    var newPanel: any = {\n      type: panelPluginInfo.id,\n      title: '面板标题',\n      gridPos: { x: gridPos.x, y: gridPos.y, w: gridPos.w, h: gridPos.h },\n    };\n\n    if (panelPluginInfo.id === 'row') {\n      newPanel.title = '行标题';\n      newPanel.gridPos = { x: 0, y: 0 };\n    }\n\n    // apply panel template / defaults\n    if (panelPluginInfo.defaults) {\n      _.defaults(newPanel, panelPluginInfo.defaults);\n      newPanel.gridPos.w = panelPluginInfo.defaults.gridPos.w;\n      newPanel.gridPos.h = panelPluginInfo.defaults.gridPos.h;\n      newPanel.title = panelPluginInfo.defaults.title;\n      store.delete(LS_PANEL_COPY_KEY);\n    }\n\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(this.props.panel);\n  };\n\n  handleCloseAddPanel(evt) {\n    evt.preventDefault();\n    const panelContainer = this.props.getPanelContainer();\n    const dashboard = panelContainer.getDashboard();\n    dashboard.removePanel(dashboard.panels[0]);\n  }\n\n  renderText(text: string) {\n    let searchWords = this.state.filter.split('');\n    return <Highlighter highlightClassName=\"highlight-search-match\" textToHighlight={text} searchWords={searchWords} />;\n  }\n\n  renderPanelItem(panel, index) {\n    return (\n      <div key={index} className=\"add-panel__item\" onClick={() => this.onAddPanel(panel)} title={panel.name}>\n        <img className=\"add-panel__item-img\" src={panel.info.logos.small} />\n        <div className=\"add-panel__item-name\">{this.renderText(panel.name)}</div>\n      </div>\n    );\n  }\n\n  noCopiedPanelPlugins() {\n    return <div className=\"add-panel__no-panels\">暂无面板副本。</div>;\n  }\n\n  filterChange(evt) {\n    this.setState({\n      filter: evt.target.value,\n      panelPlugins: this.getPanelPlugins(evt.target.value),\n      copiedPanelPlugins: this.getCopiedPanelPlugins(evt.target.value),\n    });\n  }\n\n  filterKeyPress(evt) {\n    if (evt.key === 'Enter') {\n      let panel = _.head(this.state.panelPlugins);\n      if (panel) {\n        this.onAddPanel(panel);\n      }\n    }\n  }\n\n  filterPanels(panels, filter) {\n    let regex = new RegExp(filter, 'i');\n    return panels.filter(panel => {\n      return regex.test(panel.name);\n    });\n  }\n\n  openCopy() {\n    this.setState({\n      tab: 'Copy',\n      filter: '',\n      panelPlugins: this.getPanelPlugins(''),\n      copiedPanelPlugins: this.getCopiedPanelPlugins(''),\n    });\n  }\n\n  openAdd() {\n    this.setState({\n      tab: 'Add',\n      filter: '',\n      panelPlugins: this.getPanelPlugins(''),\n      copiedPanelPlugins: this.getCopiedPanelPlugins(''),\n    });\n  }\n\n  render() {\n    let addClass = classNames({\n      'active active--panel': this.state.tab === 'Add',\n      '': this.state.tab === 'Copy',\n    });\n\n    let copyClass = classNames({\n      '': this.state.tab === 'Add',\n      'active active--panel': this.state.tab === 'Copy',\n    });\n\n    let panelTab;\n\n    if (this.state.tab === 'Add') {\n      panelTab = this.state.panelPlugins.map(this.renderPanelItem);\n    } else if (this.state.tab === 'Copy') {\n      if (this.state.copiedPanelPlugins.length > 0) {\n        panelTab = this.state.copiedPanelPlugins.map(this.renderPanelItem);\n      } else {\n        panelTab = this.noCopiedPanelPlugins();\n      }\n    }\n\n    return (\n      <div className=\"panel-container add-panel-container\">\n        <div className=\"add-panel\">\n          <div className=\"add-panel__header\">\n            <i className=\"gicon gicon-add-panel\" />\n            <span className=\"add-panel__title\">添加面板</span>\n            <ul className=\"gf-tabs\">\n              <li className=\"gf-tabs-item\">\n                <div className={'gf-tabs-link pointer ' + addClass} onClick={this.openAdd.bind(this)}>\n                  添加\n                </div>\n              </li>\n              <li className=\"gf-tabs-item\">\n                <div className={'gf-tabs-link pointer ' + copyClass} onClick={this.openCopy.bind(this)}>\n                  粘贴\n                </div>\n              </li>\n            </ul>\n            <button className=\"add-panel__close\" onClick={this.handleCloseAddPanel}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ScrollBar ref={element => (this.scrollbar = element)} className=\"add-panel__items\">\n            <div className=\"add-panel__searchbar\">\n              <label className=\"gf-form gf-form--grow gf-form--has-input-icon\">\n                <input\n                  type=\"text\"\n                  autoFocus\n                  className=\"gf-form-input gf-form--grow\"\n                  placeholder=\"过滤搜索面板插件\"\n                  value={this.state.filter}\n                  onChange={this.filterChange.bind(this)}\n                  onKeyPress={this.filterKeyPress.bind(this)}\n                />\n                <i className=\"gf-form-input-icon fa fa-search\" />\n              </label>\n            </div>\n            {panelTab}\n          </ScrollBar>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {PanelModel} from '../panel_model';\nimport {PanelContainer} from './PanelContainer';\nimport {AttachedPanel} from './PanelLoader';\nimport {DashboardRow} from './DashboardRow';\nimport {AddPanelPanel} from './AddPanelPanel';\n\nexport interface DashboardPanelProps {\n  panel: PanelModel;\n  getPanelContainer: () => PanelContainer;\n}\n\nexport class DashboardPanel extends React.Component<DashboardPanelProps, any> {\n  element: any;\n  attachedPanel: AttachedPanel;\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (!this.element) {\n      return;\n    }\n\n    const panelContainer = this.props.getPanelContainer();\n    const dashboard = panelContainer.getDashboard();\n    const loader = panelContainer.getPanelLoader();\n    this.attachedPanel = loader.load(this.element, this.props.panel, dashboard);\n  }\n\n  componentWillUnmount() {\n    if (this.attachedPanel) {\n      this.attachedPanel.destroy();\n    }\n  }\n\n  render() {\n    // special handling for rows\n    if (this.props.panel.type === 'row') {\n      return <DashboardRow panel={this.props.panel} getPanelContainer={this.props.getPanelContainer} />;\n    }\n\n    if (this.props.panel.type === 'add-panel') {\n      return <AddPanelPanel panel={this.props.panel} getPanelContainer={this.props.getPanelContainer} />;\n    }\n\n    return (\n      <div ref={element => this.element = element} className=\"panel-height-helper\" />\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactGridLayout from 'react-grid-layout';\nimport { GRID_CELL_HEIGHT, GRID_CELL_VMARGIN, GRID_COLUMN_COUNT } from 'app/core/constants';\nimport { DashboardPanel } from './DashboardPanel';\nimport { DashboardModel } from '../dashboard_model';\nimport { PanelContainer } from './PanelContainer';\nimport { PanelModel } from '../panel_model';\nimport classNames from 'classnames';\nimport sizeMe from 'react-sizeme';\n\nlet lastGridWidth = 1200;\n\nfunction GridWrapper({\n  size,\n  layout,\n  onLayoutChange,\n  children,\n  onDragStop,\n  onResize,\n  onResizeStop,\n  onWidthChange,\n  className,\n  isResizable,\n  isDraggable,\n}) {\n  if (size.width === 0) {\n    console.log('size is zero!');\n  }\n\n  const width = size.width > 0 ? size.width : lastGridWidth;\n  if (width !== lastGridWidth) {\n    onWidthChange();\n    lastGridWidth = width;\n  }\n\n  return (\n    <ReactGridLayout\n      width={lastGridWidth}\n      className={className}\n      isDraggable={isDraggable}\n      isResizable={isResizable}\n      measureBeforeMount={false}\n      containerPadding={[0, 0]}\n      useCSSTransforms={true}\n      margin={[GRID_CELL_VMARGIN, GRID_CELL_VMARGIN]}\n      cols={GRID_COLUMN_COUNT}\n      rowHeight={GRID_CELL_HEIGHT}\n      draggableHandle=\".grid-drag-handle\"\n      layout={layout}\n      onResize={onResize}\n      onResizeStop={onResizeStop}\n      onDragStop={onDragStop}\n      onLayoutChange={onLayoutChange}\n    >\n      {children}\n    </ReactGridLayout>\n  );\n}\n\nconst SizedReactLayoutGrid = sizeMe({ monitorWidth: true })(GridWrapper);\n\nexport interface DashboardGridProps {\n  getPanelContainer: () => PanelContainer;\n}\n\nexport class DashboardGrid extends React.Component<DashboardGridProps, any> {\n  gridToPanelMap: any;\n  panelContainer: PanelContainer;\n  dashboard: DashboardModel;\n  panelMap: { [id: string]: PanelModel };\n\n  constructor(props) {\n    super(props);\n    this.panelContainer = this.props.getPanelContainer();\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onResizeStop = this.onResizeStop.bind(this);\n    this.onDragStop = this.onDragStop.bind(this);\n    this.onWidthChange = this.onWidthChange.bind(this);\n\n    this.state = { animated: false };\n\n    // subscribe to dashboard events\n    this.dashboard = this.panelContainer.getDashboard();\n    this.dashboard.on('panel-added', this.triggerForceUpdate.bind(this));\n    this.dashboard.on('panel-removed', this.triggerForceUpdate.bind(this));\n    this.dashboard.on('repeats-processed', this.triggerForceUpdate.bind(this));\n    this.dashboard.on('view-mode-changed', this.triggerForceUpdate.bind(this));\n    this.dashboard.on('row-collapsed', this.triggerForceUpdate.bind(this));\n    this.dashboard.on('row-expanded', this.triggerForceUpdate.bind(this));\n  }\n\n  buildLayout() {\n    const layout = [];\n    this.panelMap = {};\n\n    for (let panel of this.dashboard.panels) {\n      let stringId = panel.id.toString();\n      this.panelMap[stringId] = panel;\n\n      if (!panel.gridPos) {\n        console.log('panel without gridpos');\n        continue;\n      }\n\n      let panelPos: any = {\n        i: stringId,\n        x: panel.gridPos.x,\n        y: panel.gridPos.y,\n        w: panel.gridPos.w,\n        h: panel.gridPos.h,\n      };\n\n      if (panel.type === 'row') {\n        panelPos.w = GRID_COLUMN_COUNT;\n        panelPos.h = 1;\n        panelPos.isResizable = false;\n        panelPos.isDraggable = panel.collapsed;\n      }\n\n      layout.push(panelPos);\n    }\n\n    return layout;\n  }\n\n  onLayoutChange(newLayout) {\n    for (const newPos of newLayout) {\n      this.panelMap[newPos.i].updateGridPos(newPos);\n    }\n\n    this.dashboard.sortPanelsByGridPos();\n  }\n\n  triggerForceUpdate() {\n    this.forceUpdate();\n  }\n\n  onWidthChange() {\n    for (const panel of this.dashboard.panels) {\n      panel.resizeDone();\n    }\n  }\n\n  updateGridPos(item, layout) {\n    this.panelMap[item.i].updateGridPos(item);\n\n    // react-grid-layout has a bug (#670), and onLayoutChange() is only called when the component is mounted.\n    // So it's required to call it explicitly when panel resized or moved to save layout changes.\n    this.onLayoutChange(layout);\n  }\n\n  onResize(layout, oldItem, newItem) {\n    this.panelMap[newItem.i].updateGridPos(newItem);\n  }\n\n  onResizeStop(layout, oldItem, newItem) {\n    this.updateGridPos(newItem, layout);\n    this.panelMap[newItem.i].resizeDone();\n  }\n\n  onDragStop(layout, oldItem, newItem) {\n    this.updateGridPos(newItem, layout);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState(() => {\n        return { animated: true };\n      });\n    });\n  }\n\n  renderPanels() {\n    const panelElements = [];\n\n    for (let panel of this.dashboard.panels) {\n      const panelClasses = classNames({ panel: true, 'panel--fullscreen': panel.fullscreen });\n      panelElements.push(\n        <div key={panel.id.toString()} className={panelClasses}>\n          <DashboardPanel panel={panel} getPanelContainer={this.props.getPanelContainer} />\n        </div>\n      );\n    }\n\n    return panelElements;\n  }\n\n  render() {\n    return (\n      <SizedReactLayoutGrid\n        className={classNames({ layout: true, animated: this.state.animated })}\n        layout={this.buildLayout()}\n        isResizable={this.dashboard.meta.canEdit}\n        isDraggable={this.dashboard.meta.canEdit}\n        onLayoutChange={this.onLayoutChange}\n        onWidthChange={this.onWidthChange}\n        onDragStop={this.onDragStop}\n        onResize={this.onResize}\n        onResizeStop={this.onResizeStop}\n      >\n        {this.renderPanels()}\n      </SizedReactLayoutGrid>\n    );\n  }\n}\n","import angular from 'angular';\nimport coreModule from 'app/core/core_module';\n\nexport interface AttachedPanel {\n  destroy();\n}\n\nexport class PanelLoader {\n  /** @ngInject */\n  constructor(private $compile, private $rootScope) {}\n\n  load(elem, panel, dashboard): AttachedPanel {\n    var template = '<plugin-component type=\"panel\" class=\"panel-height-helper\"></plugin-component>';\n    var panelScope = this.$rootScope.$new();\n    panelScope.panel = panel;\n    panelScope.dashboard = dashboard;\n\n    const compiledElem = this.$compile(template)(panelScope);\n    const rootNode = angular.element(elem);\n    rootNode.append(compiledElem);\n\n    return {\n      destroy: () => {\n        panelScope.$destroy();\n        compiledElem.remove();\n      },\n    };\n  }\n}\n\ncoreModule.service('panelLoader', PanelLoader);\n","import { react2AngularDirective } from 'app/core/utils/react2angular';\nimport { DashboardGrid } from './DashboardGrid';\n\nreact2AngularDirective('dashboardGrid', DashboardGrid, [\n  ['getPanelContainer', { watchDepth: 'reference', wrapApply: false }],\n]);\n","import { coreModule } from 'app/core/core';\n\nexport class RowOptionsCtrl {\n  row: any;\n  source: any;\n  dismiss: any;\n  onUpdated: any;\n  showDelete: boolean;\n\n  /** @ngInject */\n  constructor() {\n    this.source = this.row;\n    this.row = this.row.getSaveModel();\n  }\n\n  update() {\n    this.source.title = this.row.title;\n    this.source.repeat = this.row.repeat;\n    this.onUpdated();\n    this.dismiss();\n  }\n}\n\nexport function rowOptionsDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/partials/row_options.html',\n    controller: RowOptionsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      row: '=',\n      dismiss: '&',\n      onUpdated: '&',\n    },\n  };\n}\n\ncoreModule.directive('rowOptions', rowOptionsDirective);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class FolderPickerCtrl {\n  initialTitle: string;\n  initialFolderId?: number;\n  labelClass: string;\n  onChange: any;\n  onLoad: any;\n  onCreateFolder: any;\n  enterFolderCreation: any;\n  exitFolderCreation: any;\n  enableCreateNew: boolean;\n  enableReset: boolean;\n  rootName = '通用';\n  folder: any;\n  createNewFolder: boolean;\n  newFolderName: string;\n  newFolderNameTouched: boolean;\n  hasValidationError: boolean;\n  validationError: any;\n  isEditor: boolean;\n\n  /** @ngInject */\n  constructor(private backendSrv, private validationSrv, private contextSrv) {\n    this.isEditor = this.contextSrv.isEditor;\n\n    if (!this.labelClass) {\n      this.labelClass = 'width-7';\n    }\n\n    this.loadInitialValue();\n  }\n\n  getOptions(query) {\n    const params = {\n      query: query,\n      type: 'dash-folder',\n      permission: 'Edit',\n    };\n\n    return this.backendSrv.get('api/search', params).then(result => {\n      if (\n        this.isEditor &&\n        (query === '' ||\n          query.toLowerCase() === 'g' ||\n          query.toLowerCase() === 'ge' ||\n          query.toLowerCase() === 'gen' ||\n          query.toLowerCase() === 'gene' ||\n          query.toLowerCase() === 'gener' ||\n          query.toLowerCase() === 'genera' ||\n          query.toLowerCase() === 'general')\n      ) {\n        result.unshift({ title: this.rootName, id: 0 });\n      }\n\n      if (this.isEditor && this.enableCreateNew && query === '') {\n        result.unshift({ title: '-- 新建文件夹 --', id: -1 });\n      }\n\n      if (this.enableReset && query === '' && this.initialTitle !== '') {\n        result.unshift({ title: this.initialTitle, id: null });\n      }\n\n      return _.map(result, item => {\n        return { text: item.title, value: item.id };\n      });\n    });\n  }\n\n  onFolderChange(option) {\n    if (!option) {\n      option = { value: 0, text: this.rootName };\n    } else if (option.value === -1) {\n      this.createNewFolder = true;\n      this.enterFolderCreation();\n      return;\n    }\n    this.onChange({ $folder: { id: option.value, title: option.text } });\n  }\n\n  newFolderNameChanged() {\n    this.newFolderNameTouched = true;\n\n    this.validationSrv\n      .validateNewFolderName(this.newFolderName)\n      .then(() => {\n        this.hasValidationError = false;\n      })\n      .catch(err => {\n        this.hasValidationError = true;\n        this.validationError = err.message;\n      });\n  }\n\n  createFolder(evt) {\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n\n    return this.backendSrv.createFolder({ title: this.newFolderName }).then(result => {\n      appEvents.emit('alert-success', ['文件夹已创建', 'OK']);\n\n      this.closeCreateFolder();\n      this.folder = { text: result.title, value: result.id };\n      this.onFolderChange(this.folder);\n    });\n  }\n\n  cancelCreateFolder(evt) {\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n\n    this.closeCreateFolder();\n    this.loadInitialValue();\n  }\n\n  private closeCreateFolder() {\n    this.exitFolderCreation();\n    this.createNewFolder = false;\n    this.hasValidationError = false;\n    this.validationError = null;\n    this.newFolderName = '';\n    this.newFolderNameTouched = false;\n  }\n\n  private loadInitialValue() {\n    const resetFolder = { text: this.initialTitle, value: null };\n    const rootFolder = { text: this.rootName, value: 0 };\n    this.getOptions('').then(result => {\n      let folder;\n      if (this.initialFolderId) {\n        folder = _.find(result, { value: this.initialFolderId });\n      } else if (this.enableReset && this.initialTitle && this.initialFolderId === null) {\n        folder = resetFolder;\n      }\n\n      if (!folder) {\n        if (this.isEditor) {\n          folder = rootFolder;\n        } else {\n          folder = result.length > 0 ? result[0] : resetFolder;\n        }\n      }\n\n      this.folder = folder;\n\n      // if this is not the same as our initial value notify parent\n      if (this.folder.id !== this.initialFolderId) {\n        this.onChange({ $folder: { id: this.folder.value, title: this.folder.text } });\n      }\n    });\n  }\n}\n\nexport function folderPicker() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/folder_picker/folder_picker.html',\n    controller: FolderPickerCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      initialTitle: '<',\n      initialFolderId: '<',\n      labelClass: '@',\n      rootName: '@',\n      onChange: '&',\n      onCreateFolder: '&',\n      enterFolderCreation: '&',\n      exitFolderCreation: '&',\n      enableCreateNew: '@',\n      enableReset: '@',\n    },\n  };\n}\n\ncoreModule.directive('folderPicker', folderPicker);\n","import coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class MoveToFolderCtrl {\n  dashboards: any;\n  folder: any;\n  dismiss: any;\n  afterSave: any;\n  isValidFolderSelection = true;\n\n  /** @ngInject */\n  constructor(private backendSrv) {}\n\n  onFolderChange(folder) {\n    this.folder = folder;\n  }\n\n  save() {\n    return this.backendSrv.moveDashboards(this.dashboards, this.folder).then(result => {\n      if (result.successCount > 0) {\n        const header = `${result.successCount === 1 ? '' : 's'} 个仪表盘已移动`;\n        const msg = `${result.successCount} 个仪表盘 ${result.successCount === 1 ? '' : 's'} 移动到 ${\n          this.folder.title\n        }`;\n        appEvents.emit('alert-success', [header, msg]);\n      }\n\n      if (result.totalCount === result.alreadyInFolderCount) {\n        appEvents.emit('alert-error', ['错误', `该仪表盘已存在文件夹 ${this.folder.title} 中`]);\n      }\n\n      this.dismiss();\n      return this.afterSave();\n    });\n  }\n\n  onEnterFolderCreation() {\n    this.isValidFolderSelection = false;\n  }\n\n  onExitFolderCreation() {\n    this.isValidFolderSelection = true;\n  }\n}\n\nexport function moveToFolderModal() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/move_to_folder_modal/move_to_folder.html',\n    controller: MoveToFolderCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dismiss: '&',\n      dashboards: '=',\n      afterSave: '&',\n    },\n  };\n}\n\ncoreModule.directive('moveToFolderModal', moveToFolderModal);\n","import { coreModule, appEvents, contextSrv } from 'app/core/core';\nimport { DashboardModel } from '../dashboard_model';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport angular from 'angular';\nimport config from 'app/core/config';\n\nexport class SettingsCtrl {\n  dashboard: DashboardModel;\n  isOpen: boolean;\n  viewId: string;\n  json: string;\n  alertCount: number;\n  canSaveAs: boolean;\n  canSave: boolean;\n  canDelete: boolean;\n  sections: any[];\n  hasUnsavedFolderChange: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $scope,\n    private $route,\n    private $location,\n    private $rootScope,\n    private backendSrv,\n    private dashboardSrv\n  ) {\n    // temp hack for annotations and variables editors\n    // that rely on inherited scope\n    $scope.dashboard = this.dashboard;\n\n    this.$scope.$on('$destroy', () => {\n      this.dashboard.updateSubmenuVisibility();\n      this.$rootScope.$broadcast('refresh');\n      setTimeout(() => {\n        this.$rootScope.appEvent('dash-scroll', { restore: true });\n      });\n    });\n\n    this.canSaveAs = this.dashboard.meta.canEdit && contextSrv.hasEditPermissionInFolders;\n    this.canSave = this.dashboard.meta.canSave;\n    this.canDelete = this.dashboard.meta.canSave;\n\n    this.buildSectionList();\n    this.onRouteUpdated();\n\n    this.$rootScope.onAppEvent('$routeUpdate', this.onRouteUpdated.bind(this), $scope);\n    this.$rootScope.appEvent('dash-scroll', { animate: false, pos: 0 });\n    this.$rootScope.onAppEvent('dashboard-saved', this.onPostSave.bind(this), $scope);\n  }\n\n  buildSectionList() {\n    this.sections = [];\n\n    if (this.dashboard.meta.canEdit) {\n      this.sections.push({\n        title: '通用',\n        id: 'settings',\n        icon: 'gicon gicon-preferences',\n      });\n      this.sections.push({\n        title: '注释',\n        id: 'annotations',\n        icon: 'gicon gicon-annotation',\n      });\n      this.sections.push({\n        title: '变量',\n        id: 'templating',\n        icon: 'gicon gicon-variable',\n      });\n      this.sections.push({\n        title: '链接',\n        id: 'links',\n        icon: 'gicon gicon-link',\n      });\n    }\n\n    if (this.dashboard.id && this.dashboard.meta.canSave) {\n      this.sections.push({\n        title: '版本',\n        id: 'versions',\n        icon: 'fa fa-fw fa-history',\n      });\n    }\n\n    if (this.dashboard.id && this.dashboard.meta.canAdmin) {\n      this.sections.push({\n        title: '权限',\n        id: 'permissions',\n        icon: 'fa fa-fw fa-lock',\n      });\n    }\n\n    if (this.dashboard.meta.canMakeEditable) {\n      this.sections.push({\n        title: '通用',\n        icon: 'gicon gicon-preferences',\n        id: 'make_editable',\n      });\n    }\n\n    this.sections.push({\n      title: 'JSON 模型',\n      id: 'dashboard_json',\n      icon: 'gicon gicon-json',\n    });\n\n    const params = this.$location.search();\n    const url = this.$location.path();\n\n    for (let section of this.sections) {\n      const sectionParams = _.defaults({ editview: section.id }, params);\n      section.url = config.appSubUrl + url + '?' + $.param(sectionParams);\n    }\n  }\n\n  onRouteUpdated() {\n    this.viewId = this.$location.search().editview;\n\n    if (this.viewId) {\n      this.json = angular.toJson(this.dashboard.getSaveModelClone(), true);\n    }\n\n    if (this.viewId === 'settings' && this.dashboard.meta.canMakeEditable) {\n      this.viewId = 'make_editable';\n    }\n\n    const currentSection = _.find(this.sections, { id: this.viewId });\n    if (!currentSection) {\n      this.sections.unshift({\n        title: '暂无',\n        id: '404',\n        icon: 'fa fa-fw fa-warning',\n      });\n      this.viewId = '404';\n    }\n  }\n\n  openSaveAsModal() {\n    this.dashboardSrv.showSaveAsModal();\n  }\n\n  saveDashboard() {\n    this.dashboardSrv.saveDashboard();\n  }\n\n  saveDashboardJson() {\n    this.dashboardSrv.saveJSONDashboard(this.json).then(() => {\n      this.$route.reload();\n    });\n  }\n\n  onPostSave() {\n    this.hasUnsavedFolderChange = false;\n  }\n\n  hideSettings() {\n    var urlParams = this.$location.search();\n    delete urlParams.editview;\n    setTimeout(() => {\n      this.$rootScope.$apply(() => {\n        this.$location.search(urlParams);\n      });\n    });\n  }\n\n  makeEditable() {\n    this.dashboard.editable = true;\n    this.dashboard.meta.canMakeEditable = false;\n    this.dashboard.meta.canEdit = true;\n    this.dashboard.meta.canSave = true;\n    this.canDelete = true;\n    this.viewId = 'settings';\n    this.buildSectionList();\n\n    const currentSection = _.find(this.sections, { id: this.viewId });\n    this.$location.url(currentSection.url);\n  }\n\n  deleteDashboard() {\n    var confirmText = '';\n    var text2 = this.dashboard.title;\n\n    const alerts = _.sumBy(this.dashboard.panels, panel => {\n      return panel.alert ? 1 : 0;\n    });\n\n    if (alerts > 0) {\n      confirmText = '删除';\n      text2 = `此仪表盘包含 ${alerts} 报警。 删除此仪表板也会删除这些报警`;\n    }\n\n    appEvents.emit('confirm-modal', {\n      title: '删除',\n      text: '希望删除此仪表盘?',\n      text2: text2,\n      icon: 'fa-trash',\n      confirmText: confirmText,\n      yesText: '删除',\n      onConfirm: () => {\n        this.dashboard.meta.canSave = false;\n        this.deleteDashboardConfirmed();\n      },\n    });\n  }\n\n  deleteDashboardConfirmed() {\n    this.backendSrv.deleteDashboard(this.dashboard.uid).then(() => {\n      appEvents.emit('alert-success', ['仪表盘已删除', this.dashboard.title + ' 已删除']);\n      this.$location.url('/');\n    });\n  }\n\n  onFolderChange(folder) {\n    this.dashboard.meta.folderId = folder.id;\n    this.dashboard.meta.folderTitle = folder.title;\n    this.hasUnsavedFolderChange = true;\n  }\n\n  getFolder() {\n    return {\n      id: this.dashboard.meta.folderId,\n      title: this.dashboard.meta.folderTitle,\n      url: this.dashboard.meta.folderUrl,\n    };\n  }\n}\n\nexport function dashboardSettings() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/settings/settings.html',\n    controller: SettingsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    transclude: true,\n    scope: { dashboard: '=' },\n  };\n}\n\ncoreModule.directive('dashboardSettings', dashboardSettings);\n","export class DashboardListCtrl {\n  navModel: any;\n\n  /** @ngInject */\n  constructor(navModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'manage-dashboards', 0);\n  }\n}\n","export class FolderPageLoader {\n  constructor(private backendSrv) {}\n\n  load(ctrl, uid, activeChildId) {\n    ctrl.navModel = {\n      main: {\n        icon: 'fa fa-folder-open',\n        id: 'manage-folder',\n        subTitle: '管理文件夹仪表盘与权限',\n        url: '',\n        text: '',\n        breadcrumbs: [{ title: '仪表盘', url: 'dashboards' }],\n        children: [\n          {\n            active: activeChildId === 'manage-folder-dashboards',\n            icon: 'fa fa-fw fa-th-large',\n            id: 'manage-folder-dashboards',\n            text: '仪表盘',\n            url: 'dashboards',\n          },\n          {\n            active: activeChildId === 'manage-folder-permissions',\n            icon: 'fa fa-fw fa-lock',\n            id: 'manage-folder-permissions',\n            text: '权限',\n            url: 'dashboards/permissions',\n          },\n          {\n            active: activeChildId === 'manage-folder-settings',\n            icon: 'fa fa-fw fa-cog',\n            id: 'manage-folder-settings',\n            text: '设置',\n            url: 'dashboards/settings',\n          },\n        ],\n      },\n    };\n\n    return this.backendSrv.getFolderByUid(uid).then(folder => {\n      ctrl.folderId = folder.id;\n      const folderTitle = folder.title;\n      const folderUrl = folder.url;\n      ctrl.navModel.main.text = folderTitle;\n\n      const dashTab = ctrl.navModel.main.children.find(child => child.id === 'manage-folder-dashboards');\n      dashTab.url = folderUrl;\n\n      if (folder.canAdmin) {\n        const permTab = ctrl.navModel.main.children.find(child => child.id === 'manage-folder-permissions');\n        permTab.url = folderUrl + '/permissions';\n\n        const settingsTab = ctrl.navModel.main.children.find(child => child.id === 'manage-folder-settings');\n        settingsTab.url = folderUrl + '/settings';\n      } else {\n        ctrl.navModel.main.children = [dashTab];\n      }\n\n      return folder;\n    });\n  }\n}\n","import { FolderPageLoader } from './folder_page_loader';\nimport locationUtil from 'app/core/utils/location_util';\n\nexport class FolderDashboardsCtrl {\n  navModel: any;\n  folderId: number;\n  uid: string;\n\n  /** @ngInject */\n  constructor(private backendSrv, navModelSrv, private $routeParams, $location) {\n    if (this.$routeParams.uid) {\n      this.uid = $routeParams.uid;\n\n      const loader = new FolderPageLoader(this.backendSrv);\n\n      loader.load(this, this.uid, 'manage-folder-dashboards').then(folder => {\n        const url = locationUtil.stripBaseFromUrl(folder.url);\n\n        if (url !== $location.path()) {\n          $location.path(url).replace();\n        }\n      });\n    }\n  }\n}\n","import { FolderPageLoader } from './folder_page_loader';\nimport appEvents from 'app/core/app_events';\n\nexport class FolderSettingsCtrl {\n  folderPageLoader: FolderPageLoader;\n  navModel: any;\n  folderId: number;\n  uid: string;\n  canSave = false;\n  folder: any;\n  title: string;\n  hasChanged: boolean;\n\n  /** @ngInject */\n  constructor(private backendSrv, navModelSrv, private $routeParams, private $location) {\n    if (this.$routeParams.uid) {\n      this.uid = $routeParams.uid;\n\n      this.folderPageLoader = new FolderPageLoader(this.backendSrv);\n      this.folderPageLoader.load(this, this.uid, 'manage-folder-settings').then(folder => {\n        if ($location.path() !== folder.meta.url) {\n          $location.path(`${folder.meta.url}/settings`).replace();\n        }\n\n        this.folder = folder;\n        this.canSave = this.folder.canSave;\n        this.title = this.folder.title;\n      });\n    }\n  }\n\n  save() {\n    this.titleChanged();\n\n    if (!this.hasChanged) {\n      return;\n    }\n\n    this.folder.title = this.title.trim();\n\n    return this.backendSrv\n      .updateFolder(this.folder)\n      .then(result => {\n        if (result.url !== this.$location.path()) {\n          this.$location.url(result.url + '/settings');\n        }\n\n        appEvents.emit('dashboard-saved');\n        appEvents.emit('alert-success', ['文件夹已保存']);\n      })\n      .catch(this.handleSaveFolderError);\n  }\n\n  titleChanged() {\n    this.hasChanged = this.folder.title.toLowerCase() !== this.title.trim().toLowerCase();\n  }\n\n  delete(evt) {\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n\n    appEvents.emit('confirm-modal', {\n      title: '删除',\n      text: `要删除此文件夹及其所有仪表盘吗?`,\n      icon: 'fa-trash',\n      yesText: '删除',\n      onConfirm: () => {\n        return this.backendSrv.deleteFolder(this.uid).then(() => {\n          appEvents.emit('alert-success', ['文件夹已删除', `${this.folder.title} 已被删除`]);\n          this.$location.url('dashboards');\n        });\n      },\n    });\n  }\n\n  handleSaveFolderError(err) {\n    if (err.data && err.data.status === 'version-mismatch') {\n      err.isHandled = true;\n\n      appEvents.emit('confirm-modal', {\n        title: '冲突',\n        text: '其他人已更新此文件夹。',\n        text2: '你还想保存这个文件夹吗?',\n        yesText: '保存 & 覆盖',\n        icon: 'fa-warning',\n        onConfirm: () => {\n          this.backendSrv.updateFolder(this.folder, { overwrite: true });\n        },\n      });\n    }\n  }\n}\n","import _ from 'lodash';\nimport config from 'app/core/config';\n\nexport class DashboardImportCtrl {\n  navModel: any;\n  step: number;\n  jsonText: string;\n  parseError: string;\n  nameExists: boolean;\n  uidExists: boolean;\n  dash: any;\n  inputs: any[];\n  inputsValid: boolean;\n  gnetUrl: string;\n  gnetError: string;\n  gnetInfo: any;\n  titleTouched: boolean;\n  hasNameValidationError: boolean;\n  nameValidationError: any;\n  hasUidValidationError: boolean;\n  uidValidationError: any;\n  autoGenerateUid: boolean;\n  autoGenerateUidValue: string;\n  folderId: number;\n  initialFolderTitle: string;\n  isValidFolderSelection: boolean;\n\n  /** @ngInject */\n  constructor(private backendSrv, private validationSrv, navModelSrv, private $location, $routeParams) {\n    this.navModel = navModelSrv.getNav('create', 'import');\n\n    this.step = 1;\n    this.nameExists = false;\n    this.uidExists = false;\n    this.autoGenerateUid = true;\n    this.autoGenerateUidValue = 'auto-generated';\n    this.folderId = $routeParams.folderId ? Number($routeParams.folderId) || 0 : null;\n    this.initialFolderTitle = '选择一个文件夹';\n\n    // check gnetId in url\n    if ($routeParams.gnetId) {\n      this.gnetUrl = $routeParams.gnetId;\n      this.checkGnetDashboard();\n    }\n  }\n\n  onUpload(dash) {\n    this.dash = dash;\n    this.dash.id = null;\n    this.step = 2;\n    this.inputs = [];\n\n    if (this.dash.__inputs) {\n      for (let input of this.dash.__inputs) {\n        var inputModel = {\n          name: input.name,\n          label: input.label,\n          info: input.description,\n          value: input.value,\n          type: input.type,\n          pluginId: input.pluginId,\n          options: [],\n        };\n\n        if (input.type === 'datasource') {\n          this.setDatasourceOptions(input, inputModel);\n        } else if (!inputModel.info) {\n          inputModel.info = '指定字符串常量';\n        }\n\n        this.inputs.push(inputModel);\n      }\n    }\n\n    this.inputsValid = this.inputs.length === 0;\n    this.titleChanged();\n    this.uidChanged(true);\n  }\n\n  setDatasourceOptions(input, inputModel) {\n    var sources = _.filter(config.datasources, val => {\n      return val.type === input.pluginId;\n    });\n\n    if (sources.length === 0) {\n      inputModel.info = '没有找到 ' + input.pluginName + ' 类型的数据源';\n    } else if (!inputModel.info) {\n      inputModel.info = '选择一个 ' + input.pluginName + ' 数据源';\n    }\n\n    inputModel.options = sources.map(val => {\n      return { text: val.name, value: val.name };\n    });\n  }\n\n  inputValueChanged() {\n    this.inputsValid = true;\n    for (let input of this.inputs) {\n      if (!input.value) {\n        this.inputsValid = false;\n      }\n    }\n  }\n\n  titleChanged() {\n    this.titleTouched = true;\n    this.nameExists = false;\n\n    this.validationSrv\n      .validateNewDashboardName(this.folderId, this.dash.title)\n      .then(() => {\n        this.nameExists = false;\n        this.hasNameValidationError = false;\n      })\n      .catch(err => {\n        if (err.type === 'EXISTING') {\n          this.nameExists = true;\n        }\n\n        this.hasNameValidationError = true;\n        this.nameValidationError = err.message;\n      });\n  }\n\n  uidChanged(initial) {\n    this.uidExists = false;\n    this.hasUidValidationError = false;\n\n    if (initial === true && this.dash.uid) {\n      this.autoGenerateUidValue = 'value set';\n    }\n\n    this.backendSrv\n      .getDashboardByUid(this.dash.uid)\n      .then(res => {\n        this.uidExists = true;\n        this.hasUidValidationError = true;\n        this.uidValidationError = `名为 '${res.dashboard.title}' 的仪表盘在文件夹 '${\n          res.meta.folderTitle\n        }' 中存在相同的 uid`;\n      })\n      .catch(err => {\n        err.isHandled = true;\n      });\n  }\n\n  onFolderChange(folder) {\n    this.folderId = folder.id;\n    this.titleChanged();\n  }\n\n  onEnterFolderCreation() {\n    this.inputsValid = false;\n  }\n\n  onExitFolderCreation() {\n    this.inputValueChanged();\n  }\n\n  isValid() {\n    return this.inputsValid && this.folderId !== null;\n  }\n\n  saveDashboard() {\n    var inputs = this.inputs.map(input => {\n      return {\n        name: input.name,\n        type: input.type,\n        pluginId: input.pluginId,\n        value: input.value,\n      };\n    });\n\n    return this.backendSrv\n      .post('api/dashboards/import', {\n        dashboard: this.dash,\n        overwrite: true,\n        inputs: inputs,\n        folderId: this.folderId,\n      })\n      .then(res => {\n        this.$location.url(res.importedUrl);\n      });\n  }\n\n  loadJsonText() {\n    try {\n      this.parseError = '';\n      var dash = JSON.parse(this.jsonText);\n      this.onUpload(dash);\n    } catch (err) {\n      console.log(err);\n      this.parseError = err.message;\n      return;\n    }\n  }\n\n  checkGnetDashboard() {\n    this.gnetError = '';\n\n    var match = /(^\\d+$)|dashboards\\/(\\d+)/.exec(this.gnetUrl);\n    var dashboardId;\n\n    if (match && match[1]) {\n      dashboardId = match[1];\n    } else if (match && match[2]) {\n      dashboardId = match[2];\n    } else {\n      this.gnetError = 'Could not find dashboard';\n    }\n\n    return this.backendSrv\n      .get('api/gnet/dashboards/' + dashboardId)\n      .then(res => {\n        this.gnetInfo = res;\n        // store reference to grafana.com\n        res.json.gnetId = res.id;\n        this.onUpload(res.json);\n      })\n      .catch(err => {\n        err.isHandled = true;\n        this.gnetError = err.data.message || err;\n      });\n  }\n\n  back() {\n    this.gnetUrl = '';\n    this.step = 1;\n    this.gnetError = '';\n    this.gnetInfo = '';\n  }\n}\n","import _ from 'lodash';\nimport coreModule from '../../core/core_module';\n\nexport class PlaylistsCtrl {\n  playlists: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'playlists', 0);\n\n    backendSrv.get('/api/playlists').then(result => {\n      this.playlists = result;\n    });\n  }\n\n  removePlaylistConfirmed(playlist) {\n    _.remove(this.playlists, { id: playlist.id });\n\n    this.backendSrv.delete('/api/playlists/' + playlist.id).then(\n      () => {\n        this.$scope.appEvent('alert-success', ['播放列表已删除', '']);\n      },\n      () => {\n        this.$scope.appEvent('alert-error', ['无法删除播放列表', '']);\n        this.playlists.push(playlist);\n      }\n    );\n  }\n\n  removePlaylist(playlist) {\n    this.$scope.appEvent('confirm-modal', {\n      title: '删除',\n      text: '确定想要删除播放列表 ' + playlist.name + '?',\n      yesText: '删除',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.removePlaylistConfirmed(playlist);\n      },\n    });\n  }\n}\n\ncoreModule.controller('PlaylistsCtrl', PlaylistsCtrl);\n","import appEvents from 'app/core/app_events';\nimport locationUtil from 'app/core/utils/location_util';\n\nexport class CreateFolderCtrl {\n  title = '';\n  navModel: any;\n  titleTouched = false;\n  hasValidationError: boolean;\n  validationError: any;\n\n  /** @ngInject **/\n  constructor(private backendSrv, private $location, private validationSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'manage-dashboards', 0);\n  }\n\n  create() {\n    if (this.hasValidationError) {\n      return;\n    }\n\n    return this.backendSrv.createFolder({ title: this.title }).then(result => {\n      appEvents.emit('alert-success', ['文件夹已创建', '完成']);\n      this.$location.url(locationUtil.stripBaseFromUrl(result.url));\n    });\n  }\n\n  titleChanged() {\n    this.titleTouched = true;\n\n    this.validationSrv\n      .validateNewFolderName(this.title)\n      .then(() => {\n        this.hasValidationError = false;\n      })\n      .catch(err => {\n        this.hasValidationError = true;\n        this.validationError = err.message;\n      });\n  }\n}\n","import './dashboard_ctrl';\nimport './alerting_srv';\nimport './history/history';\nimport './dashboard_loader_srv';\nimport './dashnav/dashnav';\nimport './submenu/submenu';\nimport './save_as_modal';\nimport './save_modal';\nimport './save_provisioned_modal';\nimport './shareModalCtrl';\nimport './share_snapshot_ctrl';\nimport './dashboard_srv';\nimport './view_state_srv';\nimport './validation_srv';\nimport './time_srv';\nimport './unsaved_changes_srv';\nimport './unsaved_changes_modal';\nimport './timepicker/timepicker';\nimport './upload';\nimport './export/export_modal';\nimport './export_data/export_data_modal';\nimport './ad_hoc_filters';\nimport './repeat_option/repeat_option';\nimport './dashgrid/DashboardGridDirective';\nimport './dashgrid/PanelLoader';\nimport './dashgrid/RowOptions';\nimport './folder_picker/folder_picker';\nimport './move_to_folder_modal/move_to_folder';\nimport './settings/settings';\n\nimport coreModule from 'app/core/core_module';\nimport { DashboardListCtrl } from './dashboard_list_ctrl';\nimport { FolderDashboardsCtrl } from './folder_dashboards_ctrl';\nimport { FolderSettingsCtrl } from './folder_settings_ctrl';\nimport { DashboardImportCtrl } from './dashboard_import_ctrl';\nimport { CreateFolderCtrl } from './create_folder_ctrl';\n\ncoreModule.controller('DashboardListCtrl', DashboardListCtrl);\ncoreModule.controller('FolderDashboardsCtrl', FolderDashboardsCtrl);\ncoreModule.controller('FolderSettingsCtrl', FolderSettingsCtrl);\ncoreModule.controller('DashboardImportCtrl', DashboardImportCtrl);\ncoreModule.controller('CreateFolderCtrl', CreateFolderCtrl);\n","import coreModule from '../../core/core_module';\n\nexport class PlaylistSearchCtrl {\n  query: any;\n  tagsMode: boolean;\n\n  searchStarted: any;\n\n  /** @ngInject */\n  constructor($timeout, private backendSrv) {\n    this.query = { query: '', tag: [], starred: false, limit: 30 };\n\n    $timeout(() => {\n      this.query.query = '';\n      this.query.type = 'dash-db';\n      this.searchDashboards();\n    }, 100);\n  }\n\n  searchDashboards() {\n    this.tagsMode = false;\n    var prom: any = {};\n\n    prom.promise = this.backendSrv.search(this.query).then(result => {\n      return {\n        dashboardResult: result,\n        tagResult: [],\n      };\n    });\n\n    this.searchStarted(prom);\n  }\n\n  showStarred() {\n    this.query.starred = !this.query.starred;\n    this.searchDashboards();\n  }\n\n  queryHasNoFilters() {\n    return this.query.query === '' && this.query.starred === false && this.query.tag.length === 0;\n  }\n\n  filterByTag(tag, evt) {\n    this.query.tag.push(tag);\n    this.searchDashboards();\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  getTags() {\n    var prom: any = {};\n    prom.promise = this.backendSrv.get('/api/dashboards/tags').then(result => {\n      return {\n        dashboardResult: [],\n        tagResult: result,\n      };\n    });\n\n    this.searchStarted(prom);\n  }\n}\n\nexport function playlistSearchDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/playlist/partials/playlist_search.html',\n    controller: PlaylistSearchCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      searchStarted: '&',\n    },\n  };\n}\n\ncoreModule.directive('playlistSearch', playlistSearchDirective);\n","import coreModule from '../../core/core_module';\nimport kbn from 'app/core/utils/kbn';\nimport appEvents from 'app/core/app_events';\n\nclass PlaylistSrv {\n  private cancelPromise: any;\n  private dashboards: any;\n  private index: number;\n  private interval: any;\n  private startUrl: string;\n  public isPlaying: boolean;\n\n  /** @ngInject */\n  constructor(private $location: any, private $timeout: any, private backendSrv: any, private $routeParams: any) {}\n\n  next() {\n    this.$timeout.cancel(this.cancelPromise);\n\n    var playedAllDashboards = this.index > this.dashboards.length - 1;\n\n    if (playedAllDashboards) {\n      window.location.href = this.getUrlWithKioskMode();\n      return;\n    }\n\n    var dash = this.dashboards[this.index];\n    this.$location.url('dashboard/' + dash.uri);\n\n    this.index++;\n    this.cancelPromise = this.$timeout(() => this.next(), this.interval);\n  }\n\n  getUrlWithKioskMode() {\n    const inKioskMode = document.body.classList.contains('page-kiosk-mode');\n\n    // check if should add kiosk query param\n    if (inKioskMode && this.startUrl.indexOf('kiosk') === -1) {\n      return this.startUrl + '?kiosk=true';\n    }\n\n    // check if should remove kiosk query param\n    if (!inKioskMode) {\n      return this.startUrl.split('?')[0];\n    }\n\n    // already has kiosk query param, just return startUrl\n    return this.startUrl;\n  }\n\n  prev() {\n    this.index = Math.max(this.index - 2, 0);\n    this.next();\n  }\n\n  start(playlistId) {\n    this.stop();\n\n    this.startUrl = window.location.href;\n    this.index = 0;\n    this.isPlaying = true;\n\n    if (this.$routeParams.kiosk) {\n      appEvents.emit('toggle-kiosk-mode');\n    }\n\n    this.backendSrv.get(`/api/playlists/${playlistId}`).then(playlist => {\n      this.backendSrv.get(`/api/playlists/${playlistId}/dashboards`).then(dashboards => {\n        this.dashboards = dashboards;\n        this.interval = kbn.interval_to_ms(playlist.interval);\n        this.next();\n      });\n    });\n  }\n\n  stop() {\n    this.index = 0;\n    this.isPlaying = false;\n\n    if (this.cancelPromise) {\n      this.$timeout.cancel(this.cancelPromise);\n    }\n  }\n}\n\ncoreModule.service('playlistSrv', PlaylistSrv);\n","import _ from 'lodash';\nimport coreModule from '../../core/core_module';\n\nexport class PlaylistEditCtrl {\n  filteredDashboards: any = [];\n  filteredTags: any = [];\n  searchQuery = '';\n  loading = false;\n  playlist: any = {\n    interval: '5m',\n  };\n\n  playlistItems: any = [];\n  dashboardresult: any = [];\n  tagresult: any = [];\n  navModel: any;\n  isNew: boolean;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, private $location, $route, navModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'playlists', 0);\n    this.isNew = $route.current.params.id;\n\n    if ($route.current.params.id) {\n      var playlistId = $route.current.params.id;\n\n      backendSrv.get('/api/playlists/' + playlistId).then(result => {\n        this.playlist = result;\n        this.navModel.node = {\n          text: result.name,\n          icon: this.navModel.node.icon,\n        };\n        this.navModel.breadcrumbs.push(this.navModel.node);\n      });\n\n      backendSrv.get('/api/playlists/' + playlistId + '/items').then(result => {\n        this.playlistItems = result;\n      });\n    } else {\n      this.navModel.node = {\n        text: 'New playlist',\n        icon: this.navModel.node.icon,\n      };\n      this.navModel.breadcrumbs.push(this.navModel.node);\n    }\n  }\n\n  filterFoundPlaylistItems() {\n    this.filteredDashboards = _.reject(this.dashboardresult, playlistItem => {\n      return _.find(this.playlistItems, listPlaylistItem => {\n        return parseInt(listPlaylistItem.value) === playlistItem.id;\n      });\n    });\n\n    this.filteredTags = _.reject(this.tagresult, tag => {\n      return _.find(this.playlistItems, listPlaylistItem => {\n        return listPlaylistItem.value === tag.term;\n      });\n    });\n  }\n\n  addPlaylistItem(playlistItem) {\n    playlistItem.value = playlistItem.id.toString();\n    playlistItem.type = 'dashboard_by_id';\n    playlistItem.order = this.playlistItems.length + 1;\n\n    this.playlistItems.push(playlistItem);\n    this.filterFoundPlaylistItems();\n  }\n\n  addTagPlaylistItem(tag) {\n    var playlistItem: any = {\n      value: tag.term,\n      type: 'dashboard_by_tag',\n      order: this.playlistItems.length + 1,\n      title: tag.term,\n    };\n\n    this.playlistItems.push(playlistItem);\n    this.filterFoundPlaylistItems();\n  }\n\n  removePlaylistItem(playlistItem) {\n    _.remove(this.playlistItems, listedPlaylistItem => {\n      return playlistItem === listedPlaylistItem;\n    });\n    this.filterFoundPlaylistItems();\n  }\n\n  savePlaylist(playlist, playlistItems) {\n    var savePromise;\n\n    playlist.items = playlistItems;\n\n    savePromise = playlist.id\n      ? this.backendSrv.put('/api/playlists/' + playlist.id, playlist)\n      : this.backendSrv.post('/api/playlists', playlist);\n\n    savePromise.then(\n      () => {\n        this.$scope.appEvent('alert-success', ['播放列表已保存', '']);\n        this.$location.path('/playlists');\n      },\n      () => {\n        this.$scope.appEvent('alert-error', ['无法保存播放列表', '']);\n      }\n    );\n  }\n\n  isPlaylistEmpty() {\n    return !this.playlistItems.length;\n  }\n\n  backToList() {\n    this.$location.path('/playlists');\n  }\n\n  searchStarted(promise) {\n    promise.then(data => {\n      this.dashboardresult = data.dashboardResult;\n      this.tagresult = data.tagResult;\n      this.filterFoundPlaylistItems();\n    });\n  }\n\n  movePlaylistItem(playlistItem, offset) {\n    var currentPosition = this.playlistItems.indexOf(playlistItem);\n    var newPosition = currentPosition + offset;\n\n    if (newPosition >= 0 && newPosition < this.playlistItems.length) {\n      this.playlistItems.splice(currentPosition, 1);\n      this.playlistItems.splice(newPosition, 0, playlistItem);\n    }\n  }\n\n  movePlaylistItemUp(playlistItem) {\n    this.movePlaylistItem(playlistItem, -1);\n  }\n\n  movePlaylistItemDown(playlistItem) {\n    this.movePlaylistItem(playlistItem, 1);\n  }\n}\n\ncoreModule.controller('PlaylistEditCtrl', PlaylistEditCtrl);\n","import angular from 'angular';\n\n/** @ngInject */\nfunction grafanaRoutes($routeProvider) {\n  $routeProvider\n    .when('/playlists', {\n      templateUrl: 'public/app/features/playlist/partials/playlists.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistsCtrl',\n    })\n    .when('/playlists/create', {\n      templateUrl: 'public/app/features/playlist/partials/playlist.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistEditCtrl',\n    })\n    .when('/playlists/edit/:id', {\n      templateUrl: 'public/app/features/playlist/partials/playlist.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistEditCtrl',\n    })\n    .when('/playlists/play/:id', {\n      templateUrl: 'public/app/features/playlist/partials/playlists.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistsCtrl',\n      resolve: {\n        init: function(playlistSrv, $route) {\n          let playlistId = $route.current.params.id;\n          playlistSrv.start(playlistId);\n        },\n      },\n    });\n}\n\nangular.module('grafana.routes').config(grafanaRoutes);\n","import './playlists_ctrl';\nimport './playlist_search';\nimport './playlist_srv';\nimport './playlist_edit_ctrl';\nimport './playlist_routes';\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class SnapshotsCtrl {\n  navModel: any;\n  snapshots: any;\n\n  /** @ngInject */\n  constructor(private $rootScope, private backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'snapshots', 0);\n    this.backendSrv.get('/api/dashboard/snapshots').then(result => {\n      this.snapshots = result;\n    });\n  }\n\n  removeSnapshotConfirmed(snapshot) {\n    _.remove(this.snapshots, { key: snapshot.key });\n    this.backendSrv.delete('/api/snapshots/' + snapshot.key).then(\n      () => {},\n      () => {\n        this.snapshots.push(snapshot);\n      }\n    );\n  }\n\n  removeSnapshot(snapshot) {\n    this.$rootScope.appEvent('confirm-modal', {\n      title: '删除',\n      text: '确定要删除快照： ' + snapshot.name + '?',\n      yesText: '删除',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.removeSnapshotConfirmed(snapshot);\n      },\n    });\n  }\n}\n\nangular.module('grafana.controllers').controller('SnapshotsCtrl', SnapshotsCtrl);\n","import $ from 'jquery';\nimport { coreModule } from 'app/core/core';\n\nvar template = `\n<span class=\"panel-title\">\n  <span class=\"icon-gf panel-alert-icon\"></span>\n  <span class=\"panel-title-text\">{{ctrl.panel.title | interpolateTemplateVars:this}}</span>\n  <span class=\"panel-menu-container dropdown\">\n    <span class=\"fa fa-caret-down panel-menu-toggle\" data-toggle=\"dropdown\"></span>\n    <ul class=\"dropdown-menu dropdown-menu--menu panel-menu\" role=\"menu\">\n      <li>\n        <a ng-click=\"ctrl.addDataQuery(datasource);\">\n          <i class=\"fa fa-cog\"></i> 编辑 <span class=\"dropdown-menu-item-shortcut\">e</span>\n        </a>\n      </li>\n      <li class=\"dropdown-submenu\">\n        <a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-cube\"></i> Actions</a>\n        <ul class=\"dropdown-menu panel-menu\">\n          <li><a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-flash\"></i> 添加注释</a></li>\n          <li><a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-bullseye\"></i> 切换图例</a></li>\n          <li><a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-download\"></i> 导出CSV</a></li>\n          <li><a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-eye\"></i> 查看JSON</a></li>\n        </ul>\n      </li>\n      <li><a ng-click=\"ctrl.addDataQuery(datasource);\"><i class=\"fa fa-trash\"></i> 移除</a></li>\n    </ul>\n  </span>\n  <span class=\"panel-time-info\" ng-if=\"ctrl.timeInfo\"><i class=\"fa fa-clock-o\"></i> {{ctrl.timeInfo}}</span>\n</span>`;\n\nfunction renderMenuItem(item, ctrl) {\n  let html = '';\n  let listItemClass = '';\n\n  if (item.divider) {\n    return '<li class=\"divider\"></li>';\n  }\n\n  if (item.submenu) {\n    listItemClass = 'dropdown-submenu';\n  }\n\n  html += `<li class=\"${listItemClass}\"><a `;\n\n  if (item.click) {\n    html += ` ng-click=\"${item.click}\"`;\n  }\n  if (item.href) {\n    html += ` href=\"${item.href}\"`;\n  }\n\n  html += `><i class=\"${item.icon}\"></i>`;\n  html += `<span class=\"dropdown-item-text\">${item.text}</span>`;\n\n  if (item.shortcut) {\n    html += `<span class=\"dropdown-menu-item-shortcut\">${item.shortcut}</span>`;\n  }\n\n  html += `</a>`;\n\n  if (item.submenu) {\n    html += '<ul class=\"dropdown-menu dropdown-menu--menu panel-menu\">';\n    for (let subitem of item.submenu) {\n      html += renderMenuItem(subitem, ctrl);\n    }\n    html += '</ul>';\n  }\n\n  html += `</li>`;\n  return html;\n}\n\nfunction createMenuTemplate(ctrl) {\n  let html = '';\n\n  for (let item of ctrl.getMenu()) {\n    html += renderMenuItem(item, ctrl);\n  }\n\n  return html;\n}\n\n/** @ngInject **/\nfunction panelHeader($compile) {\n  return {\n    restrict: 'E',\n    template: template,\n    link: function(scope, elem, attrs) {\n      let menuElem = elem.find('.panel-menu');\n      let menuScope;\n      let isDragged;\n\n      elem.click(function(evt) {\n        const targetClass = evt.target.className;\n\n        // remove existing scope\n        if (menuScope) {\n          menuScope.$destroy();\n        }\n\n        menuScope = scope.$new();\n        let menuHtml = createMenuTemplate(scope.ctrl);\n        menuElem.html(menuHtml);\n        $compile(menuElem)(menuScope);\n\n        if (targetClass.indexOf('panel-title-text') >= 0 || targetClass.indexOf('panel-title') >= 0) {\n          togglePanelMenu(evt);\n        }\n      });\n\n      elem.find('.panel-menu-toggle').click(() => {\n        togglePanelStackPosition();\n      });\n\n      function togglePanelMenu(e) {\n        if (!isDragged) {\n          e.stopPropagation();\n          togglePanelStackPosition();\n          elem.find('[data-toggle=dropdown]').dropdown('toggle');\n        }\n      }\n\n      /**\n       * Hack for adding special class 'dropdown-menu-open' to the panel.\n       * This class sets z-index for panel and prevents menu overlapping.\n       */\n      function togglePanelStackPosition() {\n        const menuOpenClass = 'dropdown-menu-open';\n        const panelGridClass = '.react-grid-item.panel';\n\n        let panelElem = elem\n          .find('[data-toggle=dropdown]')\n          .parentsUntil('.panel')\n          .parent();\n        let menuElem = elem.find('[data-toggle=dropdown]').parent();\n        panelElem = panelElem && panelElem.length ? panelElem[0] : undefined;\n        if (panelElem) {\n          panelElem = $(panelElem);\n          $(panelGridClass).removeClass(menuOpenClass);\n          let state = !menuElem.hasClass('open');\n          panelElem.toggleClass(menuOpenClass, state);\n        }\n      }\n\n      let mouseX, mouseY;\n      elem.mousedown(e => {\n        mouseX = e.pageX;\n        mouseY = e.pageY;\n      });\n\n      elem.mouseup(e => {\n        if (mouseX === e.pageX && mouseY === e.pageY) {\n          isDragged = false;\n        } else {\n          isDragged = true;\n        }\n      });\n    },\n  };\n}\n\ncoreModule.directive('panelHeader', panelHeader);\n","import angular from 'angular';\nimport $ from 'jquery';\nimport Drop from 'tether-drop';\nimport baron from 'baron';\n\nvar module = angular.module('grafana.directives');\n\nvar panelTemplate = `\n  <div class=\"panel-container\">\n    <div class=\"panel-header\" ng-class=\"{'grid-drag-handle': !ctrl.fullscreen}\">\n      <span class=\"panel-info-corner\">\n        <i class=\"fa\"></i>\n        <span class=\"panel-info-corner-inner\"></span>\n      </span>\n\n      <span class=\"panel-loading\" ng-show=\"ctrl.loading\">\n        <i class=\"fa fa-spinner fa-spin\"></i>\n      </span>\n\n      <panel-header class=\"panel-title-container\" panel-ctrl=\"ctrl\"></panel-header>\n    </div>\n\n    <div class=\"panel-content\">\n      <ng-transclude class=\"panel-height-helper\"></ng-transclude>\n    </div>\n  </div>\n\n  <div class=\"panel-full-edit\" ng-if=\"ctrl.editMode\">\n    <div class=\"tabbed-view tabbed-view--panel-edit\">\n      <div class=\"tabbed-view-header\">\n        <h3 class=\"tabbed-view-panel-title\">\n          {{ctrl.pluginName}}\n        </h3>\n\n        <ul class=\"gf-tabs\">\n          <li class=\"gf-tabs-item\" ng-repeat=\"tab in ::ctrl.editorTabs\">\n            <a class=\"gf-tabs-link\" ng-click=\"ctrl.changeTab($index)\" ng-class=\"{active: ctrl.editorTabIndex === $index}\">\n              {{::tab.title}}\n            </a>\n          </li>\n        </ul>\n\n        <button class=\"tabbed-view-close-btn\" ng-click=\"ctrl.exitFullscreen();\">\n          <i class=\"fa fa-remove\"></i>\n        </button>\n      </div>\n\n      <div class=\"tabbed-view-body\">\n        <div ng-repeat=\"tab in ctrl.editorTabs\" ng-if=\"ctrl.editorTabIndex === $index\">\n          <panel-editor-tab editor-tab=\"tab\" ctrl=\"ctrl\" index=\"$index\"></panel-editor-tab>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n\nmodule.directive('grafanaPanel', function($rootScope, $document, $timeout) {\n  return {\n    restrict: 'E',\n    template: panelTemplate,\n    transclude: true,\n    scope: { ctrl: '=' },\n    link: function(scope, elem) {\n      var panelContainer = elem.find('.panel-container');\n      var panelContent = elem.find('.panel-content');\n      var cornerInfoElem = elem.find('.panel-info-corner');\n      var ctrl = scope.ctrl;\n      var infoDrop;\n      var panelScrollbar;\n\n      // the reason for handling these classes this way is for performance\n      // limit the watchers on panels etc\n      var transparentLastState = false;\n      var lastHasAlertRule = false;\n      var lastAlertState;\n      var hasAlertRule;\n\n      function mouseEnter() {\n        panelContainer.toggleClass('panel-hover-highlight', true);\n        ctrl.dashboard.setPanelFocus(ctrl.panel.id);\n      }\n\n      function mouseLeave() {\n        panelContainer.toggleClass('panel-hover-highlight', false);\n        ctrl.dashboard.setPanelFocus(0);\n      }\n\n      function panelHeightUpdated() {\n        panelContent.css({ height: ctrl.height + 'px' });\n      }\n\n      function resizeScrollableContent() {\n        if (panelScrollbar) {\n          panelScrollbar.update();\n        }\n      }\n\n      // set initial transparency\n      if (ctrl.panel.transparent) {\n        transparentLastState = true;\n        panelContainer.addClass('panel-transparent', true);\n      }\n\n      // update scrollbar after mounting\n      ctrl.events.on('component-did-mount', () => {\n        if (ctrl.__proto__.constructor.scrollable) {\n          const scrollRootClass = 'baron baron__root baron__clipper panel-content--scrollable';\n          const scrollerClass = 'baron__scroller';\n          const scrollBarHTML = `\n            <div class=\"baron__track\">\n              <div class=\"baron__bar\"></div>\n            </div>\n          `;\n\n          let scrollRoot = panelContent;\n          let scroller = panelContent.find(':first').find(':first');\n\n          scrollRoot.addClass(scrollRootClass);\n          $(scrollBarHTML).appendTo(scrollRoot);\n          scroller.addClass(scrollerClass);\n\n          panelScrollbar = baron({\n            root: scrollRoot[0],\n            scroller: scroller[0],\n            bar: '.baron__bar',\n            barOnCls: '_scrollbar',\n            scrollingCls: '_scrolling',\n          });\n\n          panelScrollbar.scroll();\n        }\n      });\n\n      ctrl.events.on('panel-size-changed', () => {\n        ctrl.calculatePanelHeight();\n        panelHeightUpdated();\n        $timeout(() => {\n          resizeScrollableContent();\n          ctrl.render();\n        });\n      });\n\n      // set initial height\n      ctrl.calculatePanelHeight();\n      panelHeightUpdated();\n\n      ctrl.events.on('render', () => {\n        if (transparentLastState !== ctrl.panel.transparent) {\n          panelContainer.toggleClass('panel-transparent', ctrl.panel.transparent === true);\n          transparentLastState = ctrl.panel.transparent;\n        }\n\n        hasAlertRule = ctrl.panel.alert !== undefined;\n        if (lastHasAlertRule !== hasAlertRule) {\n          panelContainer.toggleClass('panel-has-alert', hasAlertRule);\n\n          lastHasAlertRule = hasAlertRule;\n        }\n\n        if (ctrl.alertState) {\n          if (lastAlertState) {\n            panelContainer.removeClass('panel-alert-state--' + lastAlertState);\n          }\n\n          if (ctrl.alertState.state === 'ok' || ctrl.alertState.state === 'alerting') {\n            panelContainer.addClass('panel-alert-state--' + ctrl.alertState.state);\n          }\n\n          lastAlertState = ctrl.alertState.state;\n        } else if (lastAlertState) {\n          panelContainer.removeClass('panel-alert-state--' + lastAlertState);\n          lastAlertState = null;\n        }\n      });\n\n      function updatePanelCornerInfo() {\n        var cornerMode = ctrl.getInfoMode();\n        cornerInfoElem[0].className = 'panel-info-corner panel-info-corner--' + cornerMode;\n\n        if (cornerMode) {\n          if (infoDrop) {\n            infoDrop.destroy();\n          }\n\n          infoDrop = new Drop({\n            target: cornerInfoElem[0],\n            content: function() {\n              return ctrl.getInfoContent({ mode: 'tooltip' });\n            },\n            classes: ctrl.error ? 'drop-error' : 'drop-help',\n            openOn: 'hover',\n            hoverOpenDelay: 100,\n            tetherOptions: {\n              attachment: 'bottom left',\n              targetAttachment: 'top left',\n              constraints: [\n                {\n                  to: 'window',\n                  attachment: 'together',\n                  pin: true,\n                },\n              ],\n            },\n          });\n        }\n      }\n\n      scope.$watchGroup(['ctrl.error', 'ctrl.panel.description'], updatePanelCornerInfo);\n      scope.$watchCollection('ctrl.panel.links', updatePanelCornerInfo);\n\n      cornerInfoElem.on('click', function() {\n        infoDrop.close();\n        scope.$apply(ctrl.openInspector.bind(ctrl));\n      });\n\n      elem.on('mouseenter', mouseEnter);\n      elem.on('mouseleave', mouseLeave);\n\n      scope.$on('$destroy', function() {\n        elem.off();\n        cornerInfoElem.off();\n\n        if (infoDrop) {\n          infoDrop.destroy();\n        }\n\n        if (panelScrollbar) {\n          panelScrollbar.dispose();\n        }\n      });\n    },\n  };\n});\n\nmodule.directive('panelHelpCorner', function($rootScope) {\n  return {\n    restrict: 'E',\n    template: `\n    <span class=\"alert-error panel-error small pointer\" ng-if=\"ctrl.error\" ng-click=\"ctrl.openInspector()\">\n    <span data-placement=\"top\" bs-tooltip=\"ctrl.error\">\n    <i class=\"fa fa-exclamation\"></i><span class=\"panel-error-arrow\"></span>\n    </span>\n    </span>\n    `,\n    link: function(scope, elem) {},\n  };\n});\n","import angular from 'angular';\nimport locationUtil from 'app/core/utils/location_util';\nimport appEvents from 'app/core/app_events';\n\nexport class SoloPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $routeParams, $location, dashboardLoaderSrv, contextSrv, backendSrv) {\n    var panelId;\n\n    $scope.init = function() {\n      contextSrv.sidemenu = false;\n      appEvents.emit('toggle-sidemenu-hidden');\n\n      var params = $location.search();\n      panelId = parseInt(params.panelId);\n\n      $scope.onAppEvent('dashboard-initialized', $scope.initPanelScope);\n\n      // if no uid, redirect to new route based on slug\n      if (!($routeParams.type === 'script' || $routeParams.type === 'snapshot') && !$routeParams.uid) {\n        backendSrv.getDashboardBySlug($routeParams.slug).then(res => {\n          if (res) {\n            const url = locationUtil.stripBaseFromUrl(res.meta.url.replace('/d/', '/d-solo/'));\n            $location.path(url).replace();\n          }\n        });\n        return;\n      }\n\n      dashboardLoaderSrv.loadDashboard($routeParams.type, $routeParams.slug, $routeParams.uid).then(function(result) {\n        result.meta.soloMode = true;\n        $scope.initDashboard(result, $scope);\n      });\n    };\n\n    $scope.initPanelScope = function() {\n      let panelInfo = $scope.dashboard.getPanelInfoById(panelId);\n\n      // fake row ctrl scope\n      $scope.ctrl = {\n        dashboard: $scope.dashboard,\n      };\n\n      $scope.panel = panelInfo.panel;\n      $scope.panel.soloMode = true;\n      $scope.$index = 0;\n\n      if (!$scope.panel) {\n        $scope.appEvent('alert-error', ['未找到面板', '']);\n        return;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.routes').controller('SoloPanelCtrl', SoloPanelCtrl);\n","import angular from 'angular';\n\nvar directiveModule = angular.module('grafana.directives');\n\n/** @ngInject */\nfunction panelEditorTab(dynamicDirectiveSrv) {\n  return dynamicDirectiveSrv.create({\n    scope: {\n      ctrl: '=',\n      editorTab: '=',\n      index: '=',\n    },\n    directive: scope => {\n      var pluginId = scope.ctrl.pluginId;\n      var tabIndex = scope.index;\n      // create a wrapper for directiveFn\n      // required for metrics tab directive\n      // that is the same for many panels but\n      // given different names in this function\n      var fn = () => scope.editorTab.directiveFn();\n\n      return Promise.resolve({\n        name: `panel-editor-tab-${pluginId}${tabIndex}`,\n        fn: fn,\n      });\n    },\n  });\n}\n\ndirectiveModule.directive('panelEditorTab', panelEditorTab);\n","import angular from 'angular';\n\nvar module = angular.module('grafana.directives');\n\nexport class QueryRowCtrl {\n  collapsedText: string;\n  canCollapse: boolean;\n  getCollapsedText: any;\n  target: any;\n  queryCtrl: any;\n  panelCtrl: any;\n  panel: any;\n  collapsed: any;\n\n  constructor() {\n    this.panelCtrl = this.queryCtrl.panelCtrl;\n    this.target = this.queryCtrl.target;\n    this.panel = this.panelCtrl.panel;\n\n    if (!this.target.refId) {\n      this.target.refId = this.panelCtrl.dashboard.getNextQueryLetter(this.panel);\n    }\n\n    this.toggleCollapse(true);\n    if (this.target.isNew) {\n      delete this.target.isNew;\n      this.toggleCollapse(false);\n    }\n\n    if (this.panel.targets.length < 4) {\n      this.collapsed = false;\n    }\n  }\n\n  toggleHideQuery() {\n    this.target.hide = !this.target.hide;\n    this.panelCtrl.refresh();\n  }\n\n  toggleCollapse(init) {\n    if (!this.canCollapse) {\n      return;\n    }\n\n    if (!this.panelCtrl.__collapsedQueryCache) {\n      this.panelCtrl.__collapsedQueryCache = {};\n    }\n\n    if (init) {\n      this.collapsed = this.panelCtrl.__collapsedQueryCache[this.target.refId] !== false;\n    } else {\n      this.collapsed = !this.collapsed;\n      this.panelCtrl.__collapsedQueryCache[this.target.refId] = this.collapsed;\n    }\n\n    try {\n      this.collapsedText = this.queryCtrl.getCollapsedText();\n    } catch (e) {\n      var err = e.message || e.toString();\n      this.collapsedText = 'Error: ' + err;\n    }\n  }\n\n  toggleEditorMode() {\n    if (this.canCollapse && this.collapsed) {\n      this.collapsed = false;\n    }\n\n    this.queryCtrl.toggleEditorMode();\n  }\n\n  removeQuery() {\n    if (this.panelCtrl.__collapsedQueryCache) {\n      delete this.panelCtrl.__collapsedQueryCache[this.target.refId];\n    }\n\n    this.panelCtrl.removeQuery(this.target);\n  }\n\n  duplicateQuery() {\n    var clone = angular.copy(this.target);\n    this.panelCtrl.addQuery(clone);\n  }\n\n  moveQuery(direction) {\n    this.panelCtrl.moveQuery(this.target, direction);\n  }\n}\n\n/** @ngInject **/\nfunction queryEditorRowDirective() {\n  return {\n    restrict: 'E',\n    controller: QueryRowCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/panel/partials/query_editor_row.html',\n    transclude: true,\n    scope: {\n      queryCtrl: '=',\n      canCollapse: '=',\n      hasTextEditMode: '=',\n    },\n  };\n}\n\nmodule.directive('queryEditorRow', queryEditorRowDirective);\n","import _ from 'lodash';\nimport appEvents from 'app/core/app_events';\nimport { coreModule, JsonExplorer } from 'app/core/core';\n\nconst template = `\n<div class=\"query-troubleshooter\" ng-if=\"ctrl.isOpen\">\n  <div class=\"query-troubleshooter__header\">\n    <a class=\"pointer\" ng-click=\"ctrl.toggleMocking()\">模拟响应</a>\n    <a class=\"pointer\" ng-click=\"ctrl.toggleExpand()\" ng-hide=\"ctrl.allNodesExpanded\">\n      <i class=\"fa fa-plus-square-o\"></i> 展开全部\n    </a>\n    <a class=\"pointer\" ng-click=\"ctrl.toggleExpand()\" ng-show=\"ctrl.allNodesExpanded\">\n      <i class=\"fa fa-minus-square-o\"></i> 折叠全部\n    </a>\n    <a class=\"pointer\" clipboard-button=\"ctrl.getClipboardText()\"><i class=\"fa fa-clipboard\"></i> 复制到剪贴板</a>\n  </div>\n  <div class=\"query-troubleshooter__body\" ng-hide=\"ctrl.isMocking\">\n    <i class=\"fa fa-spinner fa-spin\" ng-show=\"ctrl.isLoading\"></i>\n    <div class=\"query-troubleshooter-json\"></div>\n  </div>\n  <div class=\"query-troubleshooter__body\" ng-show=\"ctrl.isMocking\">\n    <div class=\"gf-form p-l-1 gf-form--v-stretch\">\n\t\t\t<textarea class=\"gf-form-input\" style=\"width: 95%\" rows=\"10\" ng-model=\"ctrl.mockedResponse\"  placeholder=\"JSON\"></textarea>\n    </div>\n  </div>\n</div>\n`;\n\nexport class QueryTroubleshooterCtrl {\n  isOpen: any;\n  isLoading: boolean;\n  showResponse: boolean;\n  panelCtrl: any;\n  renderJsonExplorer: (data) => void;\n  onRequestErrorEventListener: any;\n  onRequestResponseEventListener: any;\n  hasError: boolean;\n  allNodesExpanded: boolean;\n  isMocking: boolean;\n  mockedResponse: string;\n  jsonExplorer: JsonExplorer;\n\n  /** @ngInject **/\n  constructor($scope, private $timeout) {\n    this.onRequestErrorEventListener = this.onRequestError.bind(this);\n    this.onRequestResponseEventListener = this.onRequestResponse.bind(this);\n\n    appEvents.on('ds-request-response', this.onRequestResponseEventListener);\n    appEvents.on('ds-request-error', this.onRequestErrorEventListener);\n\n    $scope.$on('$destroy', this.removeEventsListeners.bind(this));\n    $scope.$watch('ctrl.isOpen', this.stateChanged.bind(this));\n  }\n\n  removeEventsListeners() {\n    appEvents.off('ds-request-response', this.onRequestResponseEventListener);\n    appEvents.off('ds-request-error', this.onRequestErrorEventListener);\n  }\n\n  toggleMocking() {\n    this.isMocking = !this.isMocking;\n  }\n\n  onRequestError(err) {\n    // ignore if closed\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.isOpen = true;\n    this.hasError = true;\n    this.onRequestResponse(err);\n  }\n\n  stateChanged() {\n    if (this.isOpen) {\n      this.panelCtrl.refresh();\n      this.isLoading = true;\n    }\n  }\n\n  getClipboardText(): string {\n    if (this.jsonExplorer) {\n      return JSON.stringify(this.jsonExplorer.json, null, 2);\n    }\n    return '';\n  }\n\n  handleMocking(data) {\n    var mockedData;\n    try {\n      mockedData = JSON.parse(this.mockedResponse);\n    } catch (err) {\n      appEvents.emit('alert-error', ['无法解析模拟的响应']);\n      return;\n    }\n\n    data.data = mockedData;\n  }\n\n  onRequestResponse(data) {\n    // ignore if closed\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this.isMocking) {\n      this.handleMocking(data);\n      return;\n    }\n\n    this.isLoading = false;\n    data = _.cloneDeep(data);\n\n    if (data.headers) {\n      delete data.headers;\n    }\n\n    if (data.config) {\n      data.request = data.config;\n      delete data.config;\n      delete data.request.transformRequest;\n      delete data.request.transformResponse;\n      delete data.request.paramSerializer;\n      delete data.request.jsonpCallbackParam;\n      delete data.request.headers;\n      delete data.request.requestId;\n      delete data.request.inspect;\n      delete data.request.retry;\n      delete data.request.timeout;\n    }\n\n    if (data.data) {\n      data.response = data.data;\n\n      if (data.status === 200) {\n        // if we are in error state, assume we automatically opened\n        // and auto close it again\n        if (this.hasError) {\n          this.hasError = false;\n          this.isOpen = false;\n        }\n      }\n\n      delete data.data;\n      delete data.status;\n      delete data.statusText;\n      delete data.$$config;\n    }\n\n    this.$timeout(_.partial(this.renderJsonExplorer, data));\n  }\n\n  toggleExpand(depth) {\n    if (this.jsonExplorer) {\n      this.allNodesExpanded = !this.allNodesExpanded;\n      this.jsonExplorer.openAtDepth(this.allNodesExpanded ? 20 : 1);\n    }\n  }\n}\n\nexport function queryTroubleshooter() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: QueryTroubleshooterCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n      isOpen: '=',\n    },\n    link: function(scope, elem, attrs, ctrl) {\n      ctrl.renderJsonExplorer = function(data) {\n        var jsonElem = elem.find('.query-troubleshooter-json');\n\n        ctrl.jsonExplorer = new JsonExplorer(data, 3, {\n          animateOpen: true,\n        });\n\n        const html = ctrl.jsonExplorer.render(true);\n        jsonElem.html(html);\n      };\n    },\n  };\n}\n\ncoreModule.directive('queryTroubleshooter', queryTroubleshooter);\n","import './panel_header';\nimport './panel_directive';\nimport './solo_panel_ctrl';\nimport './query_ctrl';\nimport './panel_editor_tab';\nimport './query_editor_row';\nimport './query_troubleshooter';\n","import config from 'app/core/config';\nimport coreModule from 'app/core/core_module';\nimport Remarkable from 'remarkable';\nimport _ from 'lodash';\n\nexport class OrgUsersCtrl {\n  unfiltered: any;\n  users: any;\n  pendingInvites: any;\n  editor: any;\n  navModel: any;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n  externalUserMngInfo: string;\n  canInvite: boolean;\n  searchQuery: string;\n  showInvites: boolean;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, navModelSrv, $sce) {\n    this.navModel = navModelSrv.getNav('cfg', 'users', 0);\n\n    this.get();\n    this.externalUserMngLinkUrl = config.externalUserMngLinkUrl;\n    this.externalUserMngLinkName = config.externalUserMngLinkName;\n    this.canInvite = !config.disableLoginForm && !config.externalUserMngLinkName;\n\n    // render external user management info markdown\n    if (config.externalUserMngInfo) {\n      this.externalUserMngInfo = new Remarkable({\n        linkTarget: '__blank',\n      }).render(config.externalUserMngInfo);\n    }\n  }\n\n  get() {\n    this.backendSrv.get('/api/org/users').then(users => {\n      this.users = users;\n      this.unfiltered = users;\n    });\n    this.backendSrv.get('/api/org/invites').then(pendingInvites => {\n      this.pendingInvites = pendingInvites;\n    });\n  }\n\n  onQueryUpdated() {\n    let regex = new RegExp(this.searchQuery, 'ig');\n    this.users = _.filter(this.unfiltered, item => {\n      return regex.test(item.email) || regex.test(item.login);\n    });\n  }\n\n  updateOrgUser(user) {\n    this.backendSrv.patch('/api/org/users/' + user.userId, user);\n  }\n\n  removeUser(user) {\n    this.$scope.appEvent('confirm-modal', {\n      title: '删除',\n      text: '您确定要删除用户 ' + user.login + '?',\n      yesText: '删除',\n      icon: 'fa-warning',\n      onConfirm: () => {\n        this.removeUserConfirmed(user);\n      },\n    });\n  }\n\n  removeUserConfirmed(user) {\n    this.backendSrv.delete('/api/org/users/' + user.userId).then(this.get.bind(this));\n  }\n\n  revokeInvite(invite, evt) {\n    evt.stopPropagation();\n    this.backendSrv.patch('/api/org/invites/' + invite.code + '/revoke').then(this.get.bind(this));\n  }\n\n  copyInviteToClipboard(evt) {\n    evt.stopPropagation();\n  }\n\n  getInviteUrl(invite) {\n    return invite.url;\n  }\n}\n\ncoreModule.controller('OrgUsersCtrl', OrgUsersCtrl);\n","import config from 'app/core/config';\nimport { coreModule } from 'app/core/core';\n\nexport class ProfileCtrl {\n  user: any;\n  old_theme: any;\n  orgs: any = [];\n  userForm: any;\n  showOrgsList = false;\n  readonlyLoginFields = config.disableLoginForm;\n  navModel: any;\n\n  /** @ngInject **/\n  constructor(private backendSrv, private contextSrv, private $location, navModelSrv) {\n    this.getUser();\n    this.getUserOrgs();\n    this.navModel = navModelSrv.getNav('profile', 'profile-settings', 0);\n  }\n\n  getUser() {\n    this.backendSrv.get('/api/user').then(user => {\n      this.user = user;\n      this.user.theme = user.theme || 'dark';\n    });\n  }\n\n  getUserOrgs() {\n    this.backendSrv.get('/api/user/orgs').then(orgs => {\n      this.orgs = orgs;\n      this.showOrgsList = orgs.length > 1;\n    });\n  }\n\n  setUsingOrg(org) {\n    this.backendSrv.post('/api/user/using/' + org.orgId).then(() => {\n      window.location.href = config.appSubUrl + '/profile';\n    });\n  }\n\n  update() {\n    if (!this.userForm.$valid) {\n      return;\n    }\n\n    this.backendSrv.put('/api/user/', this.user).then(() => {\n      this.contextSrv.user.name = this.user.name || this.user.login;\n      if (this.old_theme !== this.user.theme) {\n        window.location.href = config.appSubUrl + this.$location.path();\n      }\n    });\n  }\n}\n\ncoreModule.controller('ProfileCtrl', ProfileCtrl);\n","import angular from 'angular';\nimport config from 'app/core/config';\n\nexport class SelectOrgCtrl {\n  /** @ngInject **/\n  constructor($scope, backendSrv, contextSrv) {\n    contextSrv.sidemenu = false;\n\n    $scope.navModel = {\n      main: {\n        icon: 'gicon gicon-branding',\n        subTitle: '偏好',\n        text: '选择活跃组织',\n      },\n    };\n\n    $scope.init = function() {\n      $scope.getUserOrgs();\n    };\n\n    $scope.getUserOrgs = function() {\n      backendSrv.get('/api/user/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.setUsingOrg = function(org) {\n      backendSrv.post('/api/user/using/' + org.orgId).then(function() {\n        window.location.href = config.appSubUrl + '/';\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('SelectOrgCtrl', SelectOrgCtrl);\n","import angular from 'angular';\nimport config from 'app/core/config';\n\nexport class NewOrgCtrl {\n  /** @ngInject **/\n  constructor($scope, $http, backendSrv, navModelSrv) {\n    $scope.navModel = navModelSrv.getNav('cfg', 'admin', 'global-orgs', 1);\n    $scope.newOrg = { name: '' };\n\n    $scope.createOrg = function() {\n      backendSrv.post('/api/orgs/', $scope.newOrg).then(function(result) {\n        backendSrv.post('/api/user/using/' + result.orgId).then(function() {\n          window.location.href = config.appSubUrl + '/org';\n        });\n      });\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('NewOrgCtrl', NewOrgCtrl);\n","import angular from 'angular';\nimport config from 'app/core/config';\n\nexport class ChangePasswordCtrl {\n  /** @ngInject **/\n  constructor($scope, backendSrv, $location, navModelSrv) {\n    $scope.command = {};\n    $scope.authProxyEnabled = config.authProxyEnabled;\n    $scope.ldapEnabled = config.ldapEnabled;\n    $scope.navModel = navModelSrv.getNav('profile', 'change-password', 0);\n\n    $scope.changePassword = function() {\n      if (!$scope.userForm.$valid) {\n        return;\n      }\n\n      if ($scope.command.newPassword !== $scope.command.confirmNew) {\n        $scope.appEvent('alert-warning', ['新旧密码不匹配', '']);\n        return;\n      }\n\n      backendSrv.put('/api/user/password', $scope.command).then(function() {\n        $location.path('profile');\n      });\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('ChangePasswordCtrl', ChangePasswordCtrl);\n","import coreModule from 'app/core/core_module';\n\nexport class UserInviteCtrl {\n  navModel: any;\n  invite: any;\n  inviteForm: any;\n\n  /** @ngInject **/\n  constructor(private backendSrv, navModelSrv, private $location) {\n    this.navModel = navModelSrv.getNav('cfg', 'users', 0);\n\n    this.invite = {\n      name: '',\n      email: '',\n      role: 'Editor',\n      sendEmail: true,\n    };\n  }\n\n  sendInvite() {\n    if (!this.inviteForm.$valid) {\n      return;\n    }\n\n    return this.backendSrv.post('/api/org/invites', this.invite).then(() => {\n      this.$location.path('org/users/');\n    });\n  }\n}\n\ncoreModule.controller('UserInviteCtrl', UserInviteCtrl);\n","import coreModule from 'app/core/core_module';\n\nexport default class CreateTeamCtrl {\n  name: string;\n  email: string;\n  navModel: any;\n\n  /** @ngInject **/\n  constructor(private backendSrv, private $location, navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'teams', 0);\n  }\n\n  create() {\n    const payload = {\n      name: this.name,\n      email: this.email,\n    };\n    this.backendSrv.post('/api/teams', payload).then(result => {\n      if (result.teamId) {\n        this.$location.path('/org/teams/edit/' + result.teamId);\n      }\n    });\n  }\n}\n\ncoreModule.controller('CreateTeamCtrl', CreateTeamCtrl);\n","import angular from 'angular';\n\nexport class OrgApiKeysCtrl {\n  /** @ngInject **/\n  constructor($scope, $http, backendSrv, navModelSrv) {\n    $scope.navModel = navModelSrv.getNav('cfg', 'apikeys', 0);\n\n    $scope.roleTypes = [{text: '观看者', value: 'Viewer'}, {text: '编辑者', value: 'Editor'},{text: '管理员', value: 'Admin'}];\n    $scope.token = { role: 'Viewer' };\n\n    $scope.init = function() {\n      $scope.getTokens();\n    };\n\n    $scope.getTokens = function() {\n      backendSrv.get('/api/auth/keys').then(function(tokens) {\n        angular.forEach(tokens, (obj, index) => {\n          angular.forEach($scope.roleTypes, (obj2, index2) => {\n            if (obj.role === obj2.value) {\n              tokens[index].roleText = obj2.text;\n            }\n          });\n        });\n        $scope.tokens = tokens;\n      });\n    };\n\n    $scope.removeToken = function(id) {\n      backendSrv.delete('/api/auth/keys/' + id).then($scope.getTokens);\n    };\n\n    $scope.addToken = function() {\n      backendSrv.post('/api/auth/keys', $scope.token).then(function(result) {\n        var modalScope = $scope.$new(true);\n        modalScope.key = result.key;\n        modalScope.rootPath = window.location.origin + $scope.$root.appSubUrl;\n\n        $scope.appEvent('show-modal', {\n          src: 'public/app/features/org/partials/apikeyModal.html',\n          scope: modalScope,\n        });\n\n        $scope.getTokens();\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('OrgApiKeysCtrl', OrgApiKeysCtrl);\n","import angular from 'angular';\n\nexport class OrgDetailsCtrl {\n  /** @ngInject **/\n  constructor($scope, $http, backendSrv, contextSrv, navModelSrv) {\n    $scope.init = function() {\n      $scope.getOrgInfo();\n      $scope.navModel = navModelSrv.getNav('cfg', 'org-settings', 0);\n    };\n\n    $scope.getOrgInfo = function() {\n      backendSrv.get('/api/org').then(function(org) {\n        $scope.org = org;\n        $scope.address = org.address;\n        contextSrv.user.orgName = org.name;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.orgForm.$valid) {\n        return;\n      }\n      var data = { name: $scope.org.name };\n      backendSrv.put('/api/org', data).then($scope.getOrgInfo);\n    };\n\n    $scope.updateAddress = function() {\n      if (!$scope.addressForm.$valid) {\n        return;\n      }\n      backendSrv.put('/api/org/address', $scope.address).then($scope.getOrgInfo);\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('OrgDetailsCtrl', OrgDetailsCtrl);\n","import config from 'app/core/config';\nimport coreModule from 'app/core/core_module';\n\nexport class PrefsControlCtrl {\n  prefs: any;\n  oldTheme: any;\n  prefsForm: any;\n  mode: string;\n\n  timezones: any = [\n    { value: '', text: '默认' },\n    { value: 'browser', text: '本地浏览器时间' },\n    { value: 'utc', text: 'UTC' },\n  ];\n  themes: any = [{ value: '', text: '默认' }, { value: 'dark', text: 'Dark' }, { value: 'light', text: 'Light' }];\n\n  /** @ngInject **/\n  constructor(private backendSrv, private $location) {}\n\n  $onInit() {\n    return this.backendSrv.get(`/api/${this.mode}/preferences`).then(prefs => {\n      this.prefs = prefs;\n      this.oldTheme = prefs.theme;\n    });\n  }\n\n  updatePrefs() {\n    if (!this.prefsForm.$valid) {\n      return;\n    }\n\n    var cmd = {\n      theme: this.prefs.theme,\n      timezone: this.prefs.timezone,\n      homeDashboardId: this.prefs.homeDashboardId,\n    };\n\n    this.backendSrv.put(`/api/${this.mode}/preferences`, cmd).then(() => {\n      window.location.href = config.appSubUrl + this.$location.path();\n    });\n  }\n}\n\nvar template = `\n<form name=\"ctrl.prefsForm\" class=\"section gf-form-group\">\n  <h3 class=\"page-heading\">偏好</h3>\n\n  <div class=\"gf-form\">\n    <span class=\"gf-form-label width-11\">UI主题</span>\n    <div class=\"gf-form-select-wrapper max-width-20\">\n      <select class=\"gf-form-input\" ng-model=\"ctrl.prefs.theme\" ng-options=\"f.value as f.text for f in ctrl.themes\"></select>\n    </div>\n  </div>\n\n  <div class=\"gf-form\">\n    <span class=\"gf-form-label width-11\">\n      主页仪表盘\n      <info-popover mode=\"right-normal\">\n        找不到你想要的仪表板？ 首先加注星标收藏，然后它将出现在此下拉框中。\n      </info-popover>\n    </span>\n    <dashboard-selector class=\"gf-form-select-wrapper max-width-20\" model=\"ctrl.prefs.homeDashboardId\">\n    </dashboard-selector>\n  </div>\n\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-11\">时区</label>\n    <div class=\"gf-form-select-wrapper max-width-20\">\n      <select class=\"gf-form-input\" ng-model=\"ctrl.prefs.timezone\" ng-options=\"f.value as f.text for f in ctrl.timezones\"></select>\n    </div>\n  </div>\n\n  <div class=\"gf-form-button-row\">\n    <button type=\"submit\" class=\"btn btn-success\" ng-click=\"ctrl.updatePrefs()\">保存</button>\n  </div>\n</form>\n`;\n\nexport function prefsControlDirective() {\n  return {\n    restrict: 'E',\n    controller: PrefsControlCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    template: template,\n    scope: {\n      mode: '@',\n    },\n  };\n}\n\ncoreModule.directive('prefsControl', prefsControlDirective);\n","import './org_users_ctrl';\nimport './profile_ctrl';\nimport './org_users_ctrl';\nimport './select_org_ctrl';\nimport './change_password_ctrl';\nimport './new_org_ctrl';\nimport './user_invite_ctrl';\nimport './create_team_ctrl';\nimport './org_api_keys_ctrl';\nimport './org_details_ctrl';\nimport './prefs_control';\n","export default class AdminListUsersCtrl {\n  users: any;\n  pages = [];\n  perPage = 50;\n  page = 1;\n  totalPages: number;\n  showPaging = false;\n  query: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'admin', 'global-users', 1);\n    this.query = '';\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.backendSrv\n      .get(`/api/users/search?perpage=${this.perPage}&page=${this.page}&query=${this.query}`)\n      .then(result => {\n        this.users = result.users;\n        this.page = result.page;\n        this.perPage = result.perPage;\n        this.totalPages = Math.ceil(result.totalCount / result.perPage);\n        this.showPaging = this.totalPages > 1;\n        this.pages = [];\n\n        for (var i = 1; i < this.totalPages + 1; i++) {\n          this.pages.push({ page: i, current: i === this.page });\n        }\n      });\n  }\n\n  navigateToPage(page) {\n    this.page = page.page;\n    this.getUsers();\n  }\n\n  deleteUser(user) {\n    this.$scope.appEvent('confirm-modal', {\n      title: '删除',\n      text: '确定希望删除 ' + user.login + '?',\n      icon: 'fa-trash',\n      yesText: '删除',\n      onConfirm: () => {\n        this.backendSrv.delete('/api/admin/users/' + user.id).then(() => {\n          this.getUsers();\n        });\n      },\n    });\n  }\n}\n","import angular from 'angular';\n\nexport class AdminListOrgsCtrl {\n  /** @ngInject */\n  constructor($scope, backendSrv, navModelSrv) {\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getNav('cfg', 'admin', 'global-orgs', 1);\n      $scope.getOrgs();\n    };\n\n    $scope.getOrgs = function() {\n      backendSrv.get('/api/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.deleteOrg = function(org) {\n      $scope.appEvent('confirm-modal', {\n        title: '删除',\n        text: '希望删除组织 ' + org.name + '?',\n        text2: '该组织下的所有仪表盘也会被删除!',\n        icon: 'fa-trash',\n        yesText: '删除',\n        onConfirm: function() {\n          backendSrv.delete('/api/orgs/' + org.id).then(function() {\n            $scope.getOrgs();\n          });\n        },\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('AdminListOrgsCtrl', AdminListOrgsCtrl);\n","import angular from 'angular';\n\nexport class AdminEditOrgCtrl {\n  /** @ngInject */\n  constructor($scope, $routeParams, backendSrv, $location, navModelSrv) {\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getNav('cfg', 'admin', 'global-orgs', 1);\n\n      if ($routeParams.id) {\n        $scope.getOrg($routeParams.id);\n        $scope.getOrgUsers($routeParams.id);\n      }\n    };\n\n    $scope.getOrg = function(id) {\n      backendSrv.get('/api/orgs/' + id).then(function(org) {\n        $scope.org = org;\n      });\n    };\n\n    $scope.getOrgUsers = function(id) {\n      backendSrv.get('/api/orgs/' + id + '/users').then(function(orgUsers) {\n        $scope.orgUsers = orgUsers;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.orgDetailsForm.$valid) {\n        return;\n      }\n\n      backendSrv.put('/api/orgs/' + $scope.org.id, $scope.org).then(function() {\n        $location.path('/admin/orgs');\n      });\n    };\n\n    $scope.updateOrgUser = function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId, orgUser);\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId).then(function() {\n        $scope.getOrgUsers($scope.org.id);\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('AdminEditOrgCtrl', AdminEditOrgCtrl);\n","import angular from 'angular';\nimport _ from 'lodash';\n\nexport class AdminEditUserCtrl {\n  /** @ngInject */\n  constructor($scope, $routeParams, backendSrv, $location, navModelSrv) {\n    $scope.user = {};\n    $scope.newOrg = { name: '', role: 'Editor' };\n    $scope.permissions = {};\n    $scope.navModel = navModelSrv.getNav('cfg', 'admin', 'global-users', 1);\n\n    $scope.init = function() {\n      if ($routeParams.id) {\n        $scope.getUser($routeParams.id);\n        $scope.getUserOrgs($routeParams.id);\n      }\n    };\n\n    $scope.getUser = function(id) {\n      backendSrv.get('/api/users/' + id).then(function(user) {\n        $scope.user = user;\n        $scope.user_id = id;\n        $scope.permissions.isGrafanaAdmin = user.isGrafanaAdmin;\n      });\n    };\n\n    $scope.setPassword = function() {\n      if (!$scope.passwordForm.$valid) {\n        return;\n      }\n\n      var payload = { password: $scope.password };\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/password', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updatePermissions = function() {\n      var payload = $scope.permissions;\n\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/permissions', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.create = function() {\n      if (!$scope.userForm.$valid) {\n        return;\n      }\n\n      backendSrv.post('/api/admin/users', $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.getUserOrgs = function(id) {\n      backendSrv.get('/api/users/' + id + '/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.userForm.$valid) {\n        return;\n      }\n\n      backendSrv.put('/api/users/' + $scope.user_id, $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updateOrgUser = function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id, orgUser).then(function() {});\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id).then(function() {\n        $scope.getUser($scope.user_id);\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.orgsSearchCache = [];\n\n    $scope.searchOrgs = function(queryStr, callback) {\n      if ($scope.orgsSearchCache.length > 0) {\n        callback(_.map($scope.orgsSearchCache, 'name'));\n        return;\n      }\n\n      backendSrv.get('/api/orgs', { query: '' }).then(function(result) {\n        $scope.orgsSearchCache = result;\n        callback(_.map(result, 'name'));\n      });\n    };\n\n    $scope.addOrgUser = function() {\n      if (!$scope.addOrgForm.$valid) {\n        return;\n      }\n\n      var orgInfo = _.find($scope.orgsSearchCache, {\n        name: $scope.newOrg.name,\n      });\n      if (!orgInfo) {\n        return;\n      }\n\n      $scope.newOrg.loginOrEmail = $scope.user.login;\n\n      backendSrv.post('/api/orgs/' + orgInfo.id + '/users/', $scope.newOrg).then(function() {\n        $scope.getUser($scope.user_id);\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('AdminEditUserCtrl', AdminEditUserCtrl);\n","import AdminListUsersCtrl from './admin_list_users_ctrl';\nimport './admin_list_orgs_ctrl';\nimport './admin_edit_org_ctrl';\nimport './admin_edit_user_ctrl';\n\nimport coreModule from 'app/core/core_module';\n\nclass AdminSettingsCtrl {\n  navModel: any;\n\n  /** @ngInject **/\n  constructor($scope, backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'admin', 'server-settings', 1);\n\n    backendSrv.get('/api/admin/settings').then(function(settings) {\n      $scope.settings = settings;\n    });\n  }\n}\n\nclass AdminHomeCtrl {\n  navModel: any;\n\n  /** @ngInject **/\n  constructor(navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'admin', 1);\n  }\n}\n\nexport class AdminStatsCtrl {\n  stats: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(backendSrv: any, navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'admin', 'server-stats', 1);\n\n    backendSrv.get('/api/admin/stats').then(stats => {\n      this.stats = stats;\n    });\n  }\n}\n\ncoreModule.controller('AdminSettingsCtrl', AdminSettingsCtrl);\ncoreModule.controller('AdminHomeCtrl', AdminHomeCtrl);\ncoreModule.controller('AdminStatsCtrl', AdminStatsCtrl);\ncoreModule.controller('AdminListUsersCtrl', AdminListUsersCtrl);\n","import { coreModule } from 'app/core/core';\n\nexport class AlertNotificationsListCtrl {\n  notifications: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv, navModelSrv) {\n    this.loadNotifications();\n    this.navModel = navModelSrv.getNav('alerting', 'channels', 0);\n  }\n\n  loadNotifications() {\n    this.backendSrv.get(`/api/alert-notifications`).then(result => {\n      this.notifications = result;\n    });\n  }\n\n  deleteNotification(id) {\n    this.backendSrv.delete(`/api/alert-notifications/${id}`).then(() => {\n      this.notifications = this.notifications.filter(notification => {\n        return notification.id !== id;\n      });\n    });\n  }\n}\n\ncoreModule.controller('AlertNotificationsListCtrl', AlertNotificationsListCtrl);\n","import _ from 'lodash';\nimport { appEvents, coreModule } from 'app/core/core';\n\nexport class AlertNotificationEditCtrl {\n  theForm: any;\n  navModel: any;\n  testSeverity = 'critical';\n  notifiers: any;\n  notifierTemplateId: string;\n  isNew: boolean;\n  model: any;\n  defaults: any = {\n    type: 'email',\n    settings: {\n      httpMethod: 'POST',\n      autoResolve: true,\n      uploadImage: true,\n    },\n    isDefault: false,\n  };\n\n  /** @ngInject */\n  constructor(private $routeParams, private backendSrv, private $location, private $templateCache, navModelSrv) {\n    this.navModel = navModelSrv.getNav('alerting', 'channels', 0);\n    this.isNew = !this.$routeParams.id;\n\n    this.backendSrv\n      .get(`/api/alert-notifiers`)\n      .then(notifiers => {\n        this.notifiers = notifiers;\n\n        // add option templates\n        for (let notifier of this.notifiers) {\n          this.$templateCache.put(this.getNotifierTemplateId(notifier.type), notifier.optionsTemplate);\n        }\n\n        if (!this.$routeParams.id) {\n          this.navModel.breadcrumbs.push({ text: 'New channel' });\n          this.navModel.node = { text: 'New channel' };\n          return _.defaults(this.model, this.defaults);\n        }\n\n        return this.backendSrv.get(`/api/alert-notifications/${this.$routeParams.id}`).then(result => {\n          this.navModel.breadcrumbs.push({ text: result.name });\n          this.navModel.node = { text: result.name };\n          result.settings = _.defaults(result.settings, this.defaults.settings);\n          return result;\n        });\n      })\n      .then(model => {\n        this.model = model;\n        this.notifierTemplateId = this.getNotifierTemplateId(this.model.type);\n      });\n  }\n\n  save() {\n    if (!this.theForm.$valid) {\n      return;\n    }\n\n    if (this.model.id) {\n      this.backendSrv\n        .put(`/api/alert-notifications/${this.model.id}`, this.model)\n        .then(res => {\n          this.model = res;\n          appEvents.emit('alert-success', ['通知已更新', '']);\n        })\n        .catch(err => {\n          if (err.data && err.data.error) {\n            appEvents.emit('alert-error', [err.data.error]);\n          }\n        });\n    } else {\n      this.backendSrv\n        .post(`/api/alert-notifications`, this.model)\n        .then(res => {\n          appEvents.emit('alert-success', ['通知已创建', '']);\n          this.$location.path('alerting/notifications');\n        })\n        .catch(err => {\n          if (err.data && err.data.error) {\n            appEvents.emit('alert-error', [err.data.error]);\n          }\n        });\n    }\n  }\n\n  getNotifierTemplateId(type) {\n    return `notifier-options-${type}`;\n  }\n\n  typeChanged() {\n    this.model.settings = _.defaults({}, this.defaults.settings);\n    this.notifierTemplateId = this.getNotifierTemplateId(this.model.type);\n  }\n\n  testNotification() {\n    if (!this.theForm.$valid) {\n      return;\n    }\n\n    var payload = {\n      name: this.model.name,\n      type: this.model.type,\n      settings: this.model.settings,\n    };\n\n    this.backendSrv.post(`/api/alert-notifications/test`, payload).then(res => {\n      appEvents.emit('alert-success', ['通知测试已发出', '']);\n    });\n  }\n}\n\ncoreModule.controller('AlertNotificationEditCtrl', AlertNotificationEditCtrl);\n","import './notifications_list_ctrl';\nimport './notification_edit_ctrl';\n","import coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\n\nclass StyleGuideCtrl {\n  theme: string;\n  buttonNames = ['primary', 'secondary', 'inverse', 'success', 'warning', 'danger'];\n  buttonSizes = ['btn-small', '', 'btn-large'];\n  buttonVariants = ['-'];\n  navModel: any;\n\n  /** @ngInject **/\n  constructor(private $routeParams, private backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'admin', 'styleguide', 1);\n    this.theme = config.bootData.user.lightTheme ? 'light' : 'dark';\n  }\n\n  switchTheme() {\n    this.$routeParams.theme = this.theme === 'dark' ? 'light' : 'dark';\n\n    var cmd = {\n      theme: this.$routeParams.theme,\n    };\n\n    this.backendSrv.put('/api/user/preferences', cmd).then(() => {\n      window.location.href = window.location.href;\n    });\n  }\n}\n\ncoreModule.controller('StyleGuideCtrl', StyleGuideCtrl);\n","import './panellinks/module';\nimport './dashlinks/module';\nimport './annotations/all';\nimport './templating/all';\nimport './plugins/all';\nimport './dashboard/all';\nimport './playlist/all';\nimport './snapshot/all';\nimport './panel/all';\nimport './org/all';\nimport './admin/admin';\nimport './alerting/all';\nimport './styleguide/styleguide';\n"],"sourceRoot":""}